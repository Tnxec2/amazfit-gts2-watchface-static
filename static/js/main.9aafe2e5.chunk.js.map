{"version":3,"sources":["app/main/previewComponent.module.css","app/main/JsonComponent.module.css","app/context/index.ts","app/shared/color.tsx","app/model/types.model.ts","app/model/json.model.tsx","app/model/watchFace.model.tsx","app/main/fileLoader.component.tsx","app/shared/draganddroplist.component.tsx","app/shared/constant.tsx","app/shared/selectFileList.component.tsx","app/Blocks/imageDigit.component.tsx","app/Blocks/systemFont.component.tsx","app/Blocks/systemFontCircle.component.tsx","app/Blocks/activityDigit.component.tsx","app/Blocks/clockHand.component.tsx","app/Blocks/imageCoords.component.tsx","app/Blocks/imageProgress.component.tsx","app/Blocks/progressbarCircle.component.tsx","app/Blocks/progressbarLinear.component.tsx","app/Blocks/activity.component.tsx","app/Blocks/activitylist.component.tsx","app/Blocks/background.component.tsx","app/Blocks/date.component.tsx","app/Blocks/status.component.tsx","app/Blocks/timeAnalog.component.tsx","app/Blocks/multiLangImageCoords.component.tsx","app/Blocks/timeDigital.component.tsx","app/main/screennormal.component.tsx","app/model/weather.states.tsx","app/main/previewstates.component.tsx","app/Blocks/backgroundaod.component.tsx","app/Blocks/dateaod.component.tsx","app/Blocks/timeAnalogAOD.component.tsx","app/Blocks/timeDigitalAOD.component.tsx","app/main/aod.component.tsx","app/main/json.component.tsx","app/Blocks/multiLangImage.component.tsx","app/Blocks/widgetElement.component.tsx","app/Blocks/widget.component.tsx","app/main/widgets.component.tsx","app/main/leftside.component.tsx","app/main/elementOrder.component.tsx","app/main/canvas.function.tsx","app/shared/helper.tsx","app/main/preview/imageCoords.element.tsx","app/main/preview/digitImage.element.tsx","app/main/preview/systemfont.element.tsx","app/main/preview/digit.element.tsx","app/main/preview/pointer.element.tsx","app/main/preview/progressBarCircle.element.tsx","app/main/preview/activity.element.tsx","app/main/preview/imageProgress.element.tsx","app/main/preview/progressBarLinear.element.tsx","app/main/preview/date.element.tsx","app/main/preview/clockHand.element.tsx","app/main/preview/timeAnalog.element.tsx","app/main/preview/multiLangImageCoords.element.tsx","app/main/preview/timeDigital.element.tsx","app/main/preview/widgets.element.ts","app/main/preview.component.tsx","app/main/preview/background.element.ts","app/main/preview/status.element.tsx","app/main/preview/backgroundaod.element.ts","app/main/uploadedImages.component.tsx","app/main/rightside.component.tsx","app/model/watchState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","WatchfaceContext","createContext","colorRegex","Color","hex","result","exec","r","parseInt","g","b","toString","padStart","color","length","substring","firstByteS","secondByteS","firstByte","secondByte","this","rgbToHex","h","hexToRgb","toUpperCase","test","JsonType","index","json","LangCodeType","undefined","Zh","Object","values","find","val","ZhHant","All","AlignmentType","Left","Center","Right","FollowType","Follow","Single","CommonType","Default","Min","Max","ImageProgressDisplayType","Continuous","DateType","Year","Month","Day","TimeType","Hour","Minute","Second","ActivityType","Date","Battery","Steps","Calories","HeartRate","Pai","Distance","StandUp","Weather","UVindex","AirQuality","Humidity","Sunrise","WindForce","Altitude","AirPressure","Stress","ActivityGoal","FatBurning","TypeOfDigit","Coordinates","X","Y","ImageSetGTR2","ImageIndex","ImagesCount","Widgets","Widget","TopMaskImageIndex","UnderMaskImageIndex","Unknown4","ImageCoord","ImageIndex2","ImageIndex3","Width","Height","WidgetElement","BorderActivImageIndex","BorderInactivImageIndex","DescriptionImageBackground","DescriptionWidthCheck","Preview","Activity","ImageProgress","ImageSet","DisplayType","ProgressBar","AngleSettings","LinearSettings","ForegroundImageIndex","Flatness","PointerImageIndex","BackgroundImageIndex","StartX","StartY","EndX","EndY","Unknown5","StartAngle","EndAngle","Radius","ClockHand","Scale","Pointer","Cover","Unknown16","MultilangImageCoord","LangCode","Text","Image","SystemFont","Alignment","Spacing","PaddingZero","DisplayFormAnalog","NoDataImageIndex","MultilangImage","DecimalPointImageIndex","MultilangImageUnit","DelimiterImageIndex","MultilangImageUnitMile","FontRotate","Angle","Size","colorWrite","ShowUnitCheck","RotateDirection","DigitalDigit","Type","CombingMode","Digit","Separator","digitTypes","hour","type","count","numberLenght","displayAnalog","imageProgressTotal","unit","separator","timeDelimiter","title","min","sec","year","month","monthasword","day","weekday","battery","steps","titleMin","calories","heartRate","pai","distance","decimalDelimiter","standUp","uvIndex","airQuality","humidity","sunrise","titleDefault","titleMax","windForce","airPressure","stress","activityGoal","fatBurning","weather","Background","imageIndex","previewIndex","WatchImageCoords","j","enabled","WatchMultilangImageCoords","WatchImageProgress","WatchCommonDigit","d","con","enabledImage","enabledSystemFont","enabledSystemFontCircle","DATE","toJson","TIME","COMMON","WatchClockHand","WatchDialFace","hoursDigital","minutesDigital","secondsDigital","hoursClockhand","minutesClockhand","secondsClockhand","am","pm","WatchDate","monthAsWord","weekDay","WatchStatus","s","bluetooth","dnd","alarm","lock","Bluetooth","Lock","DoNotDisturb","Alarm","WatchProgressBar","enabledLinear","enabledCircle","jsonObj","WatchActivity","dt","key","digit","digitMin","digitMax","imageProgress","pointerProgress","progressBar","icon","shortcut","getTime","ElementOrderItem","jsonType","WatchAOD","dialFace","date","activitylist","backgroundImageIndex","orderElements","orderElementsDate","newOrderElementsTime","DialFace","DigitalDialFace","Digits","forEach","push","AM","PM","AnalogDialFace","Hours","Minutes","newOrderElementsDate","DateDigits","el","WeeksDigits","getActivityListFromJson","getActivityFromJson","a","atype","_activity","_dt","PointerProgress","Icon","Shortcut","ar","_a","findByJson","WatchWidgets","WatchFace","background","activity","status","widgets","aod","orderElementsActivity","colorBackgroundRead","ix","item","Seconds","System","Status","ScreenIdle","FileLoaderComponent","useContext","images","setImages","setWatchface","setJsonName","onLoadJson","e","target","JSON","parse","w","getImages","files","clearInput","filename","name","base","lastIndexOf","id","isNaN","img","addEventListener","src","URL","createObjectURL","alt","image","document","getElementById","value","className","multiple","accept","onChange","event","file","fr","FileReader","onload","readAsText","Button","onClick","initialDnDState","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","DnDListComponent","_list","updateOrder","useState","dragAndDrop","setDragAndDrop","onDragStart","initialPosition","Number","currentTarget","dataset","position","dataTransfer","setData","onDragOver","preventDefault","newList","itemDragged","remainingItems","filter","slice","onDrop","onDragLeave","map","data-position","draggable","reactItem","Constant","max","resultIndex","startImageIndex","alert","NONE","width","height","deviceId","SelectFileListComponent","setSelectedFileIndex","collapsed","setCollapsed","onFileSelected","options","i","disabled","ImageDigitComponent","onUpdate","showNoData","showDecimalPointer","showDelimiter","paddingZeroFix","followDisabled","onCopyFromNormal","imageSetIndex","useMemo","findImageIndex","unitImageSetIndex","findIndex","Card","Header","checked","digitimage","Body","style","clear","float","fromJson","SystemFontComponent","colorRead","defaultValue","SystemFontCircleComponent","toFixed","ActivityDigitComponent","ClockHandComponent","clockHand","showAngle","scaleImageSetIndex","ch","ImageCoordsComponent","imageCoords","ic","ip","x","y","ImageProgressComponent","coords","changeX","changeY","ProgressbarCircleCodmponent","pb","v","Math","abs","pBar","selected","ProgressbarLinearCodmponent","ActivityComponent","onUpdateActivity","showProgress","onCopy","onDelete","stopPropagation","ActivityListComponent","activitys","activityToAdd","setActivityToAdd","keys","findByIndex","al","updateActivity","window","confirm","splice","deleteActivity","list","BackgroundComponent","watchface","DateComponent","updateDay","updateDate","updateMonth","updateYear","wdf","StatusComponent","updateStatus","TimeAnalogComponent","MultilangImageCoordsComponent","TimeDigitalComponent","updateHoursDigit","t","updateTimeDigital","updateMinutesDigit","m","updateSecondsDigit","ScreenNormalcomponent","WeatherStates","PreviewStatesComponent","watchState","setWatchState","useEffect","ws","time","hours","minutes","seconds","getFullYear","getMonth","getDate","getDay","step","split","stepsGoal","hearthrateGoal","hearthrate","paiGoal","standupGoal","standup","weatherIcon","temperature","temperatureMin","temperatureMax","airPressureGoal","BackgroundAODComponent","DateAODComponent","copyDayFromNormal","copyMonthFromNormal","copyYearFromNormal","TimeAnalogAODComponent","TimeDigitalAODComponent","AodComponent","JsonComponent","jsonName","setJson","timeDigitalEnabled","timeDigitalAodEnabled","timeClockHandEnabled","timeClockHandAodEnabled","dateEnabled","dateAodEnabled","statusEnabled","dialFaceEnabled","dialFaceAodEnabled","timeDigits","getTimeDigital","timeDigitsAod","dateDigits","dateDigitsAod","activitysToJson","activitysAod","Info","DeviceId","colorBackgroundWrite","ProgressDialFace","DateProgressBar","DateClockHand","stringify","generateJson","Blob","href","download","saveJson","cl","alist","digits","MultilangImageComponent","defaultcount","WidgetElementComponent","element","defaultCount","updatePreviewOfElement","previewImageSet","_we","updateActivityOfElement","WidgetComponent","widget","collapsedElements","setCollapsedElements","updateElement","_wi","deleteElement","WidgetsComponent","updateWidgets","_wf","wi","updateWidget","deleteWidget","tabs","LeftSideComponent","setPreviewScreenNormal","tabLeft","setTabLeft","tab","tabid","ElementOrderComponent","Canvas","props","draw","rest","canvasRef","useRef","canvas","current","context","getContext","ref","findImageById","drawImageCoords","ctx","imageCoord","drawImage","drawDigitImage","number","followXY","drawBorder","strNumber","concat","decimalPointer","chr","charAt","n","startx","starty","spacing","alignment","paddingLenght","drawborder","imageWidth","maxWidth","beginPath","strokeStyle","rect","stroke","drawImages","drawSeparator","addUnitsAndSeparator","text","systemFont","getSystemFontText","systemFontText","drawDigit","fontSize","radius","font","tx","ty","fillStyle","save","translate","rotate","PI","measureText","fillText","spacingAngle","restore","drawSystemFontFontRotated","radians","drawSystemFont","drawPointer","total","withOffset","offsetX","offsetY","_startAngle","_endAngle","offsetAngle","angle","round","drawProgressBarCircle","angleSettings","startAngle","endAngle","sector_angle","dX","dY","backimg","flatness","radianStart","radianEnd","clockwise","x1","cos","y1","sin","x2","y2","x3","y3","x5","y5","x6","y6","arc","moveTo","lineTo","x4","y4","xc1","yc1","xc2","yc2","drawArcPath","clip","GFG_Fun","lineWidth","closePath","fill","_x","_y","drawColorEndings","drawActivityList","digitBorder","batteryGoal","drawActivity","cur","caloriesGoal","uvIndexGoal","airQualityGoal","humidityGoal","sunset","stressGoal","fatBurningGoal","coors","ceil","initial","drawImageProgress","lineB","endx","endy","fillRect","drawProgressBarLinear","_temp","_follow","drawclockhand","drawTimeAnalog","drawClockHand","drawMultilangImageCoords","drawTimeDigital","timeDigital","s_hours","s_minutes","s_seconds","drawWidgets","borderWidget","showWidgetPreview","topMask","bottomMask","imgBack","preview","imgTop","strokeRect","drawWidget","storage_items","PreviewComponent","previewScreenNormal","setBorderWidget","setShowWidgetPreview","setX","setY","localStorage","getItem","whiteGrid","setWhiteGrid","blackGrid","setBlackGrid","setDigitBorder","drawLine","begin","end","canvasCcontainer","clearRect","drawBackground","drawDate","drawStatus","drawNormal","drawAodBackground","drawAod","drawGrid","console","error","canvasPreview","getBoundingClientRect","clientX","left","clientY","top","wg","setItem","bg","db","UploadedImagesomponent","RightSideComponent","tabRight","setTabRight","WatchState","_date","getHours","getMinutes","getSeconds","random","App","Provider","Container","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9aafe2e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasCcontainer\":\"previewComponent_canvasCcontainer__228Bh\",\"canvasPreview\":\"previewComponent_canvasPreview__lXKup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JsonComponent_json__2bCwY\"};","import {createContext} from 'react'\nimport { IImage } from '../model/image.model';\nimport WatchFace from '../model/watchFace.model';\nimport { WatchState } from '../model/watchState';\n\nexport const WatchfaceContext = createContext(null);\n\nexport interface IWatchContext {\n    images: IImage[],\n    setImages(images: IImage[]): void,\n    watchface: WatchFace,\n    setWatchface(watchface: WatchFace): void,\n    watchState: WatchState,\n    setWatchState(watchState: WatchState): void,\n    jsonName: string,\n    setJsonName(jsonName: string): void,\n    previewScreenNormal: boolean,\n    setPreviewScreenNormal(s: boolean): void,\n  }","const colorRegex: RegExp = /^#[0-9A-F]{6}$/i;\r\n\r\nexport default class Color {\r\n  static hexToRgb(hex: string) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  }\r\n\r\n  static rgbToHex(r: number, g: number, b: number) {\r\n    return (\r\n      \"#\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\")\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Read amazfit hex color from Json to HTML-HEX-String\r\n   */\r\n  static colorRead(color: string) {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(10, 18);\r\n    if (color.length === 10) color = \"#\" + color.substring(4);\r\n    //let old_color = this.hexToRgb(color);\r\n    //let new_color = this.rgbToHex(old_color.r, old_color.g, old_color.b);\r\n    return color;\r\n  }\r\n\r\n  /*\r\n        Read from json 16 bit background amazfit color to 32 bit\r\n    */\r\n  static colorBackgroundRead(color: string): string {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(8, 18);\r\n    let firstByteS = color.substring(8, 10);\r\n    let secondByteS = color.substring(10, 12);\r\n    let firstByte = parseInt(firstByteS, 16);\r\n    let secondByte = parseInt(secondByteS, 16);\r\n\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    r = ((firstByte >> 3) & 0x1f) << 3;\r\n    g = (((secondByte >> 5) & 0x7) | ((firstByte & 0x07) << 3)) << 2;\r\n    b = (secondByte & 0x1f) << 3;\r\n\r\n    let new_color = this.rgbToHex(r, g, b);\r\n   \r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html-hex 32 bit color to 16 bit amazfit color \r\n    */\r\n  static colorBackgroundWrite(hex: string): string {\r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let temp_b = (b >> 3) & 0x1f;\r\n    let temp_g = ((g >> 2) & 0x7) << 5;\r\n    let secondByte = temp_b | temp_g;\r\n\r\n    let temp_g2 = (g >> 5) & 0x07;\r\n    let temp_r = ((r >> 3) & 0x1f) << 3;\r\n    let firstByte = temp_g2 | temp_r;\r\n    let firstByteS = firstByte.toString(16).padStart(2, '0').toUpperCase();\r\n    let secondByteS = secondByte.toString(16).padStart(2, '0').toUpperCase();\r\n\r\n    let new_color = \"0xFFFF\" + firstByteS + secondByteS;\r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html hex 32 bit color to 32 bit amazfit json hex color\r\n  */\r\n  static colorWrite(hex: string): string {\r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let new_color =\r\n      \"0xFF\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\");\r\n    return new_color;\r\n  }\r\n\r\n  static GFG_Fun(color: any) {\r\n    return colorRegex.test(color);\r\n  }\r\n}\r\n","export class JsonType {\r\n    constructor(public index: number, public json: string) {}\r\n  }\r\n  \r\n  export class LangCodeType {\r\n    static Zh = new JsonType(0, \"Zh\");\r\n    static ZhHant = new JsonType(1, \"ZhHant\");\r\n    static All = new JsonType(2, \"All\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Zh.json;\r\n      return Object.values(LangCodeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Zh.index;\r\n      return Object.values(LangCodeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class AlignmentType {\r\n    static Left = new JsonType(0, \"Left\");\r\n    static Center = new JsonType(1, \"Center\");\r\n    static Right = new JsonType(2, \"Right\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Left.json;\r\n      return Object.values(AlignmentType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Left.index;\r\n      return Object.values(AlignmentType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class FollowType {\r\n    static Follow = new JsonType(0, \"Follow\");\r\n    static Single = new JsonType(1, \"Single\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Follow.json;\r\n      return Object.values(FollowType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Follow.index;\r\n      return Object.values(FollowType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class CommonType {\r\n    static Default = new JsonType(0, null);\r\n    static Min = new JsonType(1, \"Min\");\r\n    static Max = new JsonType(2, \"Max\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Default.json;\r\n      return Object.values(CommonType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Default.index;\r\n      return Object.values(CommonType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ImageProgressDisplayType {\r\n    static Single = new JsonType(0, \"Single\");\r\n    static Continuous = new JsonType(1, \"Continuous\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Single.json;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Single.index;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class DateType {\r\n    static Year = new JsonType(0, \"Year\");\r\n    static Month = new JsonType(1, \"Month\");\r\n    static Day = new JsonType(2, \"Day\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Year.json;\r\n      return Object.values(DateType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Year.index;\r\n      return Object.values(DateType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class TimeType {\r\n    static Hour = new JsonType(0, \"Hour\");\r\n    static Minute = new JsonType(1, \"Minute\");\r\n    static Second = new JsonType(2, \"Second\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Hour.json;\r\n      return Object.values(TimeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Hour.index;\r\n      return Object.values(TimeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ActivityType {\r\n    static Date = new JsonType(0, \"Date\");\r\n    static Battery = new JsonType(1, \"Battery\");\r\n    static Steps = new JsonType(2, \"Steps\");\r\n    static Calories = new JsonType(3, \"Calories\");\r\n    static HeartRate = new JsonType(4, \"HeartRate\");\r\n    static Pai = new JsonType(5, \"PAI\");\r\n    static Distance = new JsonType(6, \"Distance\");\r\n    static StandUp = new JsonType(7, \"StandUp\");\r\n    static Weather = new JsonType(8, \"Weather\");\r\n    static UVindex = new JsonType(9, \"UVindex\");\r\n    static AirQuality = new JsonType(10, \"AirQuality\");\r\n    static Humidity = new JsonType(11, \"Humidity\");\r\n    static Sunrise = new JsonType(12, \"Sunrise\");\r\n    static WindForce = new JsonType(13, \"WindForce\");\r\n    static Altitude = new JsonType(14, \"Altitude\");\r\n    static AirPressure = new JsonType(15, \"AirPressure\");\r\n    static Stress = new JsonType(16, \"Stress\");\r\n    static ActivityGoal = new JsonType(17, \"ActivityGoal\");\r\n    static FatBurning = new JsonType(18, \"FatBurning\");\r\n  \r\n    static findByIndex(index: number) {\r\n      if (index === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.index === index);\r\n    }\r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Date.json;\r\n      return Object.values(ActivityType).find((val) => val.index === index).json;\r\n    }\r\n    static findByJson(json: string) {\r\n      if (json === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.json === json);\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Date.index;\r\n      return Object.values(ActivityType).find((val) => val.json === json).index;\r\n    }\r\n  }","import Color from \"../shared/color\";\r\nimport { AlignmentType, ImageProgressDisplayType, LangCodeType } from \"./types.model\";\r\n\r\n\r\nexport class DeviceId {\r\n  DeviceId: number;\r\n}\r\n\r\nexport class Background {\r\n  Preview: MultilangImage[] = [];\r\n  BackgroundImageIndex: number;\r\n  Color: string;\r\n}\r\n\r\nexport class Coordinates {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n}\r\n\r\nexport class ImageSetGTR2 {\r\n  ImageIndex: number = null;\r\n  ImagesCount: number = 1;\r\n}\r\n\r\nexport class ScreenNormal {\r\n  DigitalDialFace: DigitalDialFace;\r\n  AnalogDialFace: AnalogDialFace;\r\n  ProgressDialFace: ProgressDialFace;\r\n}\r\n\r\nexport class System {\r\n  Status: Status;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Widgets {\r\n  Widget: Widget[];\r\n  TopMaskImageIndex: number;\r\n  UnderMaskImageIndex: number;\r\n  Unknown4: number = 0;\r\n}\r\n\r\nexport class ScreenIdle {\r\n  DialFace: ScreenNormal;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class ImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageIndex: number = null;\r\n  ImageIndex2: number = null;\r\n  ImageIndex3: number = null;\r\n}\r\n\r\nexport class Widget {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Width: number = 0;\r\n  Height: number = 0;\r\n  WidgetElement: WidgetElement[] = [];\r\n  BorderActivImageIndex: number;\r\n  BorderInactivImageIndex: number;\r\n  DescriptionImageBackground: ImageCoord = new ImageCoord();\r\n  DescriptionWidthCheck: number = 0;\r\n}\r\n\r\nexport class WidgetElement {\r\n  Preview: MultilangImage[];\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Date {\r\n  DateDigits: DigitalDigit[];\r\n  WeeksDigits: DigitalDigit;\r\n  DateClockHand: DateClockHand;\r\n  DateProgressBar: DateProgressBar;\r\n}\r\n\r\nexport class DateProgressBar {\r\n  MonthProgressBar: ProgressBar;\r\n  DayProgressBar: ProgressBar;\r\n  WeekDayProgressBar: ProgressBar;\r\n}\r\n\r\nexport class Status {\r\n  Bluetooth: ImageCoord;\r\n  DoNotDisturb: ImageCoord;\r\n  Lock: ImageCoord;\r\n  Alarm: ImageCoord;\r\n}\r\n\r\nexport class Activity {\r\n  Type: string;\r\n  PointerProgress: ClockHand;\r\n  ProgressBar: ProgressBar;\r\n  ImageProgress: ImageProgress;\r\n  Digits: DigitalDigit[];\r\n  Shortcut: Shortcut;\r\n  Icon: ImageCoord;\r\n}\r\n\r\nexport class Shortcut {\r\n  BoxElement: BoxElement;\r\n  ImageIndex: number;\r\n}\r\n\r\nexport class BoxElement {\r\n  TopLeftX: number;\r\n  TopLeftY: number;\r\n  Width: number;\r\n  Height: number;\r\n}\r\n\r\nexport class ImageProgress {\r\n  Coordinates: Coordinates[] = [];\r\n  ImageSet = new ImageSetGTR2();\r\n  DisplayType: string = ImageProgressDisplayType.Single.json;\r\n}\r\n\r\nexport class ProgressDialFace {\r\n  Hours: ProgressBar;\r\n  Minutes: ProgressBar;\r\n  Seconds: ProgressBar;\r\n}\r\n\r\nexport class ProgressBar {\r\n  AngleSettings: AngleSettings;\r\n  LinearSettings: LinearSettings;\r\n  ForegroundImageIndex: number;\r\n  Color: string;\r\n  Width: number;\r\n  Flatness: number;\r\n  PointerImageIndex: number;\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class LinearSettings {\r\n  StartX: number = 0;\r\n  StartY: number = 0;\r\n  EndX: number = 0;\r\n  EndY: number = 0;\r\n  Unknown5: number;\r\n}\r\n\r\nexport class AngleSettings {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  StartAngle: number = 0;\r\n  EndAngle: number = 360;\r\n  Radius: number = 0;\r\n}\r\n\r\nexport class AnalogDialFace {\r\n  Hours: ClockHand;\r\n  Minutes: ClockHand;\r\n  Seconds: ClockHand;\r\n}\r\n\r\nexport class DateClockHand {\r\n  MonthClockHand: ClockHand;\r\n  DayClockHand: ClockHand;\r\n  WeekDayClockHand: ClockHand;\r\n}\r\n\r\nexport class ClockHand {\r\n  X: number;\r\n  Y: number;\r\n  Scale: MultilangImageCoord;\r\n  Pointer: ImageCoord;\r\n  Cover: ImageCoord;\r\n  StartAngle: number;\r\n  EndAngle: number;\r\n  Unknown16: number;\r\n}\r\n\r\nexport class DigitalDialFace {\r\n  Digits: DigitalDigit[];\r\n  AM: MultilangImageCoord;\r\n  PM: MultilangImageCoord;\r\n}\r\n\r\nexport class MultilangImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageSet: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nexport class Text {\r\n  Image: Image;\r\n  SystemFont: SystemFont;\r\n  Alignment: string = AlignmentType.Left.json;\r\n  Spacing: number = 0;\r\n  PaddingZero: boolean = false;\r\n  DisplayFormAnalog: boolean = false;\r\n}\r\n\r\nexport class Image {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  NoDataImageIndex: number = null;\r\n  MultilangImage: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n  DecimalPointImageIndex: number = null;\r\n  MultilangImageUnit: MultilangImage[];\r\n  DelimiterImageIndex: number = null;\r\n  MultilangImageUnitMile: MultilangImage[];\r\n}\r\n\r\nexport class SystemFont {\r\n  FontRotate: FontRotate;\r\n  Coordinates: Coordinates;\r\n  Angle: number = 0;\r\n  Size: number = 20;\r\n  Color: string =  Color.colorWrite(\"#000000\");\r\n  ShowUnitCheck: number = -1;\r\n}\r\n\r\n\r\nexport class FontRotate {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Radius: number = 0;\r\n  RotateDirection: number = 0;\r\n}\r\n\r\nexport class DigitalDigit {\r\n  Type: string;\r\n  TimeType: string;\r\n  DateType: string;\r\n  CombingMode: string;\r\n  Digit: Text = new Text();\r\n  Separator: ImageCoord;\r\n}\r\n\r\nexport class MultilangImage {\r\n  LangCode: string;\r\n  ImageSet: ImageSetGTR2 = new ImageSetGTR2();\r\n}\r\n\r\nexport class WatchJson {\r\n  Info: DeviceId;\r\n  Background: Background;\r\n  DialFace: ScreenNormal;\r\n  System: System;\r\n  Widgets: Widgets;\r\n  ScreenIdle: ScreenIdle;\r\n}\r\n","import Color from \"../shared/color\";\r\nimport {\r\n  ClockHand, DigitalDigit, ImageCoord, ImageProgress, ProgressBar, ScreenIdle, Shortcut, Status, Text, WatchJson, Widgets, MultilangImageCoord, Activity\r\n} from \"./json.model\";\r\nimport { TimeType, DateType, CommonType, ActivityType, JsonType, LangCodeType } from \"./types.model\";\r\n\r\n\r\ninterface IDigitConstructor {\r\n  type: number;\r\n  count: number;\r\n  numberLenght: number;\r\n  unit: string[];\r\n  separator: string;\r\n  title: string;\r\n  titleDefault?: string;\r\n  titleMin?: string;\r\n  titleMax?: string;\r\n  decimalDelimiter?: boolean;\r\n  timeDelimiter?: boolean;\r\n  displayFormAnalog?: boolean;\r\n  imageProgressTotal?: number;\r\n}\r\n\r\nconst digitTypes = {\r\n  hour: {\r\n    type: TimeType.Hour.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Hours',\r\n  },\r\n  min: {\r\n    type: TimeType.Minute.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Minutes',\r\n  },\r\n  sec: {\r\n    type: TimeType.Second.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Seconds',\r\n  },\r\n  year: {\r\n    type: DateType.Year.index,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Year',\r\n  },\r\n  month: {\r\n    type: DateType.Month.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Month',\r\n  },\r\n  monthasword: {\r\n    type: DateType.Month.index,\r\n    count: 12,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Month as word',\r\n  },\r\n  day: {\r\n    type: DateType.Day.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Day',\r\n  },\r\n  weekday: {\r\n    type: 0,\r\n    count: 7,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Weekday',\r\n  },\r\n  battery: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Battery',\r\n  },\r\n  steps: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'Steps', 'STEPS'],\r\n    separator: '/',\r\n    title: 'Steps',\r\n    titleMin: 'goal of steps'\r\n  },\r\n  calories: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kcal', 'Cal'],\r\n    separator: '/',\r\n    title: 'Calories',\r\n    titleMin: 'goal of calories'\r\n  },\r\n  heartRate: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 6,\r\n    unit: ['', 'bpm', 'BPM'],\r\n    separator: '/',\r\n    title: 'Heart rate'\r\n  },\r\n  pai: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'PAI',\r\n  },\r\n  distance: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'km', 'KM'],\r\n    separator: '/',\r\n    decimalDelimiter: true,\r\n    title: 'Distance',\r\n  },\r\n  standUp: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Standup',\r\n    titleMin: 'goal of stand up'\r\n  },\r\n  uvIndex: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'UVIndex',\r\n  },\r\n  airQuality: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air quality',\r\n  },\r\n  humidity: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Humidity',\r\n  },\r\n  sunrise: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Sunrise',\r\n    titleDefault: 'closest sunrise or sunset',\r\n    titleMin: 'sunrise',\r\n    titleMax: 'sunset',\r\n  },\r\n  windForce: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kpa', 'KPA'],\r\n    separator: '/',\r\n    title: 'Wind force',\r\n  },\r\n  airPressure: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air pressure',\r\n  },\r\n  stress: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Stress',\r\n  },\r\n  activityGoal: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'ActivityGoal',\r\n    titleMin: 'goal of activity'\r\n  },\r\n  fatBurning: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'FatBurning',\r\n    titleMin: 'goal of FatBurning'\r\n  },\r\n  weather: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 29,\r\n    unit: ['°C', '°C', '°C'],\r\n    separator: '/',\r\n    title: 'Weather',\r\n    titleDefault: 'Current',\r\n    titleMin: 'Minimum',\r\n    titleMax: 'Maximum',\r\n  },\r\n\r\n};\r\nexport class Background {\r\n  imageIndex = null;\r\n  previewIndex = null;\r\n  color = null;\r\n}\r\n\r\nexport class Coords {\r\n  x: number = 0;\r\n  y: number = 0;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport class WatchImageCoords {\r\n  json = new ImageCoord()\r\n  enabled = false;\r\n\r\n  constructor(j?: ImageCoord) {\r\n    if (j) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\nexport class WatchMultilangImageCoords {\r\n  json = new MultilangImageCoord()\r\n  enabled = false;\r\n  count = 1;\r\n\r\n  constructor(j?: MultilangImageCoord, count?: number) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n    if (count) {\r\n      this.count = count\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchImageProgress {\r\n  enabled = false;\r\n  json = new ImageProgress();\r\n\r\n  constructor(j?: ImageProgress) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport enum TypeOfDigit {\r\n  TIME,\r\n  DATE,\r\n  COMMON\r\n}\r\nexport class WatchCommonDigit {\r\n  constructor(type: TypeOfDigit, d?: DigitalDigit, con?: IDigitConstructor) {\r\n    this.json = d;\r\n    if (d != null) {\r\n      this.enabled = true\r\n      if (d.Digit?.Image) this.enabledImage = true\r\n      if (d.Digit?.SystemFont) {\r\n        if (d.Digit?.SystemFont?.FontRotate) this.enabledSystemFontCircle = true\r\n        else this.enabledSystemFont = true\r\n      }\r\n    }\r\n    if (con != null) {\r\n      if (!d) {\r\n        this.json = new DigitalDigit()\r\n        this.json.Digit = new Text()\r\n      }\r\n      this.con = con\r\n    }\r\n    this.json.DateType = type === TypeOfDigit.DATE ? DateType.toJson(con.type) : null\r\n    this.json.TimeType = type === TypeOfDigit.TIME ? TimeType.toJson(con.type) : null\r\n    this.json.Type = type === TypeOfDigit.COMMON ? CommonType.toJson(con.type) : null\r\n  }\r\n  json: DigitalDigit = new DigitalDigit();\r\n  con: IDigitConstructor;\r\n  enabled = false;\r\n  enabledImage = false;\r\n  enabledSystemFont = false;\r\n  enabledSystemFontCircle = false;\r\n}\r\n\r\nexport class WatchClockHand {\r\n  enabled: boolean;\r\n\r\n  json: ClockHand = new ClockHand()\r\n\r\n  constructor(json?: ClockHand) {\r\n    this.json = json\r\n    if (json) this.enabled = true\r\n  }\r\n}\r\n\r\nexport class WatchDialFace {\r\n  hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.hour);\r\n  minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.min);\r\n  secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.sec);\r\n  hoursClockhand = new WatchClockHand();\r\n  minutesClockhand = new WatchClockHand();\r\n  secondsClockhand = new WatchClockHand();\r\n  am = new WatchMultilangImageCoords()\r\n  pm = new WatchMultilangImageCoords()\r\n}\r\n\r\nexport class WatchDate {\r\n  year = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.year);\r\n  month = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.month);\r\n  day = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.day);\r\n  monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.monthasword);\r\n  weekDay = new WatchCommonDigit(TypeOfDigit.COMMON, null, digitTypes.weekday);\r\n}\r\n\r\nexport class WatchStatus {\r\n  constructor(s?: Status) {\r\n    if (s) {\r\n      if (s.Bluetooth?.ImageIndex) {\r\n        this.bluetooth = new WatchImageCoords(s.Bluetooth);\r\n        this.bluetooth.enabled = true;\r\n      }\r\n      if (s.Lock?.ImageIndex) {\r\n        this.lock = new WatchImageCoords(s.Lock);\r\n        this.lock.enabled = true;\r\n      }\r\n      if (s.DoNotDisturb?.ImageIndex) {\r\n        this.dnd = new WatchImageCoords(s.DoNotDisturb);\r\n        this.dnd.enabled = true;\r\n      }\r\n      if (s.Alarm?.ImageIndex) {\r\n        this.alarm = new WatchImageCoords(s.Alarm);\r\n        this.alarm.enabled = true;\r\n      }\r\n    }\r\n  }\r\n  bluetooth = new WatchImageCoords(null);\r\n  dnd = new WatchImageCoords(null);\r\n  alarm = new WatchImageCoords(null);\r\n  lock = new WatchImageCoords(null);\r\n}\r\n\r\nexport class WatchProgressBar {\r\n  enabledLinear: boolean;\r\n  enabledCircle: boolean;\r\n  jsonObj: ProgressBar;\r\n\r\n  constructor(json?: ProgressBar) {\r\n    this.jsonObj = json;\r\n    if (json) {\r\n      if (json.LinearSettings)\r\n        this.enabledLinear = true;\r\n      else if (json.AngleSettings)\r\n        this.enabledCircle = true;\r\n    }\r\n  }\r\n}\r\nexport class WatchActivity {\r\n  key: string;\r\n  type: JsonType;\r\n  dt: IDigitConstructor;\r\n  digit: WatchCommonDigit;\r\n  digitMin: WatchCommonDigit;\r\n  digitMax: WatchCommonDigit;\r\n  imageProgress = new WatchImageProgress();\r\n  pointerProgress = new WatchClockHand();\r\n  progressBar = new WatchProgressBar();\r\n  icon = new WatchImageCoords();\r\n  shortcut: Shortcut = null;\r\n\r\n  constructor(type: JsonType, dt: IDigitConstructor) {\r\n    this.key = type.index + '_' + new Date().getTime()\r\n    this.type = type;\r\n    this.dt = dt;\r\n    this.imageProgress.json.ImageSet.ImagesCount = dt.imageProgressTotal;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class ElementOrderItem {\r\n  public type: number;\r\n  public title: string;\r\n  constructor(jsonType: JsonType) {\r\n    this.type = jsonType.index;\r\n    this.title = jsonType.json;\r\n  }\r\n}\r\n\r\nexport class WatchAOD {\r\n  dialFace = new WatchDialFace();\r\n  date = new WatchDate();\r\n  activitylist: WatchActivity[] = [];\r\n  backgroundImageIndex: number;\r\n  json: ScreenIdle\r\n\r\n  orderElements = {\r\n    orderElementsDate: [\r\n      new ElementOrderItem(DateType.Year),\r\n      new ElementOrderItem(DateType.Month),\r\n      new ElementOrderItem(DateType.Day),\r\n    ]\r\n  };\r\n\r\n  constructor(j: ScreenIdle) {\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activitylist = [];\r\n    this.backgroundImageIndex = null;\r\n    this.json = j\r\n    if (j == null) return\r\n    this.backgroundImageIndex = j.BackgroundImageIndex\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    this.dialFace.secondsDigital = null\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = null\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.Date?.DateDigits) {\r\n      j.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Year.json:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.orderElements.orderElementsDate.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.orderElements.orderElementsDate = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.activitylist = getActivityListFromJson(j.Activity);\r\n  }\r\n}\r\n\r\nexport function getActivityFromJson(a: Activity, atype: JsonType): WatchActivity {\r\n  let _activity: WatchActivity = null;\r\n  let _dt: IDigitConstructor = null;\r\n  switch (atype) {\r\n    case ActivityType.Battery:\r\n      _dt = digitTypes.battery;\r\n      break;\r\n    case ActivityType.Steps:\r\n      _dt = digitTypes.steps;\r\n      break;\r\n    case ActivityType.Calories:\r\n      _dt = digitTypes.calories;\r\n      break;\r\n    case ActivityType.HeartRate:\r\n      _dt = digitTypes.heartRate;\r\n      break;\r\n    case ActivityType.Pai:\r\n      _dt = digitTypes.pai;\r\n      break;\r\n    case ActivityType.Distance:\r\n      _dt = digitTypes.distance;\r\n      break;\r\n    case ActivityType.StandUp:\r\n      _dt = digitTypes.standUp;\r\n      break;\r\n    case ActivityType.UVindex:\r\n      _dt = digitTypes.uvIndex;\r\n      break;\r\n    case ActivityType.AirQuality:\r\n      _dt = digitTypes.airQuality;\r\n      break;\r\n    case ActivityType.Humidity:\r\n      _dt = digitTypes.humidity;\r\n      break;\r\n    case ActivityType.Sunrise:\r\n      _dt = digitTypes.sunrise;\r\n      break;\r\n    case ActivityType.WindForce:\r\n      _dt = digitTypes.windForce;\r\n      break;\r\n    case ActivityType.AirPressure:\r\n      _dt = digitTypes.airPressure;\r\n      break;\r\n    case ActivityType.Weather:\r\n      _dt = digitTypes.weather;\r\n      break;\r\n    case ActivityType.ActivityGoal:\r\n      _dt = digitTypes.activityGoal;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (_dt){\r\n    _activity = new WatchActivity(atype, _dt);\r\n    _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, null, _dt);\r\n    _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Min.index});\r\n    _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Max.index});\r\n  } \r\n  if (_activity) {\r\n    if (a?.Digits) {\r\n      a.Digits.forEach((digit) => {\r\n        if ( digit.Type === CommonType.Min.json )\r\n          _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Min.index});\r\n        else if ( digit.Type === CommonType.Max.json )\r\n          _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Max.index});\r\n        else\r\n          _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Default.index});\r\n      })\r\n    }\r\n    _activity.imageProgress = new WatchImageProgress(a?.ImageProgress);\r\n    _activity.pointerProgress = new WatchClockHand(a?.PointerProgress);\r\n    _activity.progressBar = new WatchProgressBar(a?.ProgressBar);\r\n    _activity.icon = new WatchImageCoords(a?.Icon);\r\n    _activity.shortcut = a?.Shortcut;\r\n  }\r\n  return _activity\r\n}\r\n\r\nexport function getActivityListFromJson(ar: Activity[]): WatchActivity[] | null {\r\n  if (ar) {\r\n    let activitylist: WatchActivity[] = []\r\n    ar.forEach((a) => {\r\n      let _a = getActivityFromJson(a, ActivityType.findByJson(a.Type))\r\n      if (_a) activitylist.push(_a)\r\n    });\r\n    return activitylist;\r\n  } else {\r\n    return [];\r\n  }\r\n\r\n}\r\n\r\nexport class WatchWidgets {\r\n  enabled: boolean\r\n  json: Widgets\r\n\r\n  constructor(json: Widgets) {\r\n    this.json = json\r\n    if (json) this.enabled = true\r\n  }\r\n}\r\n\r\nexport default class WatchFace {\r\n  background: Background = new Background();\r\n  dialFace: WatchDialFace = new WatchDialFace();\r\n  date: WatchDate = new WatchDate();\r\n  activity: WatchActivity[] = [];\r\n  status = new WatchStatus();\r\n  widgets = new WatchWidgets(null)\r\n  aod = new WatchAOD(null)\r\n\r\n  orderElements = {\r\n    orderElementsDate: [\r\n      new ElementOrderItem(DateType.Year),\r\n      new ElementOrderItem(DateType.Month),\r\n      new ElementOrderItem(DateType.Day),\r\n    ],\r\n    orderElementsActivity: [\r\n      new ElementOrderItem(ActivityType.Date),\r\n      new ElementOrderItem(ActivityType.Battery),\r\n      new ElementOrderItem(ActivityType.Steps),\r\n      new ElementOrderItem(ActivityType.Calories),\r\n      new ElementOrderItem(ActivityType.HeartRate),\r\n      new ElementOrderItem(ActivityType.Pai),\r\n      new ElementOrderItem(ActivityType.Distance),\r\n      new ElementOrderItem(ActivityType.StandUp),\r\n      new ElementOrderItem(ActivityType.Weather),\r\n    ],\r\n  };\r\n\r\n  constructor(j?: WatchJson) {\r\n    if (!j) return;\r\n\r\n    this.background = new Background();\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activity = [];\r\n    this.status = new WatchStatus();\r\n    this.aod = new WatchAOD(null)\r\n\r\n    this.background.color = Color.colorBackgroundRead(j.Background.Color);\r\n    this.background.imageIndex = j.Background.BackgroundImageIndex;\r\n    if (j.Background.Preview) {\r\n      let ix = 0;\r\n      j.Background?.Preview?.forEach((item, index) => {\r\n        if (item.LangCode === LangCodeType.All.json) {\r\n          ix = index;\r\n        }\r\n      });\r\n      this.background.previewIndex = j.Background.Preview[ix]?.ImageSet?.ImageIndex;\r\n    }\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          case TimeType.Second.json:\r\n            this.dialFace.secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.sec);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Second));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Seconds\r\n    );\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.System?.Date?.DateDigits) {\r\n      j.System.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Year.json:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.orderElements.orderElementsDate.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.orderElements.orderElementsDate = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.System?.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.status = new WatchStatus(j.System?.Status);\r\n\r\n    this.activity = getActivityListFromJson(j.System.Activity)\r\n\r\n    this.widgets = new WatchWidgets(j.Widgets)\r\n    this.aod = new WatchAOD(j.ScreenIdle)\r\n  }\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { WatchJson } from \"../model/json.model\";\r\nimport WatchFace from \"../model/watchFace.model\";\r\n\r\nconst FileLoaderComponent: FC = () => {\r\n  const { images, setImages, setWatchface, setJsonName } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function onLoadJson(e: ProgressEvent<FileReader>) {\r\n    let json = e.target.result;\r\n    let j: WatchJson = JSON.parse(json.toString());\r\n    let w = new WatchFace(j);\r\n    setWatchface(w);\r\n  }\r\n\r\n  function uploadJsonFile(e) {\r\n    let file = e.target.files.item(0);\r\n    if (file) {\r\n      let fr = new FileReader();\r\n      fr.onload = onLoadJson;\r\n      fr.readAsText(file);\r\n      setJsonName(e.target.files.item(0).name);\r\n    }\r\n  }\r\n\r\n  function imagesUploadHandler(event: any) {\r\n    getImages(event.target.files, []);\r\n  }\r\n\r\n  function getImages(files: FileList, ar: IImage[], index = 0) {\r\n    clearInput()\r\n    setJsonName(null)\r\n    if (index < files.length) {\r\n      const filename = files[index].name;\r\n      let base = filename;\r\n      if (base.lastIndexOf(\".\") !== -1)\r\n        base = base.substring(0, base.lastIndexOf(\".\"));\r\n      const id = parseInt(base);\r\n      if (!isNaN(id)) {\r\n        const img = new Image();\r\n        img.addEventListener(\"load\", () => {\r\n          index += 1;\r\n          if (index < files.length) \r\n            getImages(files, ar, index);\r\n          else {\r\n            setImages(ar);\r\n          }\r\n        });\r\n        img.src = URL.createObjectURL(files[index]);\r\n        img.alt = filename;\r\n        ar.push({\r\n          id: id,\r\n          name: filename,\r\n          image: img,\r\n        });\r\n      } else {\r\n        index += 1;\r\n        if (index < files.length) getImages(files, ar, index);\r\n        else setImages(ar);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearInput() {\r\n    if (document.getElementById(\"jsonLoad\")) (document.getElementById(\"jsonLoad\") as HTMLInputElement).value = null;\r\n    setWatchface(new WatchFace());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"input-group input-group-sm mb-3\">\r\n        <span className=\"input-group-text\">Load images</span>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          id=\"fileUpload\"\r\n          accept=\"image/*\"\r\n          onChange={imagesUploadHandler}\r\n        />\r\n        {images.length > 0 ? (\r\n          <>\r\n            <span className=\"input-group-text\">Load json file</span>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"application/json\"\r\n              id=\"jsonLoad\"\r\n              onChange={uploadJsonFile}\r\n            />\r\n            <Button onClick={clearInput}>clear</Button>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileLoaderComponent;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./draganddroplist.css\";\r\n\r\n\r\nexport interface IDNDItem<T> {\r\n  item: T,\r\n  reactItem: React.ReactChild\r\n}\r\n\r\ninterface IProps {\r\n  _list: IDNDItem<any>[];\r\n  updateOrder(list: IDNDItem<any>[]);\r\n}\r\n\r\nconst initialDnDState = {\r\n  draggedFrom: null,\r\n  draggedTo: null,\r\n  isDragging: false,\r\n  originalOrder: [],\r\n  updatedOrder: [],\r\n};\r\n\r\nconst DnDListComponent: FC<IProps> = ({ _list, updateOrder }) => {\r\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\r\n\r\n  // onDragStart fires when an element\r\n  // starts being dragged\r\n  function onDragStart(event) {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: _list,\r\n    });\r\n\r\n    // Note: this is only for Firefox.\r\n    // Without it, the DnD won't work.\r\n    // But we are not using it.\r\n    event.dataTransfer.setData(\"text/html\", \"\");\r\n  }\r\n\r\n  // onDragOver fires when an element being dragged\r\n  // enters a droppable area.\r\n  // In this case, any of the items on the list\r\n  function onDragOver(event) {\r\n    // in order for the onDrop\r\n    // event to fire, we have\r\n    // to cancel out this one\r\n    event.preventDefault();\r\n\r\n    let newList = dragAndDrop.originalOrder;\r\n\r\n    // index of the item being dragged\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n\r\n    // index of the droppable area being hovered\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n\r\n    const itemDragged = newList[draggedFrom];\r\n    const remainingItems = newList.filter(\r\n      (item, index) => index !== draggedFrom\r\n    );\r\n\r\n    newList = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo),\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newList,\r\n        draggedTo: draggedTo,\r\n      });\r\n      updateOrder(newList);\r\n    }\r\n  }\r\n\r\n  function onDrop(event) {\r\n    updateOrder(dragAndDrop.updatedOrder);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false,\r\n    });\r\n  }\r\n\r\n  function onDragLeave() {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list-group droplist\">\r\n        {_list.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              data-position={index}\r\n              draggable\r\n              onDragStart={onDragStart}\r\n              onDragOver={onDragOver}\r\n              onDrop={onDrop}\r\n              onDragLeave={onDragLeave}\r\n              className={`list-group-item ${\r\n                dragAndDrop && dragAndDrop.draggedTo === Number(index)\r\n                  ? \"dropArea\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n                {item.reactItem}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DnDListComponent;\r\n","export class Constant {\r\n  static readonly NONE = \"None\";\r\n  static readonly startImageIndex = 1;\r\n  static readonly width: number = 348;\r\n  static readonly height: number = 442;\r\n  static readonly deviceId: number = 65;\r\n\r\n  static getImageIndex(index: number, max: number) {\r\n    const resultIndex = index - Constant.startImageIndex;\r\n    if (resultIndex >= max) {\r\n      alert(\"Bad imageIndex: \" + resultIndex);\r\n      return 0;\r\n    }\r\n    return index;\r\n  }\r\n}\r\n","import React, { FC, ReactElement, useContext, useState } from \"react\";\r\nimport { Constant } from \"./constant\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport \"./selectFileList.css\";\r\ninterface IProps {\r\n  title: string,\r\n  imageIndex: number;\r\n  setSelectedFileIndex(id: number): void;\r\n}\r\n\r\nconst SelectFileListComponent: FC<IProps> = ({\r\n  title,\r\n  imageIndex,\r\n  setSelectedFileIndex,\r\n}) => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function onFileSelected(id: number) {\r\n    setSelectedFileIndex(id);\r\n    setCollapsed(true);\r\n  }\r\n\r\n  function onRemove() {\r\n    onFileSelected(null);\r\n  }\r\n\r\n  const options: ReactElement[] = [];\r\n\r\n  options.push(\r\n    <option key={\"None\"} value={\"None\"}>\r\n      {\" \"}\r\n    </option>\r\n  );\r\n\r\n  if (images) {\r\n    for (var i = 0; i < images.length; i++) {\r\n      let img = images[i];\r\n\r\n      options.push(\r\n        <li\r\n          key={img.id}\r\n          value={img.id}\r\n          className=\"list-group-item fileitem\"\r\n          onClick={() => onFileSelected(img.id)}\r\n        >\r\n          {<img src={img.image.src} alt={img.name} width={30} />}\r\n          {img.name}\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <span className=\"input-group-text\">{title}</span>\r\n      <div className=\"input-group-text dropdown\">\r\n        <div>\r\n          {imageIndex !== null &&\r\n          imageIndex !== undefined &&\r\n          images[imageIndex - Constant.startImageIndex]\r\n            ? images[imageIndex - Constant.startImageIndex].name\r\n            : \"None\"}\r\n        </div>\r\n        {collapsed ? (\r\n          \"\"\r\n        ) : (\r\n          <ul className=\"list-group dropdown-content\">{options}</ul>\r\n        )}\r\n      </div>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n        disabled={!images || images.length === 0}\r\n      >\r\n        + \r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={onRemove}\r\n        disabled={!imageIndex}\r\n      >\r\n        x\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectFileListComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Image, MultilangImage } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType, LangCodeType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst ImageDigitComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  showNoData,\r\n  showDecimalPointer,\r\n  showDelimiter,\r\n  paddingZeroFix,\r\n  followDisabled,\r\n  onCopyFromNormal\r\n}) => {\r\n\r\n  const imageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImage), [digit])\r\n  const unitImageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImageUnit), [digit])\r\n\r\n  function findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }\r\n\r\n  function onChangeImageIndex(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImage) {\r\n      d.json.Digit.Image.MultilangImage = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImage[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImage.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImage[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImagesCount = d.con.count;\r\n    } else {\r\n      d.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex = index;\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnit(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImageUnit) {\r\n      d.json.Digit.Image.MultilangImageUnit = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImageUnit[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImageUnit.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImagesCount = 1;\r\n    } else {\r\n      d.json.Digit.Image.MultilangImageUnit[imageSetIndex].ImageSet.ImageIndex = index;\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeNoData(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.NoDataImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDelimiter(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DelimiterImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDecimalPointer(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DecimalPointImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator(index: number) {\r\n    const d = {...digit};\r\n    d.json.Separator.ImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorX(e) {\r\n    const d = {...digit};\r\n    d.json.Separator.Coordinates.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorY(e) {\r\n    const d = {...digit};\r\n    d.json.Separator.Coordinates.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledImage}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledImage = !d.enabledImage;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont\r\n                if ( !d.json.Digit.Image) {\r\n                  d.json.Digit.Image = new Image()\r\n                  let digitimage = new MultilangImage()\r\n                  digitimage.ImageSet.ImagesCount = d.con.count\r\n                  d.json.Digit.Image.MultilangImage[0] = digitimage\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledImage ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <SelectFileListComponent\r\n              title='ImageIndex'\r\n              setSelectedFileIndex={onChangeImageIndex}\r\n              imageIndex={digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex}\r\n            />\r\n            <span className=\"input-group-text\">count: {digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImagesCount}</span>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.Image?.X ? digit.json.Digit.Image.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.Image?.Y ? digit.json.Digit.Image.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n          </div>\r\n          {!digit.json.Digit.DisplayFormAnalog ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Unit'\r\n                setSelectedFileIndex={onChangeUnit}\r\n                imageIndex={digit.json?.Digit?.Image?.MultilangImageUnit ? digit.json?.Digit?.Image?.MultilangImageUnit[unitImageSetIndex].ImageSet?.ImageIndex : null}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showNoData ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='NoData'\r\n                setSelectedFileIndex={onChangeNoData}\r\n                imageIndex={digit.json?.Digit?.Image?.NoDataImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showDelimiter ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Minus'\r\n                setSelectedFileIndex={onChangeDelimiter}\r\n                imageIndex={digit.json?.Digit?.Image?.DelimiterImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showDecimalPointer ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Decimal pointer'\r\n                setSelectedFileIndex={onChangeDecimalPointer}\r\n                imageIndex={digit.json?.Digit?.Image?.DecimalPointImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {!digit.json.Digit.DisplayFormAnalog ? (\r\n            <>\r\n              <div className=\"input-group input-group-sm flex-nowrap mb-1\">\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  padding zero\r\n                </span>\r\n                <div className=\"input-group-text\">\r\n                  <input\r\n                    className=\"form-check-input mt-0\"\r\n                    type=\"checkbox\"\r\n                    disabled={paddingZeroFix}\r\n                    checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                    onChange={onChangePaddingZero}\r\n                  />\r\n                </div>\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  spacing\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n                  onChange={onChangeSpacing}\r\n                />\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  follow\r\n                </span>\r\n                <div className=\"input-group-text\">\r\n                  <input\r\n                    className=\"form-check-input mt-0\"\r\n                    type=\"checkbox\"\r\n                    checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                    onChange={onChangeFollow}\r\n                    disabled={followDisabled}\r\n                  />\r\n                </div>\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  alignment\r\n                </span>\r\n                <div className=\"input-group-text\">\r\n                  <select\r\n                    value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                    className=\"form-select form-select-sm\"\r\n                    onChange={onChangeAlignment}\r\n                  >\r\n                    <option value=\"0\">\r\n                      Left\r\n                    </option>\r\n                    <option value=\"1\">\r\n                      Center\r\n                    </option>\r\n                    <option value=\"2\">\r\n                      Right\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-group input-group-sm\">\r\n                <SelectFileListComponent\r\n                  title='Separator'\r\n                  setSelectedFileIndex={onChangeSeparator}\r\n                  imageIndex={digit.json?.Separator?.ImageIndex}\r\n                />\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  X\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json.Separator?.Coordinates?.X ? digit.json.Separator.Coordinates.X : 0}\r\n                  onChange={onChangeSeparatorX}\r\n                />\r\n                <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                  Y\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json.Separator?.Coordinates?.Y ? digit.json.Separator.Coordinates.Y : 0}\r\n                  onChange={onChangeSeparatorY}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageDigitComponent;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Coordinates, ImageCoord, SystemFont } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFont}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFont = !d.enabledSystemFont;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont\r\n                if ( !d.json.Digit.SystemFont) {\r\n                  d.json.Digit.SystemFont = new SystemFont()\r\n                  d.json.Digit.SystemFont.Coordinates = new Coordinates()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFont ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Coordinates?.X ? digit.json.Digit.SystemFont.Coordinates.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Coordinates?.Y ? digit.json.Digit.SystemFont.Coordinates.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n            <span className=\"input-group-text\">Color</span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                type=\"color\"\r\n                className=\"form-control form-control-sm\"\r\n                style={{ width: 40 }}\r\n                value={digit.json.Digit.SystemFont.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color): '#000000'}\r\n                onChange={(e) => {\r\n                  const d = { ...digit };\r\n                  d.json.Digit.SystemFont.Color = Color.colorWrite(e.target.value);\r\n                  onUpdate(d);\r\n                }}\r\n                defaultValue=\"#000000\"\r\n                title=\"Choose font color\"\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              size\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"100\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0}\r\n              onChange={onChangeSize}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              angle\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0}\r\n              onChange={onChangeAngle}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm flex-nowrap mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              padding zero\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                disabled={paddingZeroFix}\r\n                checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                onChange={onChangePaddingZero}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              spacing\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n              onChange={onChangeSpacing}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              follow\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                onChange={onChangeFollow}\r\n                disabled={followDisabled}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              alignment\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <select\r\n                value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeAlignment}\r\n              >\r\n                <option value=\"0\">\r\n                  Left\r\n                </option>\r\n                <option value=\"1\">\r\n                  Center\r\n                </option>\r\n                <option value=\"2\">\r\n                  Right\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group input-group-sm\">\r\n            <span className=\"input-group-text\">Unit</span>\r\n            <div className=\"input-group-text\">\r\n              <select\r\n                value={digit.json?.Digit?.SystemFont.ShowUnitCheck}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeUnitCheck}\r\n              >\r\n                <option value=\"-1\">\r\n                  None\r\n                </option>\r\n                <option value=\"1\">\r\n                  small\r\n                </option>\r\n                <option value=\"2\">\r\n                  big\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <span className=\"input-group-text\">Separator</span>\r\n            <div className=\"input-group-text\">\r\n            <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.Separator != null}\r\n                onChange={onChangeSeparator}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontComponent;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { FontRotate, ImageCoord, SystemFont } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontCircleComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeRadius(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Radius = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n  function onChangeDirection(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.RotateDirection = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFontCircle}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFontCircle = !d.enabledSystemFontCircle;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont || d.enabledSystemFontCircle\r\n                if ( !d.json.Digit.SystemFont) d.json.Digit.SystemFont = new SystemFont()\r\n                if ( !d.json.Digit.SystemFont.FontRotate) {\r\n                  d.json.Digit.SystemFont.FontRotate = new FontRotate()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFontCircle ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.X ? digit.json.Digit.SystemFont.FontRotate.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.Y ? digit.json.Digit.SystemFont.FontRotate.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n            <span className=\"input-group-text\">Color</span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                type=\"color\"\r\n                className=\"form-control form-control-sm\"\r\n                style={{ width: 40 }}\r\n                value={digit.json.Digit.SystemFont.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color): '#000000'}\r\n                onChange={(e) => {\r\n                  const d = { ...digit };\r\n                  d.json.Digit.SystemFont.Color = Color.colorWrite(e.target.value);\r\n                  onUpdate(d);\r\n                }}\r\n                title=\"Choose font color\"\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              size\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"100\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0}\r\n              onChange={onChangeSize}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              radius\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"400\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.Radius ? digit.json.Digit.SystemFont.FontRotate.Radius : 0}\r\n              onChange={onChangeRadius}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              angle\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0}\r\n              onChange={onChangeAngle}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              direction\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n            <select\r\n                value={ digit.json?.Digit?.SystemFont?.FontRotate?.RotateDirection ? digit.json?.Digit?.SystemFont?.FontRotate?.RotateDirection.toFixed(0) : 0 }\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeDirection}\r\n              >\r\n                <option value=\"0\">\r\n                  Clockwise\r\n                </option>\r\n                <option value=\"1\">\r\n                  Counterlock\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"input-group input-group-sm flex-nowrap mb-1\">\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              padding zero\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                disabled={paddingZeroFix}\r\n                checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                onChange={onChangePaddingZero}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              spacing\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n              onChange={onChangeSpacing}\r\n            />\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              follow\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                onChange={onChangeFollow}\r\n                disabled={followDisabled}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n              alignment\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <select\r\n                value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeAlignment}\r\n              >\r\n                <option value=\"0\">\r\n                  Left\r\n                </option>\r\n                <option value=\"1\">\r\n                  Center\r\n                </option>\r\n                <option value=\"2\">\r\n                  Right\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group input-group-sm\">\r\n            <span className=\"input-group-text\">Unit</span>\r\n            <div className=\"input-group-text\">\r\n              <select\r\n                value={digit.json?.Digit?.SystemFont.ShowUnitCheck}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeUnitCheck}\r\n              >\r\n                <option value=\"-1\">\r\n                  None\r\n                </option>\r\n                <option value=\"1\">\r\n                  small\r\n                </option>\r\n                <option value=\"2\">\r\n                  big\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <span className=\"input-group-text\">Separator</span>\r\n            <div className=\"input-group-text\">\r\n            <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.Separator != null}\r\n                onChange={onChangeSeparator}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontCircleComponent;\r\n","import React, { FC } from 'react';\r\nimport { WatchCommonDigit } from '../model/watchFace.model';\r\nimport ImageDigitComponent from './imageDigit.component';\r\nimport SystemFontComponent from './systemFont.component';\r\nimport SystemFontCircleComponent from './systemFontCircle.component';\r\n\r\ninterface IProps {\r\n    digit: WatchCommonDigit;\r\n    title: string;\r\n    onUpdate(digit: WatchCommonDigit): void;\r\n    showDecimalPointer: boolean;\r\n    showDelimiter: boolean;\r\n    showNoData: boolean;\r\n    paddingZeroFix: boolean;\r\n  }\r\n\r\nconst ActivityDigitComponent: FC<IProps> = ({\r\n    digit,\r\n    title,\r\n    onUpdate,\r\n    showDecimalPointer,\r\n    showDelimiter,\r\n    showNoData,\r\n    paddingZeroFix,\r\n  }) => {\r\n\r\n    return (\r\n        <div>\r\n            <ImageDigitComponent\r\n            title={`Numerical (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            showDecimalPointer={showDecimalPointer}\r\n            showDelimiter={showDelimiter}\r\n            showNoData={showNoData}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n\r\n          <SystemFontComponent\r\n            title={`Systemfont Rotated (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title={`Systemfont Circle (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityDigitComponent","import { FC, useMemo } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchClockHand } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { ClockHand, Coordinates, ImageCoord, MultilangImage, MultilangImageCoord } from \"../model/json.model\";\nimport { LangCodeType } from \"../model/types.model\";\n\ninterface IProps {\n  title: string,\n  clockHand: WatchClockHand;\n  onUpdate(clockHand: WatchClockHand): void;\n  showAngle: boolean;\n  onCopyFromNormal?(): void\n}\n\nconst ClockHandComponent: FC<IProps> = ({ title, clockHand, onUpdate, showAngle, onCopyFromNormal }) => {\n  \n  const scaleImageSetIndex = useMemo<number>(() => findImageIndex(clockHand.json?.Scale?.ImageSet), [clockHand])\n\n  function findImageIndex(ar: MultilangImage[]): number {\n    if (!ar) return null\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\n    return index ? index : 0\n  }\n\n  function toggleClockHand(e) {\n    const ch = { ...clockHand };\n    ch.enabled = !ch.enabled;\n    if (ch.enabled && !ch.json) {ch.json = new ClockHand(); ch.json.StartAngle = 0; ch.json.EndAngle = 360; }\n    onUpdate(ch);\n  }\n\n  function changeEndAngle(e){\n    const ch = clockHand;\n    ch.json.EndAngle = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeStartAngle(e) {\n    const ch = clockHand;\n    ch.json.StartAngle = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerImageIndex(i: number){\n    let ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    ch.json.Pointer.ImageIndex = i;\n    onUpdate(ch);\n  }\n\n  function changeX(e) {\n    const ch = clockHand;\n    ch.json.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeY(e) {\n    const ch = clockHand;\n    ch.json.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerX(e) {\n    const ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\n    ch.json.Pointer.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerY(e) {\n    const ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\n    ch.json.Pointer.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeCoverImageIndex(i: number) {\n    let ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    ch.json.Cover.ImageIndex = i;\n    onUpdate(ch);\n  }\n\n  function  changeCoverX(e) {\n    const ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\n    ch.json.Cover.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n  \n  function changeCoverY(e) {\n    const ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\n    ch.json.Cover.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeScaleImageIndex(i: number) {\n    let ch = clockHand;\n    if (!ch.json.Scale) { \n      ch.json.Scale = new MultilangImageCoord()\n      ch.json.Scale.ImageSet[0].ImageSet.ImageIndex = i;\n    } else {\n      ch.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex = i;\n    }\n    onUpdate(ch);\n  }\n\n  function changeScaleX(e) {\n    const ch = clockHand;\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord() \n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\n    ch.json.Scale.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeScaleY(e) {\n    const ch = clockHand;\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord() \n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\n    ch.json.Scale.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={clockHand.enabled}\n              onChange={toggleClockHand}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {clockHand.enabled ? (\n        <Card.Body>\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={changePointerImageIndex}\n              imageIndex={clockHand.json?.Pointer?.ImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\">Center of rotation</span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json.Y}\n              onChange={changeY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\">Pointer offset</span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Pointer?.Coordinates?.X}\n              onChange={changePointerX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Pointer?.Coordinates?.Y}\n              onChange={changePointerY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Cover'\n              setSelectedFileIndex={changeCoverImageIndex}\n              imageIndex={clockHand.json?.Cover?.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Cover?.Coordinates?.X}\n              onChange={changeCoverX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Cover?.Coordinates?.Y}\n              onChange={changeCoverY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Scale'\n              setSelectedFileIndex={changeScaleImageIndex}\n              imageIndex={clockHand.json?.Scale?.ImageSet[scaleImageSetIndex]?.ImageSet?.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Scale?.Coordinates?.X}\n              onChange={changeScaleX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Scale?.Coordinates?.Y}\n              onChange={changeScaleY}\n            />\n          </div>\n          {showAngle ? (\n            <div className=\"input-group input-group-sm mb-1\">\n              <span className=\"input-group-text\" id=\"addon-wrapping\">\n                Start angle\n              </span>\n              <input\n                type=\"number\"\n                className=\"form-control form-control-sm\"\n                value={clockHand.json?.StartAngle}\n                onChange={changeStartAngle}\n              />\n              <span className=\"input-group-text\" id=\"addon-wrapping\">\n                End angle\n              </span>\n              <input\n                type=\"number\"\n                className=\"form-control form-control-sm\"\n                value={clockHand.json?.EndAngle}\n                onChange={changeEndAngle}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n\n\n};\n\nexport default ClockHandComponent;\n","import { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchImageCoords } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\ninterface IProps {\n  title: string;\n  imageCoords: WatchImageCoords;\n  onUpdate(imageCoords: WatchImageCoords): void;\n}\n\nconst ImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageCoords.enabled}\n              onChange={() => {\n                const ic: WatchImageCoords = { ...imageCoords };\n                ic.enabled = !ic.enabled;\n                onUpdate(ic);\n              }}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageCoords.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={(ix) => {\n                const ip = { ...imageCoords };\n                ip.json.ImageIndex = ix;\n                onUpdate(ip);\n              }}\n              imageIndex={imageCoords.json.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates.X}\n              onChange={(e) => {\n                const ip = { ...imageCoords };\n                let x = parseInt(e.target.value);\n                ip.json.Coordinates.X = !isNaN(x) ? x : 0;\n                onUpdate(ip);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates.Y}\n              onChange={(e) => {\n                const ip = { ...imageCoords };\n                let y = parseInt(e.target.value);\n                ip.json.Coordinates.Y = !isNaN(y) ? y : 0;\n                onUpdate(ip);\n              }}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ImageCoordsComponent;\n","import { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { WatchImageProgress } from \"../model/watchFace.model\";\n\ninterface IProps {\n  imageProgress: WatchImageProgress;\n  onUpdate(imageProgress: WatchImageProgress): void;\n}\n\nconst ImageProgressComponent: FC<IProps> = ({ imageProgress, onUpdate }) => {\n\n  function toggle() {\n    const ip = { ...imageProgress };\n    ip.enabled = !ip.enabled;\n    onUpdate(ip);\n  }\n\n  function changeImageIndex(i: number) {\n    let ip = { ...imageProgress };\n    ip.json.ImageSet.ImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeCount(e) {\n    const d = { ...imageProgress };\n    d.json.ImageSet.ImagesCount = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  function changeX(e, index: number) {\n    const d = {...imageProgress};\n    d.json.Coordinates[index].X = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  function changeY(e, index: number) {\n    const d = {...imageProgress};\n    d.json.Coordinates[index].Y = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Image Progress</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageProgress.enabled}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageProgress.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={changeImageIndex}\n              imageIndex={imageProgress.json.ImageSet.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Count\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageProgress.json.ImageSet.ImagesCount}\n              onChange={changeCount}\n            />\n          </div>\n            { imageProgress.json.Coordinates.map((coords, index) => (\n              <div key={index} className=\"input-group input-group-sm\">\n                <span className=\"input-group-text\">\n                  {index}\n                </span>\n                <span className=\"input-group-text\">\n                  X\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control form-control-sm\"\n                  value={coords.X}\n                  onChange={(e) => changeX(e, index)}\n                />\n                <span className=\"input-group-text\">\n                  Y\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control form-control-sm\"\n                  value={coords.Y}\n                  onChange={(e) => changeY(e, index)}\n                />\n              </div>\n            ))\n            }\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ImageProgressComponent;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Color from \"../shared/color\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { AngleSettings, ProgressBar } from \"../model/json.model\";\nimport { WatchProgressBar } from \"../model/watchFace.model\";\n\ninterface IProps {\n  progressBar: WatchProgressBar;\n  onUpdate(progressBar: WatchProgressBar): void;\n}\n\nconst ProgressbarCircleCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\n  function changeLineEnding(e: React.ChangeEvent<HTMLSelectElement>) {\n    const pBar = { ...progressBar };\n    const value = parseInt(e.target.value);\n    if (!isNaN(value)) pBar.jsonObj.Flatness = value;\n    else pBar.jsonObj.Flatness = 0;\n    onUpdate(pBar);\n  }\n\n  function toggle() {\n    const pb = { ...progressBar };\n    pb.enabledCircle = !pb.enabledCircle;\n    if (!pb.jsonObj)\n      pb.jsonObj = new ProgressBar();\n    if (!pb.jsonObj.AngleSettings)\n      pb.jsonObj.AngleSettings = new AngleSettings();\n    onUpdate(pb);\n  }\n\n  function changeX(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.X = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeY(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.Y = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeRadius(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.Radius = Math.abs(v);\n      onUpdate(d);\n    }\n  }\n\n  function changeWidth(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.Width = Math.max(0, Math.min(v, 100));\n      onUpdate(d);\n    }\n  }\n\n  function changeStartAngle(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.StartAngle = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeEndAngle(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.EndAngle = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeForegroundImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.ForegroundImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeColor(e) {\n    const d = { ...progressBar };\n    d.jsonObj.Color = Color.colorWrite(e.target.value);\n    onUpdate(d);\n  }\n\n  function changePointerImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.PointerImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeBackgroundImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.BackgroundImageIndex = i;\n    onUpdate(ip);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Progress circle</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={progressBar.enabledCircle}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {progressBar.enabledCircle ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm flex-nowrap mb-1 mt-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Center\n            </span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.Y}\n              onChange={changeY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Radius\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.Radius}\n              onChange={changeRadius}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              min=\"0\"\n              max=\"100\"\n              value={progressBar.jsonObj.Width}\n              onChange={changeWidth}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Start angle\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.StartAngle}\n              onChange={changeStartAngle}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              End angle\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.EndAngle}\n              onChange={changeEndAngle}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Foreground image'\n              setSelectedFileIndex={changeForegroundImageIndex}\n              imageIndex={progressBar.jsonObj.ForegroundImageIndex}\n            />\n            <span className=\"input-group-text\">Color</span>\n            <div className=\"input-group-text\">\n              <input\n                type=\"color\"\n                className=\"form-control form-control-sm\"\n                style={{ width: 40 }}\n                value={Color.colorRead(progressBar.jsonObj.Color)}\n                onChange={changeColor}\n                defaultValue=\"#000000\"\n                title=\"Choose progress bar color\"\n              />\n            </div>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Line ending\n            </span>\n            <div className=\"input-group-text\">\n              <select\n                className=\"form-select form-select-sm\"\n                onChange={changeLineEnding}\n              >\n                <option value=\"0\" selected={progressBar.jsonObj.Flatness === 0}>\n                  Circle\n                </option>\n                <option\n                  value=\"90\"\n                  selected={progressBar.jsonObj.Flatness === 90}\n                >\n                  Triangle\n                </option>\n                <option\n                  value=\"180\"\n                  selected={progressBar.jsonObj.Flatness === 180}\n                >\n                  Flat\n                </option>\n              </select>\n            </div>\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={changePointerImageIndex}\n              imageIndex={progressBar.jsonObj.PointerImageIndex}\n            />\n            <SelectFileListComponent\n              title='Background image'\n              setSelectedFileIndex={changeBackgroundImageIndex}\n              imageIndex={progressBar.jsonObj.BackgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ProgressbarCircleCodmponent;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Color from \"../shared/color\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { LinearSettings, ProgressBar } from \"../model/json.model\";\nimport { WatchProgressBar } from \"../model/watchFace.model\";\n\ninterface IProps {\n  progressBar: WatchProgressBar;\n  onUpdate(progressBar: WatchProgressBar): void;\n}\n\nconst ProgressbarLinearCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\n  function changeLineEnding(e: React.ChangeEvent<HTMLSelectElement>) {\n    const pBar = { ...progressBar };\n    const value = parseInt(e.target.value);\n    if (!isNaN(value)) pBar.jsonObj.Flatness = value;\n    else pBar.jsonObj.Flatness = 0;\n    onUpdate(pBar);\n  }\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Progress linear</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={progressBar.enabledLinear}\n              onChange={() => {\n                const pb = { ...progressBar };\n                pb.enabledLinear = !pb.enabledLinear;\n                if (!pb.jsonObj) pb.jsonObj = new ProgressBar();\n                if (!pb.jsonObj.LinearSettings)\n                  pb.jsonObj.LinearSettings = new LinearSettings();\n                onUpdate(pb);\n              }}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {progressBar.enabledLinear ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm flex-nowrap mb-1 mt-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.LinearSettings.StartX}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.StartX = v;\n                  onUpdate(d);\n                }\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.LinearSettings.StartY}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.StartY = v;\n                  d.jsonObj.LinearSettings.EndY = v;\n                  onUpdate(d);\n                }\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Length\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={\n                progressBar.jsonObj.LinearSettings.EndX -\n                progressBar.jsonObj.LinearSettings.StartX\n              }\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.EndX =\n                    d.jsonObj.LinearSettings.StartX + v;\n                  onUpdate(d);\n                }\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.Width}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.Width = Math.max(0, v);\n                  onUpdate(d);\n                }\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Foreground'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.ForegroundImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.ForegroundImageIndex}\n            />\n            <span className=\"input-group-text\">Color</span>\n            <div className=\"input-group-text\">\n              <input\n                type=\"color\"\n                className=\"form-control form-control-sm\"\n                style={{ width: 40 }}\n                value={Color.colorRead(progressBar.jsonObj.Color)}\n                onChange={(e) => {\n                  const d = { ...progressBar };\n                  d.jsonObj.Color = Color.colorWrite(e.target.value);\n                  onUpdate(d);\n                }}\n                defaultValue=\"#000000\"\n                title=\"Choose progress bar color\"\n              />\n            </div>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Line ending\n            </span>\n            <div className=\"input-group-text\">\n              <select\n                className=\"form-select form-select-sm\"\n                onChange={changeLineEnding}\n              >\n                <option value=\"0\" selected={progressBar.jsonObj.Flatness === 0}>\n                  Circle\n                </option>\n                <option\n                  value=\"180\"\n                  selected={progressBar.jsonObj.Flatness === 180}\n                >\n                  Flat\n                </option>\n              </select>\n            </div>\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.PointerImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.PointerImageIndex}\n            />\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.BackgroundImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.BackgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ProgressbarLinearCodmponent;\n","import { FC, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { WatchActivity, WatchCommonDigit } from \"../model/watchFace.model\";\nimport ActivityDigitComponent from \"./activityDigit.component\";\nimport ClockHandComponent from \"./clockHand.component\";\nimport ImageCoordsComponent from \"./imageCoords.component\";\nimport ImageProgressComponent from \"./imageProgress.component\";\nimport ProgressbarCircleCodmponent from \"./progressbarCircle.component\";\nimport ProgressbarLinearComponent from \"./progressbarLinear.component\";\n\ninterface IProps {\n  activity: WatchActivity;\n  title: string;\n  onUpdateActivity(activity: WatchActivity): void;\n  onDelete(e): void;\n  showDecimalPointer?: boolean;\n  showDelimiter?: boolean;\n  showNoData?: boolean;\n  paddingZeroFix?: boolean;\n  showProgress?: boolean;\n  onCopy?(): void;\n  titleDefault?: string;\n  titleMin?: string;\n  titleMax?: string;\n}\n\nconst ActivityComponent: FC<IProps> = ({\n  activity,\n  title,\n  onUpdateActivity,\n  showDecimalPointer,\n  showDelimiter,\n  showNoData,\n  paddingZeroFix,\n  showProgress,\n  onCopy,\n  onDelete,\n  titleDefault,\n  titleMin,\n  titleMax\n}) => {\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function onUpdateDigit(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digit = {...d}\n    onUpdateActivity(a)\n  }\n  \n  function onUpdateDigitMin(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digitMin = {...d}\n    onUpdateActivity(a)\n  }\n\n  function onUpdateDigitMax(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digitMax = {...d}\n    onUpdateActivity(a)\n  }\n\n  return (\n    <Card className=\"activity w-100\">\n      <Card.Header\n      className=\"d-flex justify-content-between align-items-center\"\n      onClick={() => setCollapsed(!collapsed)}>\n          <span className=\"input-group-text\">{title}</span>\n          <button className=\"btn btn-outline-danger\" type=\"button\" onClick={(e) => {e.stopPropagation(); onDelete(e);}}>Delete</button>\n      </Card.Header>\n      {!collapsed ? (\n        <Card.Body>\n          { !onCopy ? '' :<button className='btn btn-outline-secondary btn-sm mr-0' onClick={onCopy}>Copy from normal screen</button> }\n\n          <ActivityDigitComponent\n            digit={activity.digit}\n            title={titleDefault ? titleDefault : title}\n            onUpdate={onUpdateDigit}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          />\n\n        { titleMin ?\n          <ActivityDigitComponent\n            digit={activity.digitMin}\n            title={titleMin}\n            onUpdate={onUpdateDigitMin}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          /> : '' }\n\n        { titleMax ? \n          <ActivityDigitComponent\n            digit={activity.digitMax}\n            title={titleMax}\n            onUpdate={onUpdateDigitMax}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          /> : '' }\n\n          {showProgress === undefined || showProgress === true ? \n            <>\n              <ImageProgressComponent\n                imageProgress={activity.imageProgress}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.imageProgress = d;\n                  onUpdateActivity(a);\n                }}\n              />\n              <ProgressbarCircleCodmponent\n                progressBar={activity.progressBar}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.progressBar = d;\n                  onUpdateActivity(a);\n                }}\n              />\n              <ProgressbarLinearComponent\n                progressBar={activity.progressBar}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.progressBar = d;\n                  onUpdateActivity(a);\n                }}\n              />\n            <ClockHandComponent\n              title=\"Pointer Progress\"\n              clockHand={activity.pointerProgress}\n              onUpdate={(ch) => {\n                const a = { ...activity };\n                a.pointerProgress = ch;\n                onUpdateActivity(a);\n              }}\n              showAngle={true}\n            />\n            </> : \"\"}\n          {activity.icon ? (\n            <ImageCoordsComponent\n              title=\"Icon\"\n              imageCoords={activity.icon}\n              onUpdate={(ip) => {\n                const a = { ...activity };\n                a.icon = ip;\n                onUpdateActivity(a);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </Card.Body>\n      ) : (\n        \"\"\n        )}\n    </Card>\n  );\n};\n\nexport default ActivityComponent;\n","import { FC, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { ActivityType, JsonType } from \"../model/types.model\";\nimport { getActivityFromJson, WatchActivity } from \"../model/watchFace.model\";\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\nimport ActivityComponent from \"./activity.component\";\n\n\ninterface IProps {\n  activitys: WatchActivity[];\n  onUpdate(activitys: WatchActivity[]): void;\n}\n\nconst ActivityListComponent: FC<IProps> = ({activitys, onUpdate}) => {\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n  const [activityToAdd, setActivityToAdd] = useState<number>(ActivityType.Date.index);\n\n  function updateOrder(list: IDNDItem<WatchActivity>[]) {\n    let al = list.map((value) => value.item)\n    onUpdate(al)\n  }\n\n  function updateActivity(index: number, a: WatchActivity) {\n    let al = [...activitys]\n    al[index] = {...a}\n    onUpdate(al)\n  }\n\n  function addActivity(e) {\n    e.stopPropagation()\n    if (activityToAdd) {\n      let _a = getActivityFromJson(null, ActivityType.findByIndex(activityToAdd) )\n      if (_a) {\n        activitys.push(_a)\n        setCollapsed(false)\n        onUpdate(activitys)\n      }\n    }\n  }\n\n  function deleteActivity(e, index: number) {\n    e.stopPropagation()\n    if ( window.confirm(`would you delete this \"${activitys[index].digit.con.title}\" activity?`)) {\n      let al = [...activitys]\n      al.splice(index, 1)\n      onUpdate(al)\n    }\n  }\n\n  return (\n    <Card>\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\n        title='Click to open / close'\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Activity [{activitys?.length}]\n        <span className=\"d-flex flex-nowrap\">\n          <select className=\"form-select\" \n            onChange={(e) => setActivityToAdd(parseInt(e.target.value))}\n            onClick={(e) => e.stopPropagation()}\n            value={activityToAdd}\n            >\n              {\n                Object.keys(ActivityType).map((key) => \n                  ActivityType[key] instanceof JsonType ?\n                    <option value={ActivityType[key].index}>{ActivityType[key].json}</option>\n                    : ''\n                )\n              }\n          </select>\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addActivity}>Add</button>\n        </span>\n      </Card.Header>\n      {!collapsed ? (\n        <Card.Body>\n          {activitys?.length > 0 ? \n              <DnDListComponent\n              _list={activitys.map((item, index) => ( { item: item, reactItem:\n                <ActivityComponent\n                  key={item.key}\n                  activity={item}\n                  onUpdateActivity={(a) => updateActivity(index, a)}\n                  onDelete={(e) => deleteActivity(e, index)}\n                  showNoData={true}\n                  showDecimalPointer={item.type === ActivityType.Distance}\n                  showProgress={item.type !== ActivityType.Distance}\n                  showDelimiter={item.type === ActivityType.Weather}\n                  title={item.digit ? item.digit.con.title : null}\n                  titleDefault={item.digit ? item.digit.con.titleDefault : null}\n                  titleMin={item.digitMin ? item.digitMin.con.titleMin : null}\n                  titleMax={item.digitMax ? item.digitMax.con.titleMax : null}\n                />})\n              )}\n              updateOrder={updateOrder}\n              />\n          : 'no activitys addes'}\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ActivityListComponent;\n","import React, { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\nconst BackgroundComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function onChangeBackgroundPreviewImage(index: number) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, previewIndex: index },\n    });\n  }\n\n  function onChangeBackgroundImageIndex(index: number) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, imageIndex: index },\n    });\n  }\n\n  function onChangeBackgroundColor(e: React.ChangeEvent<any>) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, color: e.target.value },\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        className=\"clickable\"\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Background\n      </Card.Header>\n      {!collapsed ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1 flex-nowrap\">\n            <SelectFileListComponent\n              title='Preview'\n              setSelectedFileIndex={onChangeBackgroundPreviewImage}\n              imageIndex={watchface.background.previewIndex}\n            />\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={onChangeBackgroundImageIndex}\n              imageIndex={watchface.background.imageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm flex-nowrap\">\n            <span className=\"input-group-text\">Color</span>\n            <div className=\"input-group-text\">\n              <input\n                type=\"color\"\n                className=\"form-control form-control-sm\"\n                style={{ width: 40 }}\n                onChange={onChangeBackgroundColor}\n                id=\"colorBackground\"\n                value={watchface.background.color}\n                title=\"Choose background color\"\n                />\n            </div>\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default BackgroundComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDate } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst DateComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function updateDay(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.day = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonth(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.month = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonthAsWord(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.monthAsWord = d;\r\n    updateDate(date);\r\n  }\r\n  function updateYear(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.year = d;\r\n    updateDate(date);\r\n  }\r\n  function updateWeekday(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.weekDay = d;\r\n    updateDate(date);\r\n  }\r\n\r\n  function updateDate(wdf: WatchDate) {\r\n    setWatchface({ ...watchface, date: wdf });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header\r\n          onClick={() => {\r\n            setCollapsed(!collapsed);\r\n          }}\r\n        >\r\n          Date\r\n        </Card.Header>\r\n        <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n          <ImageDigitComponent\r\n            title=\"Day Digit\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Day Systemfont Rotated\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Day Systemfont Circle\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n\r\n          <ImageDigitComponent\r\n            title=\"Month\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Month Systemfont Rotated\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month as word\"\r\n            digit={watchface.date.monthAsWord}\r\n            onUpdate={updateMonthAsWord}\r\n            paddingZeroFix={true}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Year\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Year Systemfont Rotated\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Year Systemfont Circle\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Weekday\"\r\n            digit={watchface.date.weekDay}\r\n            onUpdate={updateWeekday}\r\n            paddingZeroFix={true}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateComponent;\r\n","import { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport { WatchStatus } from \"../model/watchFace.model\";\nimport ImageCoordsComponent from \"./imageCoords.component\";\n\nconst StatusComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function updateStatus(status: WatchStatus) {\n    setWatchface({ ...watchface, status: status });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Status\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ImageCoordsComponent\n          title=\"Bluetooth\"\n          imageCoords={watchface.status.bluetooth}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, bluetooth: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Do Not Disturb\"\n          imageCoords={watchface.status.dnd}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, dnd: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Alarm\"\n          imageCoords={watchface.status.alarm}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, alarm: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Lock\"\n          imageCoords={watchface.status.lock}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, lock: ic}\n            updateStatus(status)\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\nexport default StatusComponent;\n","import { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport ClockHandComponent from \"./clockHand.component\";\n\nconst TimeAnalogComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Time Analog\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ClockHandComponent\n          title=\"Hours\"\n          clockHand={watchface.dialFace.hoursClockhand}\n          showAngle={false}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.dialFace.hoursClockhand = ch;\n            setWatchface(w);\n          }}\n        />\n\n        <ClockHandComponent\n          title=\"Minutes\"\n          clockHand={watchface.dialFace.minutesClockhand}\n          onUpdate={(ch) => {\n            const d = { ...watchface };\n            d.dialFace.minutesClockhand = ch;\n            setWatchface(d);\n          }}\n          showAngle={false}\n        />\n\n        <ClockHandComponent\n          title=\"Seconds\"\n          clockHand={watchface.dialFace.secondsClockhand}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.dialFace.secondsClockhand = ch;\n            setWatchface(w);\n          }}\n          showAngle={false}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TimeAnalogComponent;\n","import { FC, useMemo } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchMultilangImageCoords } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { Coordinates, MultilangImage } from \"../model/json.model\";\nimport { LangCodeType } from \"../model/types.model\";\n\ninterface IProps {\n  title: string;\n  imageCoords: WatchMultilangImageCoords;\n  onUpdate(imageCoords: WatchMultilangImageCoords): void;\n}\n\nconst MultilangImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\n\n  const imageSetIndex = useMemo<number>(() => findImageIndex(imageCoords.json.ImageSet), [imageCoords])\n\n  function findImageIndex(ar: MultilangImage[]): number {\n    if (!ar) return null\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\n    return index >= 0 ? index : 0\n  }\n\n  function toggle() {\n    const d = { ...imageCoords };\n    d.enabled = !d.enabled;\n    if ( !d.json.ImageSet) {\n      d.json.ImageSet = []\n      let digitimage = new MultilangImage()\n      digitimage.ImageSet.ImagesCount = d.count\n      d.json.ImageSet[0] = digitimage\n    }\n  }\n\n  function changeImageIndex(ix: number) {\n    const ip = { ...imageCoords };\n    ip.json.ImageSet[imageSetIndex].ImageSet.ImageIndex = ix;\n    onUpdate(ip);\n  }\n\n  function changeX(e) {\n    const ip = { ...imageCoords };\n    let x = parseInt(e.target.value);\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\n    ip.json.Coordinates.X = !isNaN(x) ? x : 0;\n    onUpdate(ip);\n  }\n\n  function changeY(e) {\n    const ip = { ...imageCoords };\n    let y = parseInt(e.target.value);\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\n    ip.json.Coordinates.Y = !isNaN(y) ? y : 0;\n    onUpdate(ip);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageCoords.enabled}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageCoords.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={changeImageIndex}\n              imageIndex={imageCoords.json?.ImageSet[imageSetIndex]?.ImageSet.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates?.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates?.Y}\n              onChange={changeY}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default MultilangImageCoordsComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst TimeDigitalComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateSecondsDigit(s: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.secondsDigital = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, dialFace: wdf });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours Digits\"\r\n          digit={watchface.dialFace.hoursDigital}\r\n          onUpdate={updateHoursDigit}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={watchface.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={watchface.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={watchface.dialFace.minutesDigital}\r\n          onUpdate={updateMinutesDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={watchface.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={watchface.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Seconds\"\r\n          digit={watchface.dialFace.secondsDigital}\r\n          onUpdate={updateSecondsDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Seconds Systemfont Rotated\"\r\n            digit={watchface.dialFace.secondsDigital}\r\n            onUpdate={updateSecondsDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Seconds Systemfont Circle\"\r\n            digit={watchface.dialFace.secondsDigital}\r\n            onUpdate={updateSecondsDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={watchface.dialFace.am}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={watchface.dialFace.pm}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"../Blocks/activitylist.component\";\r\nimport BackgroundComponent from \"../Blocks/background.component\";\r\nimport DateComponent from \"../Blocks/date.component\";\r\nimport StatusComponent from \"../Blocks/status.component\";\r\nimport TimeAnalogComponent from \"../Blocks/timeAnalog.component\";\r\nimport TimeDigitalComponent from \"../Blocks/timeDigital.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchActivity } from \"../model/watchFace.model\";\r\n\r\nconst ScreenNormalcomponent: FC = () => {\r\n\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = {...watchface}\r\n    w.activity = al\r\n    setWatchface(w)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackgroundComponent />\r\n      <TimeDigitalComponent />\r\n      <TimeAnalogComponent />\r\n      <DateComponent />\r\n      <ActivityListComponent \r\n        activitys={watchface.activity}\r\n        onUpdate={updateActivitys}\r\n      />\r\n      <StatusComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreenNormalcomponent;\r\n","export class WeatherStates {\r\n public static ar: string[] = [\r\n    'Cloudy',\r\n    'Chance of rain',\r\n    'Chance of snow',\r\n    'Sunny',\r\n    'Overcast',\r\n    'Light rain',\r\n    'Light snow',\r\n    'Moderate rain',\r\n    'Moderate snow',\r\n    'Heavy snowfall',\r\n    'Heavy rain',\r\n    'Sandstorm',\r\n    'Sleet',\r\n    'Fog',\r\n    'Haze',\r\n    'Thunderstorm',\r\n    'Snowstorm',\r\n    'Dusty',\r\n    'Extreme rain',\r\n    'Rain with hail',\r\n    'Heavy rain with hail',\r\n    'Rainstorm',\r\n    'Dust storm',\r\n    'Severe sandstorm',\r\n    'Torrential rain',\r\n    'Unknown weather',\r\n    'Cloudy night',\r\n    'Rainy night',\r\n    'Clear night'\r\n ]\r\n}","import React, { FC, useContext, useEffect, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WeatherStates } from \"../model/weather.states\";\r\n\r\nconst PreviewStatesComponent: FC = () => {\r\n  const { watchface, watchState, setWatchState } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  useEffect(() => {\r\n    const ws = { ...watchState };\r\n    if ( watchface.widgets?.json?.Widget ) {\r\n      if ( watchState.widgets.length > watchface.widgets.json.Widget.length) {\r\n        ws.widgets.splice(watchface.widgets.json.Widget.length-1)\r\n        setWatchState(ws)\r\n      } else if ( watchState.widgets.length < watchface.widgets.json.Widget.length) {\r\n        for(let i = watchState.widgets.length; i < watchface.widgets.json.Widget.length; i++) {\r\n          ws.widgets.push(0)\r\n        }\r\n        setWatchState(ws)\r\n      }\r\n    } else {\r\n      ws.widgets = []\r\n      setWatchState(ws)\r\n    }\r\n  }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const date = useMemo(\r\n    () =>\r\n      `${watchState.year.toString().padStart(4, \"0\")}-${watchState.month\r\n        .toString()\r\n        .padStart(2, \"0\")}-${watchState.day.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  const time = useMemo(\r\n    () =>\r\n      `${watchState.hours.toString().padStart(2, \"0\")}:${watchState.minutes\r\n        .toString()\r\n        .padStart(2, \"0\")}:${watchState.seconds.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  function updateDate(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let date = new Date(e.target.value);\r\n    const ws = { ...watchState };\r\n    ws.year = date.getFullYear();\r\n    ws.month = date.getMonth() + 1;\r\n    ws.monthasword = date.getMonth();\r\n    ws.day = date.getDate();\r\n    ws.weekday = date.getDay() > 0 ? date.getDay() - 1 : 6;\r\n    setWatchState(ws);\r\n  }\r\n\r\n  function updateTime(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let [h, m, s] = e.target.value.split(\":\");\r\n    const ws = { ...watchState };\r\n    if (!isNaN(parseInt(h))) ws.hours = parseInt(h);\r\n    if (!isNaN(parseInt(m))) ws.minutes = parseInt(m);\r\n    if (!isNaN(parseInt(s))) ws.seconds = parseInt(s);\r\n    setWatchState(ws);\r\n  }\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Date</span>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control form-control-sm\"\r\n            value={date}\r\n            onChange={updateDate}\r\n          />\r\n          <span className=\"input-group-text\">Time</span>\r\n          <input\r\n            type=\"time\"\r\n            className=\"form-control form-control-sm\"\r\n            step=\"1\"\r\n            value={time}\r\n            onChange={updateTime}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Battery</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.battery}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.battery = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Calories</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.calories}\r\n            onChange={(e) => {\r\n              let ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.calories = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Steps</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.steps}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.steps = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Steps Goal</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.stepsGoal}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stepsGoal = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Hearthrate</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.hearthrateGoal}\r\n            value={watchState.hearthrate}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.hearthrate = !isNaN(v) ? Math.min(v, watchState.hearthrateGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Distance</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"9999\"\r\n            value={watchState.distance}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.distance = !isNaN(v) ? Math.min(v, 9999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">PAI</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.paiGoal}\r\n            value={watchState.pai}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.pai = !isNaN(v) ? Math.min(v, watchState.paiGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">StandUp</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.standupGoal}\r\n            value={watchState.standup}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.standup = !isNaN(v) ? Math.min(v, watchState.standupGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Stress</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.stress}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stress = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Fat Burning</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99\"\r\n            value={watchState.fatBurning}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.fatBurning = !isNaN(v) ? Math.min(v, 99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Weather Icon</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"28\"\r\n            value={watchState.weatherIcon}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.weatherIcon = !isNaN(v) ? Math.min(v, 28) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">{WeatherStates.ar[watchState.weatherIcon]}</span>\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Current</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperature}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperature = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Min</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMin}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMin = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Max</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMax}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMax = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">UV Index</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"11\"\r\n            value={watchState.uvIndex}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.uvIndex = !isNaN(v) ? Math.min(v, 11) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Quality</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"500\"\r\n            value={watchState.airQuality}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airQuality = !isNaN(v) ? Math.min(v, 500) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Humidity</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.humidity}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.humidity = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Windforce</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"12\"\r\n            value={watchState.windForce}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.windForce = !isNaN(v) ? Math.min(v, 12) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Pressure</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.airPressureGoal}\r\n            value={watchState.airPressure}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airPressure = !isNaN(v) ? Math.min(v, watchState.airPressureGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Blutooth\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.bluetooth}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.bluetooth = !ws.bluetooth;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            DnD\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.dnd}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.dnd = !ws.dnd;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Alarm\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.alarm}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.alarm = !ws.alarm;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Lock\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.lock}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.lock = !ws.lock;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <Card className='mt-3'>\r\n          <Card.Header>\r\n            <h3>Preview of widgets element</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            { watchState.widgets?.length > 0 ? watchState.widgets.map((w, index) =>\r\n            <div className=\"input-group input-group-sm mb-1\">\r\n              <span className=\"input-group-text\">Widget {index+1}. Element for preview </span>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-control-sm\"\r\n                value={w+1}\r\n                min={1}\r\n                max={watchface.widgets?.json?.Widget[index]?.WidgetElement?.length}\r\n                onChange={(e) => {\r\n                  const ws = { ...watchState };\r\n                  const v = parseInt(e.target.value);\r\n                  ws.widgets[index] = !isNaN(v) ? Math.max(0, v-1) : 0;\r\n                  setWatchState(ws);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : 'no widgets in watchface' }\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewStatesComponent;\r\n","import React, { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\nconst BackgroundAODComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function onChangeBackgroundImageIndex(index: number) {\n    setWatchface({\n      ...watchface,\n      aod: { ...watchface.aod, backgroundImageIndex: index },\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        className=\"clickable\"\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Background\n      </Card.Header>\n      {!collapsed ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={onChangeBackgroundImageIndex}\n              imageIndex={watchface.aod.backgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default BackgroundAODComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDate } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst DateAODComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function updateDay(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.day = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonth(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.month = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonthAsWord(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.monthAsWord = d;\r\n    updateDate(date);\r\n  }\r\n  function updateYear(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.year = d;\r\n    updateDate(date);\r\n  }\r\n  function updateWeekday(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.weekDay = d;\r\n    updateDate(date);\r\n  }\r\n\r\n  function copyDayFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.day = {...watchface.date.day}\r\n    updateDate(date)\r\n  }\r\n  function copyMonthFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.month = {...watchface.date.month}\r\n    updateDate(date)\r\n  }\r\n  function copyMonthAsWordFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.monthAsWord = {...watchface.date.monthAsWord}\r\n    updateDate(date)\r\n  }\r\n  function copyYearFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.year = {...watchface.date.year}\r\n    updateDate(date)\r\n  }\r\n  function copyWeekdayFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.weekDay = {...watchface.date.weekDay}\r\n    updateDate(date)\r\n  }\r\n\r\n  function updateDate(wdf: WatchDate) {\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, date: wdf} });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header\r\n          onClick={() => {\r\n            setCollapsed(!collapsed);\r\n          }}\r\n        >\r\n          Date\r\n        </Card.Header>\r\n        <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n          <ImageDigitComponent\r\n            title=\"Day Digits\"\r\n            digit={watchface.aod.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Day Systemfont Rotated\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Day Systemfont Circle\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month Digits\"\r\n            digit={watchface.aod.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Month Systemfont Rotated\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month as word\"\r\n            digit={watchface.aod.date.monthAsWord}\r\n            onUpdate={updateMonthAsWord}\r\n            paddingZeroFix={true}\r\n            onCopyFromNormal={copyMonthAsWordFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Year\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Year Systemfont Rotated\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Weekday\"\r\n            digit={watchface.aod.date.weekDay}\r\n            onUpdate={updateWeekday}\r\n            paddingZeroFix={true}\r\n            onCopyFromNormal={copyWeekdayFromNormal}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateAODComponent;\r\n","import { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport ClockHandComponent from \"./clockHand.component\";\n\nconst TimeAnalogAODComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function copyHoursFromNormal() {\n    const t = {...watchface.aod.dialFace}\n    t.hoursClockhand = {...watchface.dialFace.hoursClockhand}\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\n  }\n  function copyMinutesFromNormal() {\n    const t = {...watchface.aod.dialFace}\n    t.minutesClockhand = {...watchface.dialFace.minutesClockhand}\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Time Analog\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ClockHandComponent\n          title=\"Hours\"\n          clockHand={watchface.aod.dialFace.hoursClockhand}\n          showAngle={false}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.aod.dialFace.hoursClockhand = ch;\n            setWatchface(w);\n          }}\n          onCopyFromNormal={copyHoursFromNormal}\n        />\n\n        <ClockHandComponent\n          title=\"Minutes\"\n          clockHand={watchface.aod.dialFace.minutesClockhand}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.aod.dialFace.minutesClockhand = ch;\n            setWatchface(w);\n          }}\n          showAngle={false}\n          onCopyFromNormal={copyMinutesFromNormal}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TimeAnalogAODComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst TimeDigitalAODComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n\r\n  function copyHoursFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.hoursDigital = {...watchface.dialFace.hoursDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n  function copyMinutesFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.minutesDigital = {...watchface.dialFace.minutesDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: wdf} });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours\"\r\n          digit={watchface.aod.dialFace.hoursDigital}\r\n          onUpdate={updateHoursDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={false}\r\n          onCopyFromNormal={copyHoursFromNormal}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={watchface.aod.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={watchface.aod.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={watchface.aod.dialFace.minutesDigital}\r\n          onUpdate={updateMinutesDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={true}\r\n          onCopyFromNormal={copyMinutesFromNormal}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={watchface.aod.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={watchface.aod.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={watchface.dialFace.am}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={watchface.dialFace.pm}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalAODComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"../Blocks/activitylist.component\";\r\nimport BackgroundAODComponent from \"../Blocks/backgroundaod.component\";\r\nimport DateAODComponent from \"../Blocks/dateaod.component\";\r\nimport TimeAnalogAODComponent from \"../Blocks/timeAnalogAOD.component\";\r\nimport TimeDigitalAODComponent from \"../Blocks/timeDigitalAOD.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchActivity } from \"../model/watchFace.model\";\r\n\r\nconst AodComponent: FC = () => {\r\n\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = {...watchface}\r\n    w.aod.activitylist = al\r\n    setWatchface(w)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <BackgroundAODComponent />\r\n      <TimeDigitalAODComponent />\r\n      <TimeAnalogAODComponent />\r\n      <DateAODComponent />\r\n      <ActivityListComponent\r\n        activitys={watchface.aod.activitylist}\r\n        onUpdate={updateActivitys}\r\n       />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AodComponent;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { Activity, DigitalDigit, Shortcut, WatchJson } from \"../model/json.model\";\r\nimport { DateType, LangCodeType } from \"../model/types.model\";\r\nimport WatchFace, { WatchActivity, WatchAOD, WatchClockHand, WatchCommonDigit, WatchImageCoords, WatchImageProgress, WatchProgressBar } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\nimport { Constant } from \"../shared/constant\";\r\nimport cl from './JsonComponent.module.css';\r\n\r\nconst JsonComponent: FC = () => {\r\n\r\n    const {watchface, jsonName } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n    const [json, setJson] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        let json = generateJson(watchface)\r\n        setJson(json)\r\n        saveJson(json)\r\n    }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function generateJson(w: WatchFace): string {\r\n        let timeDigitalEnabled = w.dialFace.hoursDigital.enabled || w.dialFace.minutesDigital.enabled || w.dialFace.secondsDigital.enabled || w.dialFace.am.enabled || w.dialFace.pm.enabled\r\n        let timeDigitalAodEnabled = w.aod.dialFace.hoursDigital.enabled || w.aod.dialFace.minutesDigital.enabled || w.aod.dialFace.am.enabled || w.aod.dialFace.pm.enabled\r\n        let timeClockHandEnabled = w.dialFace.hoursClockhand.enabled || w.dialFace.minutesClockhand.enabled || w.dialFace.secondsClockhand.enabled\r\n        let timeClockHandAodEnabled = w.aod.dialFace.hoursClockhand.enabled || w.aod.dialFace.minutesClockhand.enabled\r\n\r\n        let dateEnabled = w.date.day.enabled || w.date.month.enabled || w.date.monthAsWord.enabled || w.date.weekDay.enabled || w.date.year.enabled\r\n        let dateAodEnabled = w.aod.date.day.enabled || w.aod.date.month.enabled || w.aod.date.monthAsWord.enabled || w.aod.date.weekDay.enabled || w.aod.date.year.enabled\r\n        let statusEnabled = w.status.alarm.enabled || w.status.bluetooth.enabled || w.status.lock.enabled || w.status.dnd.enabled\r\n\r\n        let dialFaceEnabled = timeDigitalEnabled || timeClockHandEnabled\r\n        let dialFaceAodEnabled = timeDigitalAodEnabled || timeClockHandAodEnabled\r\n\r\n        let timeDigits = getTimeDigital(watchface)\r\n        let timeDigitsAod = getTimeDigital(watchface.aod)\r\n\r\n        let dateDigits = getDate(watchface)\r\n        let dateDigitsAod = getDate(watchface.aod)\r\n        \r\n        let activitys = activitysToJson(watchface.activity)\r\n        let activitysAod = activitysToJson(watchface.aod.activitylist)\r\n\r\n        let j: WatchJson = {\r\n            Info: {\r\n                DeviceId: Constant.deviceId\r\n            },\r\n            Background: w.background.imageIndex || w.background.color || w.background.previewIndex  ? {\r\n                Preview: w.background.previewIndex ? [\r\n                    {\r\n                        LangCode: LangCodeType.All.json,\r\n                        ImageSet: {\r\n                            ImageIndex: w.background.previewIndex ,\r\n                            ImagesCount: 1\r\n                        }\r\n                    }\r\n                ] : null,\r\n                BackgroundImageIndex: w.background.imageIndex ,\r\n                Color: w.background.color ? Color.colorBackgroundWrite(w.background.color) : null\r\n            } : null\r\n            ,\r\n            DialFace: dialFaceEnabled ? {\r\n                DigitalDialFace:  timeDigitalEnabled ? {\r\n                    Digits: timeDigits.length > 0 ? timeDigits : null,\r\n                    AM: w.dialFace.am.enabled ? w.dialFace.am.json : null,\r\n                    PM: w.dialFace.pm.enabled ? w.dialFace.pm.json : null,\r\n                } : null,\r\n                AnalogDialFace: timeClockHandEnabled ? {\r\n                    Hours: w.dialFace.hoursClockhand.enabled ? w.dialFace.hoursClockhand.json : null,\r\n                    Minutes:  w.dialFace.minutesClockhand.enabled ? w.dialFace.minutesClockhand.json : null,\r\n                    Seconds:  w.dialFace.secondsClockhand.enabled ? w.dialFace.secondsClockhand.json : null\r\n                } : null,\r\n                ProgressDialFace: null\r\n            } : null,\r\n            System: dateEnabled || activitys.length > 0 || statusEnabled ? {\r\n                Status: statusEnabled ? {\r\n                    Bluetooth: w.status.bluetooth.enabled ? w.status.bluetooth.json: null,\r\n                    DoNotDisturb: w.status.dnd.enabled ? w.status.dnd.json : null,\r\n                    Lock: w.status.lock.enabled ? w.status.lock.json: null,\r\n                    Alarm: w.status.alarm.enabled ? w.status.alarm.json : null\r\n                }: null,\r\n                Date: dateEnabled ? {\r\n                    DateDigits: dateDigits.length > 0 ? dateDigits : null,\r\n                    WeeksDigits: w.date.weekDay.enabled ? w.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitys.length > 0 ? activitys : null\r\n            } : null,\r\n            Widgets: w.widgets ? w.widgets.json : null,\r\n            ScreenIdle: w.aod.backgroundImageIndex || dialFaceAodEnabled || dateAodEnabled || activitysAod.length > 0 ? {\r\n                BackgroundImageIndex: w.aod.backgroundImageIndex ? w.aod.backgroundImageIndex : null,\r\n                DialFace: dialFaceAodEnabled ? {\r\n                    DigitalDialFace:  timeDigitalAodEnabled ? {\r\n                        Digits: timeDigitsAod.length > 0 ? timeDigitsAod : null,\r\n                        AM: w.aod.dialFace.am.enabled ? w.aod.dialFace.am.json : null,\r\n                        PM: w.aod.dialFace.pm.enabled ? w.aod.dialFace.pm.json : null,\r\n                    } : null,\r\n                    AnalogDialFace: timeClockHandAodEnabled ? {\r\n                        Hours: w.aod.dialFace.hoursClockhand.enabled ? w.aod.dialFace.hoursClockhand.json : null,\r\n                        Minutes:  w.aod.dialFace.minutesClockhand.enabled ? w.aod.dialFace.minutesClockhand.json : null,\r\n                        Seconds: null\r\n                    } : null,\r\n                    ProgressDialFace: null \r\n                } : null,\r\n                Date: dateAodEnabled ? {\r\n                    DateDigits: dateDigitsAod.length > 0 ? dateDigitsAod : null,\r\n                    WeeksDigits: w.aod.date.weekDay.enabled ? w.aod.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitysAod.length > 0 ? activitysAod : null,\r\n            } : null\r\n        }\r\n        return JSON.stringify(j, (key, value) => {\r\n            if (value !== null && value !== undefined) return value\r\n          }, \"  \")\r\n    }\r\n    \r\n    function saveJson(json: string) {\r\n        if (json.length > 0) {\r\n            var a = document.getElementById(\"saveJson\") as HTMLAnchorElement;\r\n            if (a) {\r\n                var file = new Blob([json], {type: 'text/plain'});\r\n                let filename = jsonName ? jsonName : 'watchface.json'\r\n                a.href = URL.createObjectURL(file);\r\n                a.download = filename;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card className={cl.json}>\r\n            <pre>\r\n                {json}\r\n            </pre>\r\n        </Card>\r\n        <br/>\r\n        <a href=\"a\" id=\"saveJson\">download json file</a>\r\n        </>\r\n    )\r\n    \r\n};\r\n\r\nexport default JsonComponent;\r\n\r\nexport function activitysToJson(alist: WatchActivity[]): Activity[] {\r\n    let activitys: Activity[] = []\r\n    if (!alist) return activitys\r\n    alist.forEach(item => {\r\n        let digits: WatchCommonDigit[] = []\r\n        let enabled = false\r\n        let imageProgress: WatchImageProgress = null\r\n        let pointerProgress: WatchClockHand = null\r\n        let icon: WatchImageCoords = null\r\n        let progressBar: WatchProgressBar = null\r\n        let shortcut: Shortcut = null\r\n\r\n        if (item) {\r\n            if (item.digit.enabled) {enabled = true; digits.push(item.digit)}\r\n            if (item.digitMin.enabled) {enabled = true; digits.push(item.digitMin)}\r\n            if (item.digitMax.enabled) {enabled = true; digits.push(item.digitMax)}\r\n            if (item.imageProgress.enabled) {\r\n                enabled = true\r\n                imageProgress = item.imageProgress\r\n            }\r\n            if (item.pointerProgress.enabled) {\r\n                enabled = true\r\n                pointerProgress = item.pointerProgress\r\n            }\r\n            if (item.progressBar.enabledLinear || item.progressBar.enabledCircle) {\r\n                enabled = true\r\n                progressBar = item.progressBar\r\n            }\r\n            if (item.icon.enabled) {\r\n                enabled = true\r\n                icon = item.icon\r\n            }\r\n            if (item.shortcut) {\r\n                enabled = true\r\n                shortcut = item.shortcut\r\n            }\r\n        }\r\n\r\n        if (enabled) activitys.push({\r\n            Type: item.type.json,\r\n            PointerProgress: pointerProgress ? pointerProgress.json : null,\r\n            ProgressBar: progressBar ? progressBar.jsonObj : null,\r\n            ImageProgress: imageProgress?.enabled ? imageProgress.json : null,\r\n            Digits: digits.length > 0 ? digits.map(d => d.json) : null,\r\n            Shortcut: shortcut ? shortcut : null,\r\n            Icon: icon?.enabled ? icon.json : null\r\n        })\r\n\r\n        })\r\n    return activitys\r\n}\r\n\r\nfunction getTimeDigital(w: WatchFace | WatchAOD): DigitalDigit[] {\r\n    let timeDigits: DigitalDigit[] = []\r\n\r\n    if (w.dialFace.hoursDigital?.enabled) timeDigits.push(w.dialFace.hoursDigital.json)\r\n    if (w.dialFace.minutesDigital?.enabled) timeDigits.push(w.dialFace.minutesDigital.json)\r\n    if (w.dialFace.secondsDigital?.enabled) timeDigits.push(w.dialFace.secondsDigital.json)\r\n    \r\n    return timeDigits\r\n}\r\n\r\nfunction getDate(w: WatchFace| WatchAOD): DigitalDigit[] {\r\n    let dateDigits: DigitalDigit[] = []\r\n    w.orderElements.orderElementsDate.forEach(item => {\r\n        let digit: WatchCommonDigit = null\r\n        let enabled = false\r\n        if ( item.type === DateType.Year.index) {\r\n            if (w.date.year.enabled) enabled = true\r\n                digit = w.date.year\r\n        } else if ( item.type === DateType.Month.index) {\r\n            if (w.date.month.enabled ) { enabled = true;  digit = w.date.month}\r\n            else if (w.date.monthAsWord.enabled ) { enabled = true;  digit = w.date.monthAsWord}\r\n        } else  if ( item.type === DateType.Day.index) {\r\n            if (w.date.day.enabled) enabled = true\r\n            digit = w.date.day\r\n        }\r\n        if (enabled) dateDigits.push(digit.json)\r\n    })\r\n    return dateDigits\r\n}\r\n\r\n","import { FC, useMemo } from \"react\";\n\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { MultilangImage } from \"../model/json.model\";\nimport { LangCodeType } from \"../model/types.model\";\n\ninterface IProps {\n  title: string;\n  defaultcount: number;\n  images: MultilangImage[];\n  onUpdate(images: MultilangImage[]): void;\n}\n\nconst MultilangImageComponent: FC<IProps> = ({ title, defaultcount, images, onUpdate }) => {\n\n  const imageSetIndex = useMemo<number>(() => findImageIndex(images), [images])\n\n  function findImageIndex(ar: MultilangImage[]): number {\n    if (!ar) return null\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\n    return index >= 0 ? index : 0\n  }\n\n  function onChangeImageIndex(index: number) {\n    const d = [...images];\n    if (!images[imageSetIndex]) {\n      let length = images.push(new MultilangImage())\n      images[length-1].LangCode = LangCodeType.All.json;\n      images[length-1].ImageSet.ImageIndex = index;\n      images[length-1].ImageSet.ImagesCount = defaultcount;\n    } else {\n      images[imageSetIndex].ImageSet.ImageIndex = index;\n    }\n    onUpdate(d);\n  }\n\n  return (\n      <div className=\"input-group input-group-sm\">\n        <SelectFileListComponent\n          title={title}\n          imageIndex={images[imageSetIndex]?.ImageSet.ImageIndex}\n          setSelectedFileIndex={onChangeImageIndex}\n        />\n      </div>\n  );\n};\n\nexport default MultilangImageComponent;\n","import React, { FC, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { activitysToJson } from '../main/json.component';\r\nimport { Date, MultilangImage } from '../model/json.model';\r\nimport { WidgetElement } from '../model/json_gts2mini.model';\r\nimport { getActivityListFromJson, WatchActivity } from '../model/watchFace.model';\r\nimport ActivityListComponent from './activitylist.component';\r\nimport MultilangImageComponent from './multiLangImage.component';\r\n\r\ninterface IProps {\r\n    index: number,\r\n    element: WidgetElement,\r\n    onDelete(): void,\r\n    onUpdate(element: WidgetElement)\r\n    defaultCount: number,\r\n}\r\n\r\nconst WidgetElementComponent: FC<IProps> = ({index, element, onDelete, onUpdate, defaultCount}) => {\r\n\r\nconst [collapsed, setCollapsed] = useState<boolean>(true);\r\n    \r\n  function updatePreviewOfElement(previewImageSet: MultilangImage[]) {\r\n    let _we: WidgetElement = {...element}\r\n    _we.Preview = previewImageSet\r\n    onUpdate(_we)\r\n  }\r\n\r\n  function updateDateOfElement(date: Date) {\r\n    let _we: WidgetElement = {...element}\r\n    _we.Date = date\r\n    onUpdate(_we)\r\n  }\r\n\r\n  function updateActivityOfElement(activity: WatchActivity[]) {\r\n    let _we: WidgetElement = {...element}\r\n    _we.Activity = activitysToJson(activity)\r\n    onUpdate(_we)\r\n  }\r\n\r\n    return (\r\n        <Card className=\"pt-1 pb-1  w-100\">\r\n            <Card.Header \r\n            className=\"d-flex justify-content-between align-items-center\"\r\n                onClick={() => setCollapsed(!collapsed)}>\r\n                <span className=\"input-group-text\">Element {index}</span>\r\n                <button className=\"btn btn-outline-danger\" type=\"button\" onClick={() => onDelete()}>Delete</button>\r\n            </Card.Header>\r\n            { !collapsed ? \r\n            <Card.Body>\r\n            <MultilangImageComponent\r\n            title='Preview'\r\n            images={element.Preview}\r\n            onUpdate={(previewImageSet) => updatePreviewOfElement(previewImageSet)}\r\n            defaultcount={1}\r\n            />\r\n            <ActivityListComponent\r\n                activitys={getActivityListFromJson(element.Activity)}\r\n                onUpdate={(activity) => updateActivityOfElement(activity)}\r\n            />\r\n            </Card.Body> \r\n            : '' }\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WidgetElementComponent;","import { FC, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { ImageCoord, Widget, WidgetElement } from \"../model/json.model\";\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport WidgetElementComponent from \"./widgetElement.component\";\n\n\ninterface IProps {\n  title: string;\n  widget: Widget;\n  onUpdate(widget: Widget): void;\n  onDelete(e): void;\n}\n\nconst WidgetComponent: FC<IProps> = ({ title, widget, onUpdate, onDelete }) => {\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n  const [collapsedElements, setCollapsedElements] = useState<boolean>(true);\n\n  function addElement() {\n    let _wi: Widget = {...widget}\n    if (!_wi.WidgetElement) _wi.WidgetElement = []\n    _wi.WidgetElement.push(new WidgetElement())\n    onUpdate(_wi)\n  }\n\n  function deleteElement(index: number) {\n    let _wi: Widget = {...widget}\n    _wi.WidgetElement.splice(index, 1)\n    onUpdate(_wi)\n  }\n\n  function updateElement(index: number, element: WidgetElement) {\n    let _wi: Widget = {...widget}\n    _wi.WidgetElement[index] = {...element}\n    onUpdate(_wi)\n  }\n\n  function updateWidgetElementsOrder(list: IDNDItem<WidgetElement>[]) {\n    let _wi: Widget = {...widget}\n    _wi.WidgetElement = list.map((value) => value.item)\n    onUpdate(_wi)\n  }\n\n  return (\n    <Card>\n      <Card.Header \n      className=\"d-flex justify-content-between align-items-center\"\n      onClick={() => setCollapsed(!collapsed)}>\n          <span className=\"input-group-text\">{title}</span>\n          <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete}>Delete</button>\n      </Card.Header>\n      {!collapsed ? \n      <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.X}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let x = parseInt(e.target.value);\n                _wi.X = !isNaN(x) ? x : 0;\n                onUpdate(_wi);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.Y}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let y = parseInt(e.target.value);\n                _wi.Y = !isNaN(y) ? y : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.Width}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.Width = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Height\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.Height}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.Height = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm pt-1\">\n            <SelectFileListComponent\n              title='Frame activ'\n              setSelectedFileIndex={(ix) => {\n                const ip = { ...widget };\n                ip.BorderActivImageIndex = ix;\n                onUpdate(ip);\n              }}\n              imageIndex={widget.BorderActivImageIndex}\n            />\n            <SelectFileListComponent\n              title='Frame inactiv'\n              setSelectedFileIndex={(ix) => {\n                const _wi = { ...widget };\n                _wi.BorderInactivImageIndex = ix;\n                onUpdate(_wi);\n              }}\n              imageIndex={widget.BorderInactivImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm pt-1\">\n            <SelectFileListComponent\n              title='Description background'\n              setSelectedFileIndex={(ix) => {\n                const _wi = { ...widget };\n                if (!_wi.DescriptionImageBackground) _wi.DescriptionImageBackground = new ImageCoord();\n                _wi.DescriptionImageBackground.ImageIndex = ix;\n                onUpdate(_wi);\n              }}\n              imageIndex={widget.DescriptionImageBackground?.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.DescriptionImageBackground?.Coordinates?.X}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                if (!_wi.DescriptionImageBackground) _wi.DescriptionImageBackground = new ImageCoord();\n                let x = parseInt(e.target.value);\n                _wi.DescriptionImageBackground.Coordinates.X = !isNaN(x) ? x : 0;\n                onUpdate(_wi);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.DescriptionImageBackground?.Coordinates?.Y}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                if (!_wi.DescriptionImageBackground) _wi.DescriptionImageBackground = new ImageCoord();\n                let y = parseInt(e.target.value);\n                _wi.DescriptionImageBackground.Coordinates.Y = !isNaN(y) ? y : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Description width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.DescriptionWidthCheck}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.DescriptionWidthCheck = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <Card className=\"pt-1\">\n            <Card.Header className=\"d-flex justify-content-between align-items-center\"\n              onClick={() => setCollapsedElements(!collapsedElements)}>\n              Elements [{widget.WidgetElement?.length}]\n              <button className=\"btn btn-outline-success\" type=\"button\" onClick={addElement}>Add</button>\n            </Card.Header>\n            { !collapsedElements ? \n            <Card.Body>\n              { widget.WidgetElement?.length > 0 ?\n              \n              <DnDListComponent\n               _list={\n              widget.WidgetElement?.map(\n                (element, index) => ({item: element, reactItem:\n                <WidgetElementComponent\n                  key={index}\n                  index={index}\n                  element={element}\n                  defaultCount={1}\n                  onDelete={() => deleteElement(index)}\n                  onUpdate={(element) => updateElement(index, element)}\n                />})) }\n                updateOrder={updateWidgetElementsOrder}\n              /> : 'no elements added' }\n            </Card.Body>\n            : ''}\n          </Card>\n        </Card.Body>\n         : '' }\n     </Card>\n    );\n};\n\nexport default WidgetComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport WidgetComponent from \"../Blocks/widget.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { Widget, Widgets } from \"../model/json.model\";\r\nimport { WatchWidgets } from \"../model/watchFace.model\";\r\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\r\n\r\nconst WidgetsComponent: FC = () => {\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n \r\n  function updateWidgets(widgets: WatchWidgets) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets = {...widgets}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function updateWidget(index: number, wi: Widget) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets.json.Widget[index] = {...wi}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function addWidget(e) {\r\n    e.stopPropagation()\r\n    let _wi = new Widget()\r\n    let _wf = {...watchface}\r\n    if (!_wf.widgets.json) {\r\n      _wf.widgets.json = new Widgets()\r\n      _wf.widgets.json.Widget = []\r\n    }\r\n    _wf.widgets.json.Widget.push(_wi)\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function deleteWidget(e, index: number) {\r\n    e.stopPropagation()\r\n    if ( window.confirm(`would you delete this widget?`)) {\r\n      let _wf = {...watchface}\r\n      _wf.widgets.json.Widget.splice(index, 1)\r\n      setWatchface(_wf)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className=\"input-group input-group-sm\">\r\n                <SelectFileListComponent\r\n                  title='Top mask'\r\n                  setSelectedFileIndex={(ix) => {\r\n                    const ws = { ...watchface.widgets };\r\n                    if (!ws.json) ws.json = new Widgets()\r\n                    ws.json.TopMaskImageIndex = ix;\r\n                    updateWidgets(ws);\r\n                  }}\r\n                  imageIndex={watchface.widgets?.json?.TopMaskImageIndex}\r\n                />\r\n                <SelectFileListComponent\r\n                  title='Bottom mask'\r\n                  setSelectedFileIndex={(ix) => {\r\n                    const ws = { ...watchface.widgets };\r\n                    if (!ws.json) ws.json = new Widgets()\r\n                    ws.json.UnderMaskImageIndex = ix;\r\n                    updateWidgets(ws);\r\n                  }}\r\n                  imageIndex={watchface.widgets?.json?.UnderMaskImageIndex}\r\n                />\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Widgets [{watchface.widgets?.json?.Widget?.length}]\r\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addWidget}>Add</button>\r\n      </Card.Header>\r\n      <Card.Body>\r\n          {watchface.widgets?.json?.Widget?.length > 0 ? \r\n          <>\r\n            { watchface.widgets.json.Widget.map((item, index) => {\r\n              return (\r\n                <WidgetComponent\r\n                  key={index}\r\n                  title={`Widget ${index+1}`}\r\n                  widget={item}\r\n                  onUpdate={(widget) => updateWidget(index, widget)}\r\n                  onDelete={(e) => deleteWidget(e, index)}\r\n                />\r\n              )\r\n            }) }\r\n          </> : 'no widgets added'}\r\n      </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WidgetsComponent;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport { WatchfaceContext } from \"../context\";\r\nimport ScreenNormalcomponent from \"./screennormal.component\";\r\nimport PreviewStatesComponent from \"./previewstates.component\";\r\nimport AodComponent from \"./aod.component\";\r\nimport WidgetsComponent from \"./widgets.component\";\r\n\r\nconst tabs = [\r\n  { id: 0, name: \"Screen normal\" },\r\n  { id: 1, name: \"AOD\" },\r\n  { id: 2, name: \"Widgets\" },\r\n  { id: 3, name: \"Preview State\" },\r\n];\r\n\r\nconst LeftSideComponent: FC = () => {\r\n\r\n  const { setPreviewScreenNormal } = useContext(WatchfaceContext)\r\n\r\n  const [tabLeft, setTabLeft] = useState<number>(0);\r\n\r\n  function onclick(tabid: number) {\r\n    setTabLeft(tabid)\r\n    if (tabid === 1) setPreviewScreenNormal(false)\r\n    if (tabid === 0) setPreviewScreenNormal(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${tabLeft === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => onclick(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {tabLeft === 0 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <ScreenNormalcomponent />\r\n        </div>\r\n      ) : tabLeft === 1 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <AodComponent />\r\n        </div>\r\n      ) : tabLeft === 2 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <WidgetsComponent />\r\n        </div>\r\n      ) : tabLeft === 3 ? (\r\n        <div className=\"mt-3\">\r\n          <PreviewStatesComponent />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { ElementOrderItem } from \"../model/watchFace.model\";\r\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\r\n\r\nconst ElementOrderComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function onUpdateDateOrder(list: IDNDItem<ElementOrderItem>[]) {\r\n    setWatchface({\r\n      ...watchface,\r\n      orderElements: { ...watchface.orderElements, orderElementsDate: list.map((value) => value.item) },\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <h2>order of date elements</h2>\r\n      <DnDListComponent\r\n        _list={watchface.orderElements.orderElementsDate.map((value) => ({ item: value, reactItem: value.title}) )}\r\n        updateOrder={onUpdateDateOrder}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElementOrderComponent;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n  const { draw, className, ...rest } = props;\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const render = () => {\r\n      draw(canvas, context);\r\n    };\r\n    render();\r\n  }, [draw]);\r\n\r\n  return <canvas className={className} ref={canvasRef} {...rest} />;\r\n};\r\n\r\nexport default Canvas;\r\n","import { IImage } from \"../model/image.model\"\r\n\r\n\r\nexport function findImageById(id: number, images: IImage[]): HTMLImageElement | null {\r\n    const i = images.find((item) => item.id === id)\r\n    if (i) {\r\n        return i.image\r\n    } else {\r\n        alert('Image with Index  ' + id + ' not found')\r\n        return null\r\n    }\r\n}","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { ImageCoord } from \"../../model/json.model\";\r\n\r\nexport default function drawImageCoords(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[], \r\n    imageCoord: ImageCoord) {\r\n        if (imageCoord.ImageIndex) {\r\n            let x = imageCoord.Coordinates?.X ? imageCoord.Coordinates.X : 0\r\n            let y = imageCoord.Coordinates?.Y ? imageCoord.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}","import { findImageById } from \"../../shared/helper\"\r\nimport { IImage } from \"../../model/image.model\"\r\nimport { AlignmentType, LangCodeType } from \"../../model/types.model\"\r\nimport { MultilangImage } from \"../../model/json.model\"\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\"\r\nimport drawSeparator from './imageCoords.element'\r\n\r\nexport default function drawDigitImage(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean): [number, number] | null  {\r\n    const x = followXY ? followXY[0] : digit.json?.Digit?.Image?.X\r\n    const y = followXY ? followXY[1] : digit.json?.Digit?.Image?.Y\r\n    const imageSetIndex = findImageIndex(digit.json.Digit?.Image?.MultilangImage);\r\n    const unitImageSetIndex =findImageIndex(digit.json.Digit?.Image?.MultilangImageUnit);\r\n\r\n    if (digit.json.Digit?.Image?.MultilangImage &&\r\n        digit.json.Digit.Image.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n            let strNumber = number.toString()\r\n            if (number < 0) strNumber = (-number).toString()\r\n            if ( !digit.json.Digit.DisplayFormAnalog && (digit.json.Digit.PaddingZero || paddingZeroFix)) {\r\n                strNumber = strNumber.padStart(digit.con.numberLenght, '0' )\r\n            }\r\n            let ar: HTMLImageElement[] = []\r\n            if (digit.json.Digit.Image.DelimiterImageIndex) {\r\n                if (number < 0){\r\n                    const img = findImageById(digit.json.Digit.Image.DelimiterImageIndex, images)\r\n                    if (img) ar.push(img)\r\n                }\r\n            }\r\n            if (digit.json.Digit.DisplayFormAnalog) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex + number, images)\r\n                if (img) ar.push(img)\r\n            } else {\r\n                ar = ar.concat(getImages(images, strNumber, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImagesCount,\r\n                    digit.json.Digit.Image.DecimalPointImageIndex ))\r\n            }\r\n            if (digit.json.Digit.Image.MultilangImageUnit && digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex]) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ar.push(img)\r\n            }\r\n\r\n            const followXY = drawImages(ctx, ar, x, y, digit.json.Digit.Spacing, \r\n                digit.json.Digit.Alignment, digit.con.numberLenght - strNumber.length, drawBorder)\r\n\r\n            if ( digit.json.Separator) {\r\n                drawSeparator(ctx, images, digit.json.Separator)\r\n            }\r\n            return followXY\r\n        }\r\n        return followXY;\r\n    }\r\n\r\nfunction getImages(\r\n    images: IImage[], \r\n    strNumber: string, \r\n    startImageIndex: number, \r\n    count: number, decimalPointer: number): HTMLImageElement[] {\r\n    const ar: HTMLImageElement[] = []\r\n    for (let i = 0; i < strNumber.length; i++) {\r\n        if (decimalPointer && i === strNumber.length - 2) {\r\n            const img = findImageById(decimalPointer, images)\r\n            if (img) { ar.push(img) }\r\n        }\r\n        var chr = strNumber.charAt(i);\r\n        var n = parseInt(chr)\r\n        if (!isNaN(n) && n < count) {\r\n            const img = findImageById(startImageIndex + n, images)\r\n            if (img) { ar.push(img) }\r\n        } else {\r\n            alert('cant parse number string: ' + strNumber + ' at index ' + i)\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction drawImages(ctx: CanvasRenderingContext2D, ar: HTMLImageElement[], \r\n    startx: number, starty: number, spacing: number, alignment: string, paddingLenght: number, drawborder: boolean): [number, number] | null  {\r\n    if ( ar.length === 0) return\r\n    let imageWidth = 0\r\n\r\n    ar.forEach(img => {\r\n        if (imageWidth && spacing) imageWidth += spacing\r\n        imageWidth += img.width\r\n    })\r\n\r\n    let maxWidth = imageWidth\r\n\r\n    if (paddingLenght) {\r\n        maxWidth = imageWidth + ( spacing + ar[0].width ) * paddingLenght\r\n    }\r\n\r\n    let x = startx\r\n    let y = starty\r\n    if (alignment === AlignmentType.Right.json) { // right\r\n        x = x + maxWidth - imageWidth\r\n    } else if (alignment === AlignmentType.Center.json) { // center\r\n        x = x + (maxWidth - imageWidth) / 2\r\n    }\r\n\r\n    let height = 0\r\n    ar.forEach(img => {\r\n        ctx.drawImage(img, x, y, img.width, img.height);\r\n        height = Math.max(img.height, height)\r\n        x += img.width\r\n        if ( spacing ) x += spacing\r\n    })\r\n    if ( drawborder) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = 'gray'\r\n        ctx.rect(startx, starty, maxWidth, height);\r\n        ctx.stroke();\r\n    }\r\n\r\n    return [x, y]\r\n}\r\n\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }","\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\n\r\nexport function drawSystemFont(\r\n    ctx: CanvasRenderingContext2D,\r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize: number = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let spacing: number = digit.json.Digit.Spacing\r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    ctx.save();\r\n    var tx = systemFont.Coordinates?.X ? systemFont.Coordinates.X : 0;\r\n    var ty = systemFont.Coordinates?.Y ? systemFont.Coordinates.Y : 0;\r\n    let radians = Math.PI / 180 * (systemFont.Angle)\r\n    ctx.translate(tx, ty);\r\n    ctx.rotate(radians);\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    let x = 0;\r\n    for (var i = 0; i < text.length; i++) {\r\n        ctx.fillText(text[i], x, 0);\r\n        x = x + ctx.measureText(text[i]).width + spacing\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function drawSystemFontFontRotated(\r\n    ctx: CanvasRenderingContext2D, \r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    \r\n        if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let radius = systemFont.FontRotate.Radius\r\n    let spacing: number = digit.json.Digit.Spacing\r\n   \r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    var tx = systemFont.FontRotate?.X ? systemFont.FontRotate.X : 0;\r\n    var ty = systemFont.FontRotate?.Y ? systemFont.FontRotate.Y : 0;\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    \r\n    ctx.save();\r\n    ctx.translate(tx, ty);\r\n    if ( systemFont.FontRotate.RotateDirection !== 1) {\r\n        ctx.rotate(Math.PI / 180 * systemFont.Angle);\r\n        for (var i = 0; i < text.length; i++) {\r\n            let width = ctx.measureText(text[i]).width\r\n            ctx.fillText(text[i], 0, - systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * spacingAngle );\r\n        }\r\n    } else {\r\n        ctx.rotate(Math.PI / 180 * (180 - systemFont.Angle) );\r\n        for (var j = 0; j < text.length; j++) {\r\n            let width = ctx.measureText(text[j]).width\r\n            ctx.fillText(text[j], 0, + systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * -spacingAngle );\r\n        }\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function addUnitsAndSeparator(text: string, digit: WatchCommonDigit): string {\r\n    let systemFont = digit.json.Digit?.SystemFont\r\n    let result = text\r\n    if ( !systemFont) return result\r\n    if (systemFont.ShowUnitCheck === -1) {\r\n        result = result + digit.con.unit[0]\r\n    } else if (systemFont.ShowUnitCheck === 1) {\r\n        result = result + digit.con.unit[1]\r\n    } else if ( systemFont.ShowUnitCheck === 2) {\r\n        result = result + digit.con.unit[2]\r\n    } \r\n    if (digit.json.Separator) {\r\n        result = result + digit.con.separator\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSystemFontText(digit: WatchCommonDigit, value: number): string {\r\n    let systemFontText = value.toString()\r\n    if (digit.json.Digit.PaddingZero) systemFontText.padStart(digit.con.numberLenght, '0')\r\n    if (digit.con.decimalDelimiter) {\r\n        if ( systemFontText.length > 3)\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-2) + '.' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n        else if ( systemFontText.length > 1 )\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-1) + '.' + systemFontText.substring(systemFontText.length-1, systemFontText.length)\r\n    }\r\n    if (digit.con.timeDelimiter && systemFontText.length > 2 )\r\n        systemFontText = systemFontText.substring(0, systemFontText.length-2) + ':' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n    systemFontText = addUnitsAndSeparator(systemFontText, digit)\r\n    return systemFontText\r\n}","import { IImage } from \"../../model/image.model\"\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\"\r\nimport drawDigitImage from \"./digitImage.element\"\r\nimport {drawSystemFont, drawSystemFontFontRotated} from \"./systemfont.element\"\r\n\r\nexport default function drawDigit(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean,\r\n    systemFontText?: string,\r\n    ): [number, number] | null  {\r\n        if (!digit) return\r\n        if (digit.enabledImage) return drawDigitImage(ctx, images, digit, number, followXY, drawBorder, paddingZeroFix)\r\n        if (digit.enabledSystemFont || digit.enabledSystemFontCircle) {\r\n            if (!systemFontText) return followXY\r\n            if (digit.enabledSystemFontCircle)\r\n                return drawSystemFontFontRotated(ctx, digit, systemFontText)\r\n            else\r\n                return drawSystemFont(ctx, digit, systemFontText)\r\n        }\r\n        return followXY\r\n}\r\n\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { MultilangImage } from \"../../model/json.model\";\r\nimport { WatchClockHand } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawPointer(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    clockHand: WatchClockHand, \r\n    value: number, \r\n    total: number,\r\n    withOffset?: boolean) {\r\n        if (total === null) return\r\n        if (clockHand.json.Scale) {\r\n            const scaleImageSetIndex = findImageIndex(clockHand.json.Scale?.ImageSet);\r\n            if (clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex >= 0) {\r\n                let x = clockHand.json.Scale.Coordinates?.X ? clockHand.json.Scale.Coordinates?.X : 0\r\n                let y = clockHand.json.Scale.Coordinates?.Y ? clockHand.json.Scale.Coordinates?.Y : 0\r\n                let img = findImageById(clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n            }\r\n        }\r\n        if (clockHand.json.Pointer?.ImageIndex >= 0) {\r\n            let x = clockHand.json.X ? clockHand.json.X : 0\r\n            let y = clockHand.json.Y ? clockHand.json.Y : 0\r\n            if ( !clockHand.json.X && !clockHand.json.Y) {\r\n                x = clockHand.json.X ? clockHand.json.X : Constant.width / 2\r\n                y = clockHand.json.Y ? clockHand.json.Y : Constant.height / 2\r\n            }\r\n            let img = findImageById(clockHand.json.Pointer?.ImageIndex, images)\r\n            if (img) {\r\n                let offsetX = clockHand.json.Pointer.Coordinates?.X ? clockHand.json.Pointer.Coordinates?.X : img.width / 2\r\n                let offsetY = clockHand.json.Pointer.Coordinates?.Y ? clockHand.json.Pointer.Coordinates?.Y : img.height / 2\r\n                \r\n                let _startAngle = clockHand.json.StartAngle ? clockHand.json.StartAngle: 0\r\n                let _endAngle = clockHand.json.EndAngle ? clockHand.json.EndAngle: 360\r\n                let offsetAngle = withOffset ? (offsetX) * 180 / (offsetY * Math.PI) : 0\r\n                let angle = _startAngle + Math.round(value * (_endAngle - _startAngle ) / total) + offsetAngle\r\n                \r\n                angle = Math.min(angle, _endAngle + offsetAngle)\r\n                angle = Math.max(angle, _startAngle)\r\n                let radians = (Math.PI/180) * angle\r\n                \r\n                ctx.save(); // save current state\r\n                ctx.translate(x, y); // change origin to center of rotation\r\n                ctx.rotate(radians); // rotate\r\n                ctx.drawImage(img, -offsetX, -offsetY, img.width, img.height);\r\n                ctx.restore(); // restore original states (no rotation etc)\r\n            }\r\n        }\r\n        if (clockHand.json.Cover?.ImageIndex >= 0) {\r\n            let x = clockHand.json.Cover?.Coordinates?.X ? clockHand.json.Cover.Coordinates.X : 0\r\n            let y = clockHand.json.Cover?.Coordinates?.Y ? clockHand.json.Cover.Coordinates?.Y : 0\r\n            let img = findImageById(clockHand.json.Cover.ImageIndex, images)\r\n            if ( img ) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  WatchProgressBar } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarCircle(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if ( progressBar.jsonObj?.AngleSettings) {\r\n\r\n            let width = progressBar.jsonObj.Width ? progressBar.jsonObj.Width : 0\r\n\r\n            let angleSettings = progressBar.jsonObj.AngleSettings\r\n            if (value > total) value = total\r\n            let startAngle = angleSettings.StartAngle ? angleSettings.StartAngle : 0\r\n            let endAngle = angleSettings.EndAngle ? angleSettings.EndAngle : 360\r\n            let sector_angle = startAngle + Math.round(value * (endAngle - startAngle ) / total)\r\n            let radius = angleSettings.Radius  \r\n            \r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n\r\n                    let dX = (angleSettings.X - radius - (width / 2))\r\n                    let dY = (angleSettings.Y - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    drawArcPath(ctx, progressBar.jsonObj.Flatness, \r\n                        angleSettings.X, angleSettings.Y, startAngle, sector_angle, radius, width)\r\n                    \r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n\r\n                    /// draw the image\r\n                    ctx.drawImage(img, angleSettings.X - img.width/2, angleSettings.Y - img.height/2);\r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n\r\n                    let dX = (angleSettings.X - radius - (width / 2))\r\n                    let dY = (angleSettings.Y - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    // begin by calling ctx.beginPath\r\n                    ctx.beginPath();\r\n\r\n                    let radianStart = (Math.PI/180) * (startAngle-90)\r\n                    let radianEnd = (Math.PI/180) * (sector_angle-90)\r\n                    let clockwise = radianStart < radianEnd;\r\n                    \r\n                    // calling canvas src with all arguments\r\n                    ctx.arc(angleSettings.X, angleSettings.Y,\r\n                        radius, radianStart, radianEnd, !clockwise);\r\n                    // set stroke and fill style\r\n                    ctx.strokeStyle = color;\r\n                    ctx.lineWidth = width;\r\n                    // fill, and stroke\r\n                    ctx.stroke();\r\n                    drawColorEndings(ctx, color, progressBar.jsonObj.Flatness, \r\n                        angleSettings.X, angleSettings.Y, startAngle, sector_angle, radius, width)\r\n                    ctx.lineWidth = 1;\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                if (img) {\r\n                    let _x = angleSettings.X + (radius) * Math.cos(Math.PI * (sector_angle - 90) / 180)\r\n                    let _y = angleSettings.Y + (radius) * Math.sin(Math.PI * (sector_angle - 90) / 180)\r\n                    ctx.drawImage(img, _x, _y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\nfunction drawArcPath(ctx: CanvasRenderingContext2D, flatness: number, x: number, y: number, \r\n    startAngle: number, endAngle: number, radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        let xc1 = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let yc1 = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let xc2 = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let yc2 = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc1, yc1, width/2, radianStart - Math.PI, radianStart, !clockwise)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc2, yc2, width/2, radianEnd , radianEnd + Math.PI, !clockwise)\r\n\r\n    } else if (flatness === 90) {\r\n        // spike\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        let x2 = x + (radius) * Math.cos(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        let y2 = y + (radius) * Math.sin(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        \r\n        let x3 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y3 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x4 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y4 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let x5 = x + (radius) * Math.cos(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y5 = y + (radius) * Math.sin(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        \r\n        let x6 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y6 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        \r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        \r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x5, y5);\r\n        ctx.lineTo(x6, y6);\r\n\r\n    } else {\r\n        // flat\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x3 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y3 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let x4 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y4 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.moveTo(x1, y1)\r\n        ctx.lineTo(x2, y2)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x4, y4)\r\n    }\r\n}\r\n\r\nfunction drawColorEndings(ctx: CanvasRenderingContext2D, color: string, \r\n    flatness: number, x: number, y: number, startAngle: number, endAngle: number, \r\n    radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        let _x = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let _y = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n\r\n        _x = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        _y = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2* Math.PI)\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n    } else if (flatness === 90) {\r\n        // spike\r\n        let x1 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x3 = x + (radius) * Math.cos(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y3 = y + (radius) * Math.sin(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        x1 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y1 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x2 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y2 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x3 = x + (radius) * Math.cos(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        y3 = y + (radius) * Math.sin(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { IImage } from \"../../model/image.model\";\r\nimport { ActivityType, FollowType } from \"../../model/types.model\";\r\nimport { WatchActivity } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\nimport drawImageProgress from \"./imageProgress.element\";\r\nimport drawPointer from \"./pointer.element\";\r\nimport drawProgressBarCircle from \"./progressBarCircle.element\";\r\nimport drawProgressBarLinear from \"./progressBarLinear.element\";\r\nimport { getSystemFontText } from \"./systemfont.element\";\r\n\r\ninterface IDigitDraw {\r\n    cur: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    min: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    max: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    imageProgress: {\r\n        value: number,\r\n        total: number\r\n    }\r\n}\r\n\r\nexport default function drawActivityList(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    activitys: WatchActivity[],\r\n    watchState: WatchState,\r\n    digitBorder: boolean\r\n    ) {\r\n        let val = 0\r\n        let total = 0\r\n        if (!activitys) return\r\n        activitys.forEach((activity) => {\r\n            switch (activity.type) {\r\n                case ActivityType.Battery:\r\n                    val = watchState.battery\r\n                    total = watchState.batteryGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Steps:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Calories:\r\n                    val = watchState.calories\r\n                    total = watchState.caloriesGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.HeartRate:\r\n                    val = watchState.hearthrate\r\n                    total = watchState.hearthrateGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Pai:\r\n                    val = watchState.pai\r\n                    total = watchState.paiGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Distance:\r\n                    val = watchState.distance\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null,\r\n                        max: null, \r\n                        imageProgress: null}, digitBorder)\r\n                    break;\r\n                case ActivityType.StandUp:\r\n                    val = watchState.standup\r\n                    total = watchState.standupGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total },\r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Weather:\r\n                    drawActivity(ctx, images, activity, {\r\n                        cur: { value: watchState.temperature, total: null },\r\n                        min: { value: watchState.temperatureMin, total: null }, \r\n                        max: { value: watchState.temperatureMax, total: null }, \r\n                        imageProgress: { value: watchState.weatherIcon, total: 29}},\r\n                        digitBorder)\r\n                        break;\r\n                case ActivityType.UVindex:\r\n                    val = watchState.uvIndex\r\n                    total = watchState.uvIndexGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null },\r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirQuality:\r\n                    val = watchState.airQuality\r\n                    total = watchState.airQualityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Humidity:\r\n                    val = watchState.humidity\r\n                    total = watchState.humidityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null,\r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Sunrise:\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: watchState.sunrise, total: null }, \r\n                        min: { value: watchState.sunrise, total: null }, \r\n                        max: { value: watchState.sunset, total: null }, \r\n                        imageProgress: { value: 1, total: 2}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.WindForce:\r\n                    val = watchState.windForce\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: null}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirPressure:\r\n                    val = watchState.airPressure\r\n                    total = watchState.airPressureGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Stress:\r\n                    val = watchState.stress\r\n                    total = watchState.stressGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.ActivityGoal:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.FatBurning:\r\n                    val = watchState.fatBurning\r\n                    total = watchState.fatBurningGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n}\r\n\r\nfunction drawActivity(ctx: CanvasRenderingContext2D, images: IImage[], a: WatchActivity, values: IDigitDraw, digitBorder: boolean) {\r\n    let followXY = null\r\n    if (a.digit?.enabled) {\r\n        followXY = drawDigit(ctx, images, a.digit, values.cur.value, followXY, digitBorder, false, getSystemFontText(a.digit, values.cur.value))\r\n    }\r\n    if (a.digitMin?.enabled && values.min) {\r\n        followXY = drawDigit(ctx, images, a.digitMin, values.min.value, a.digitMin.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, getSystemFontText(a.digitMin, values.min.value))\r\n    }\r\n    if (a.digitMax?.enabled && values.max) {\r\n        drawDigit(ctx, images, a.digitMax, values.max.value, a.digitMax.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, getSystemFontText(a.digitMax, values.max.value))\r\n    }\r\n    if (a.imageProgress.enabled) {\r\n        drawImageProgress(ctx, images, a.imageProgress, values.imageProgress.value, values.imageProgress.total)\r\n    }\r\n    if (a.progressBar.enabledLinear) {\r\n        drawProgressBarLinear(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.progressBar.enabledCircle) {\r\n        drawProgressBarCircle(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.pointerProgress.enabled) {\r\n        drawPointer(ctx, images, a.pointerProgress, values.cur.value, values.cur.total, a.progressBar.enabledLinear || a.progressBar.enabledCircle)\r\n    }\r\n    if (a.icon.enabled) {\r\n        drawImageCoords(ctx, images, a.icon.json)\r\n    }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { WatchImageProgress } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawImageProgress(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    imageProgress: WatchImageProgress,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if (imageProgress.enabled && imageProgress.json.ImageSet?.ImageIndex) {\r\n            if ( imageProgress.json.Coordinates) {\r\n\r\n                let count = imageProgress.json.ImageSet.ImagesCount-1\r\n                let coors = imageProgress.json.Coordinates\r\n\r\n                let s = Math.ceil(value / (total / count))\r\n                if (s > count) s = count\r\n\r\n                if (value > total) value = total\r\n\r\n                let initial = 0\r\n                if (!imageProgress.json.DisplayType)\r\n                    initial = s\r\n\r\n                for (let i = initial; i <= s; i++) {\r\n                    let x = i < coors.length ? coors[i].X : coors[coors.length-1].X\r\n                    let y = i < coors.length ? coors[i].Y : coors[coors.length-1].Y\r\n                    let imageIndex = imageProgress.json.ImageSet.ImageIndex + i\r\n                    const img = findImageById(imageIndex, images)\r\n                    if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  WatchProgressBar } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarLinear(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if ( progressBar.jsonObj?.LinearSettings) {\r\n            let lineB = progressBar.jsonObj.LinearSettings\r\n            if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let endy = lineB.EndY ? lineB.EndY : y + img.height\r\n                    let width = Math.min(endx - x, img.width)\r\n                    let height = Math.min(endy - y, img.height)\r\n                    ctx.drawImage(img, x, y, width, height);\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let width = value * (endx - x) / total\r\n                    width = Math.min(width, img.width)\r\n                    let height = progressBar.jsonObj.Width\r\n                    height = Math.min(height, img.height)\r\n                    \r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(x, y, width, height)\r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n                    \r\n                    /// draw the image\r\n                    ctx.drawImage(img, x, y);\r\n                    \r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n                    ctx.fillStyle = color\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let height = progressBar.jsonObj.Width\r\n                    let width = value * (endx - x) / total\r\n                    ctx.fillRect(x, y, width, height)\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let endy = lineB.EndY ? lineB.EndY : y\r\n                    let width = value * (endx - x) / total\r\n                    width = Math.min(width, img.width)\r\n                    let height = Math.min(endy - y, img.height)\r\n                    ctx.drawImage(img, x, y, width, height);\r\n                }\r\n            }\r\n        }\r\n}","import { IImage } from \"../../model/image.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { ElementOrderItem, WatchDate } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function draw(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    date: WatchDate,\r\n    orderElementsDate: ElementOrderItem[],\r\n    watchState: WatchState,\r\n    drawborder: boolean\r\n    ) {\r\n        let followXY = null\r\n\r\n        let s: string[] = []\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            s[i] = ''\r\n        }\r\n       \r\n        for (let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            let _temp = null\r\n            let _follow = false\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        _follow = date.year.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.year.toString().padStart(date.year.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.year)\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        _follow = date.month.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.month.toString().padStart(date.month.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.month)\r\n                    } \r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        _follow = date.day.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.day.toString().padStart(date.day.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.day)\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (_temp) {\r\n                for(let j = i+1; j < orderElementsDate.length ; j++) {\r\n                    s[j] = s[j] + _temp\r\n                }\r\n                if (!_follow) {\r\n                    s[i] = s[i] + _temp\r\n                } else {\r\n                    if ( s[i-1] !== '')\r\n                        s[i-1] = s[i-1] + _temp\r\n                    else \r\n                        s[i-2] = s[i-2] + _temp\r\n                    s[i] = ''\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.year, watchState.year, date.year.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.month, watchState.month, date.month.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    } else if (date.monthAsWord.enabled) {\r\n                        drawDigit(ctx, images, date.monthAsWord, watchState.monthasword)\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.day, watchState.day, date.day.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (date.weekDay.enabled) {\r\n            drawDigit(ctx, images, date.weekDay, watchState.weekday)\r\n        }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { MultilangImage } from \"../../model/json.model\";\r\nimport { WatchClockHand } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawclockhand(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    clockHand: WatchClockHand, value: number, total: number) {\r\n        if (total === null) return\r\n        if (clockHand.json.Scale) {\r\n            const scaleImageSetIndex = findImageIndex(clockHand.json.Scale?.ImageSet);\r\n            if (clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex >= 0) {\r\n                let x = clockHand.json.Scale.Coordinates?.X ? clockHand.json.Scale.Coordinates?.X : 0\r\n                let y = clockHand.json.Scale.Coordinates?.Y ? clockHand.json.Scale.Coordinates?.Y : 0\r\n                let img = findImageById(clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n            }\r\n        }\r\n        if (clockHand.json.Pointer?.ImageIndex >= 0) {\r\n            let x = clockHand.json.X ? clockHand.json.X : 0\r\n            let y = clockHand.json.Y ? clockHand.json.Y : 0\r\n            if ( !clockHand.json.X && !clockHand.json.Y) {\r\n                x = clockHand.json.X ? clockHand.json.X : Constant.width / 2\r\n                y = clockHand.json.Y ? clockHand.json.Y : Constant.height / 2\r\n            }\r\n            let img = findImageById(clockHand.json.Pointer?.ImageIndex, images)\r\n            if (img) {\r\n                let offsetX = clockHand.json.Pointer.Coordinates?.X ? clockHand.json.Pointer.Coordinates?.X : img.width / 2\r\n                let offsetY = clockHand.json.Pointer.Coordinates?.Y ? clockHand.json.Pointer.Coordinates?.Y : img.height / 2\r\n                \r\n                let _startAngle = clockHand.json.StartAngle ? clockHand.json.StartAngle: 0\r\n                let _endAngle = clockHand.json.EndAngle ? clockHand.json.EndAngle: 360\r\n                let angle = _startAngle + Math.round(value * (_endAngle - _startAngle ) / total)\r\n                angle = Math.min(angle, _endAngle)\r\n                angle = Math.max(angle, _startAngle)\r\n                let radians = (Math.PI/180) * angle\r\n                \r\n                ctx.save(); // save current state\r\n                ctx.translate(x, y); // change origin to center of rotation\r\n                ctx.rotate(radians); // rotate\r\n                ctx.drawImage(img, -offsetX, -offsetY, img.width, img.height);\r\n                ctx.restore(); // restore original states (no rotation etc)\r\n            }\r\n        }\r\n        if (clockHand.json.Cover?.ImageIndex >= 0) {\r\n            let x = clockHand.json.Cover?.Coordinates?.X ? clockHand.json.Cover.Coordinates.X : 0\r\n            let y = clockHand.json.Cover?.Coordinates?.Y ? clockHand.json.Cover.Coordinates?.Y : 0\r\n            let img = findImageById(clockHand.json.Cover.ImageIndex, images)\r\n            if ( img ) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }","import { IImage } from \"../../model/image.model\";\r\nimport { WatchDialFace } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawClockHand from \"./clockHand.element\";\r\n\r\n    export default function drawTimeAnalog(ctx: CanvasRenderingContext2D, \r\n        images: IImage[],\r\n        dialFace: WatchDialFace,\r\n        watchState: WatchState\r\n        ) {\r\n        if ( dialFace.hoursClockhand?.enabled) {\r\n            if ( watchState.hours < 12)\r\n                drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours, 12 )\r\n            else \r\n            drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours-12, 12 )\r\n        }\r\n        if ( dialFace.minutesClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.minutesClockhand, watchState.minutes, 60 )\r\n        }\r\n        if ( dialFace.secondsClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.secondsClockhand, watchState.seconds, 60 )\r\n        }\r\n    }\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  MultilangImage } from \"../../model/json.model\";\r\nimport { WatchMultilangImageCoords } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawMultilangImageCoords(ctx: CanvasRenderingContext2D, images: IImage[], \r\n    imageCoord: WatchMultilangImageCoords) {\r\n\r\n        const imageSetIndex = findImageIndex(imageCoord.json?.ImageSet);\r\n    \r\n        if (imageCoord.json.ImageSet &&\r\n            imageCoord.json.ImageSet[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n\r\n            let x = imageCoord.json.Coordinates?.X ? imageCoord.json.Coordinates.X : 0\r\n            let y = imageCoord.json.Coordinates?.Y ? imageCoord.json.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.json.ImageSet[imageSetIndex].ImageSet.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }","import { IImage } from \"../../model/image.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { WatchDialFace } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawMultilangImageCoords from \"./multiLangImageCoords.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function drawTimeDigital(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    timeDigital: WatchDialFace,\r\n    watchState: WatchState,\r\n    digitBorder: boolean\r\n    ) {\r\n    let followXY = null\r\n\r\n    let s_hours = ''\r\n    let s_minutes = ''\r\n    let s_seconds = ''\r\n   \r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        s_seconds = watchState.seconds.toString().padStart(timeDigital.secondsDigital.con.numberLenght, '0')\r\n        s_seconds = addUnitsAndSeparator(s_seconds, timeDigital.secondsDigital)\r\n    }\r\n    \r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        s_minutes = watchState.minutes.toString().padStart(timeDigital.minutesDigital.con.numberLenght, '0')\r\n        s_minutes = addUnitsAndSeparator(s_minutes, timeDigital.minutesDigital)\r\n        if (timeDigital.secondsDigital?.enabled ) {\r\n            if (timeDigital.secondsDigital.json.CombingMode === FollowType.Follow.json) {\r\n                s_minutes = s_minutes + s_seconds\r\n                s_seconds = ''\r\n            } else {\r\n                s_seconds = s_minutes + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        s_hours = watchState.hours.toString()\r\n        if (timeDigital.hoursDigital.json.Digit.PaddingZero) s_hours = s_hours.padStart(timeDigital.hoursDigital.con.numberLenght, '0')\r\n        s_hours = addUnitsAndSeparator(s_hours, timeDigital.hoursDigital)\r\n        if (timeDigital.minutesDigital.json.CombingMode === FollowType.Follow.json) {\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Follow.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n            s_hours = s_hours + s_minutes\r\n            s_minutes = ''\r\n        } else {\r\n            s_minutes = s_hours + s_minutes\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Follow.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.hoursDigital, watchState.hours,\r\n            timeDigital.hoursDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, s_hours)\r\n    }\r\n\r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.minutesDigital, watchState.minutes, \r\n            timeDigital.minutesDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_minutes)\r\n    }\r\n\r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        drawDigit(ctx, images, timeDigital.secondsDigital, watchState.seconds, \r\n            timeDigital.secondsDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_seconds)\r\n    }\r\n\r\n    if (timeDigital.am && watchState.hours < 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.am)\r\n    }\r\n    if (timeDigital.pm && watchState.hours >= 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.pm)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IImage } from \"../../model/image.model\";\r\nimport { Widget, Widgets } from \"../../model/json.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\nimport { getActivityListFromJson } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport drawActivityList from \"./activity.element\";\r\n\r\nexport default function drawWidgets(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[],\r\n    widgets: Widgets,\r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    ) {\r\n    if (widgets) {\r\n        widgets.Widget.forEach((widget, index) => {\r\n            drawWidget(ctx, images, index, widget, watchState, digitBorder, borderWidget, showWidgetPreview, widgets.TopMaskImageIndex, widgets.UnderMaskImageIndex)\r\n        });\r\n    }\r\n}\r\n\r\nfunction drawWidget(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    index: number,\r\n    widget: Widget, \r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    topMask: number,\r\n    bottomMask: number,\r\n    ) {\r\n    if (widget) {\r\n        if (widget.WidgetElement && widget.WidgetElement.length > 0) {\r\n            let previewIndex = watchState.widgets && index < watchState.widgets.length ? watchState.widgets[index] : 0\r\n            if (showWidgetPreview && widget.WidgetElement[previewIndex].Preview) {\r\n                // show only previews of widgets\r\n                const imgBack = findImageById(bottomMask, images)\r\n                if (imgBack) ctx.drawImage(imgBack, 0, 0)\r\n                \r\n                let preview = widget.WidgetElement[previewIndex].Preview;\r\n                let index = preview.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n                let imageIndex = index >= 0 ? index : 0\r\n                const img = findImageById(preview[imageIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, widget.X, widget.Y)\r\n\r\n                const imgTop = findImageById(topMask, images)\r\n                if (imgTop) ctx.drawImage(imgTop, 0, 0)\r\n            } else {\r\n                // show whole activities\r\n                let ar = getActivityListFromJson(widget.WidgetElement[previewIndex].Activity);\r\n                drawActivityList(ctx, images, ar, watchState, digitBorder)\r\n            }\r\n        }\r\n        if (borderWidget) {\r\n            ctx.strokeStyle = 'white'\r\n            ctx.strokeRect(widget.X, widget.Y, widget.Width, widget.Height)\r\n        } \r\n    }\r\n}\r\n\r\n\r\n","import { FC, useContext, useState } from \"react\";\r\n\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport Canvas from \"./canvas.function\";\r\nimport drawActivity from \"./preview/activity.element\";\r\nimport drawBackground from \"./preview/background.element\";\r\nimport drawAodBackground from \"./preview/backgroundaod.element\";\r\nimport drawDate from \"./preview/date.element\";\r\nimport drawStatus from \"./preview/status.element\";\r\nimport drawTimeAnalog from \"./preview/timeAnalog.element\";\r\nimport drawTimeDigital from \"./preview/timeDigital.element\";\r\nimport drawWidgets from \"./preview/widgets.element\";\r\nimport cl from \"./previewComponent.module.css\";\r\n\r\ninterface IProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst storage_items = {\r\n  preview_white_grid: \"preview_white_grid\",\r\n  preview_black_grid: \"preview_black_grid\",\r\n  preview_digit_border: \"preview_digit_border\",\r\n};\r\n\r\nconst PreviewComponent: FC<IProps> = ({ width, height }) => {\r\n  const { images, watchface, watchState, previewScreenNormal } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [borderWidget, setBorderWidget] = useState<boolean>(false)\r\n  const [showWidgetPreview, setShowWidgetPreview] = useState<boolean>(false)\r\n\r\n  const [x, setX] = useState<number>(0);\r\n  const [y, setY] = useState<number>(0);\r\n  const [whiteGrid, setWhiteGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_white_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_white_grid))\r\n      : false\r\n  );\r\n  const [blackGrid, setBlackGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_black_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_black_grid))\r\n      : false\r\n  );\r\n  const [digitBorder, setDigitBorder] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_digit_border)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_digit_border))\r\n      : false\r\n  );\r\n\r\n  function draw(canvas, ctx: CanvasRenderingContext2D) {\r\n    if (images && watchface) {\r\n      if (canvas) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (previewScreenNormal) drawNormal(canvas, ctx, images)\r\n        else drawAod(canvas, ctx, images)\r\n        drawGrid(ctx);\r\n      } else {\r\n        console.error(\"don't find canvas with id canvasPreview\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawNormal(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.background) drawBackground(canvas, ctx, images, watchface.background);\r\n    if (watchface.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.date,\r\n        watchface.orderElements.orderElementsDate,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.activity) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.activity,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.status) {\r\n      drawStatus(ctx, images, watchface.status, watchState);\r\n    }\r\n    if (watchface.widgets.enabled) {\r\n      drawWidgets(ctx, images, watchface.widgets.json, watchState, digitBorder, borderWidget, showWidgetPreview)\r\n    }\r\n    if (watchface.dialFace) {\r\n      if (!showWidgetPreview || watchface.widgets?.json.Unknown4 === 1) {\r\n        drawTimeDigital(\r\n          ctx,\r\n          images,\r\n          watchface.dialFace,\r\n          watchState,\r\n          digitBorder\r\n        );\r\n        drawTimeAnalog(ctx, images, watchface.dialFace, watchState);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function drawAod(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.aod) {\r\n      drawAodBackground(canvas, ctx, images, watchface.aod.backgroundImageIndex);\r\n    }\r\n    if (watchface.aod.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.aod.date,\r\n        watchface.orderElements.orderElementsDate,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.activitylist) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.aod.activitylist,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.dialFace) {\r\n      drawTimeDigital(\r\n        ctx,\r\n        images,\r\n        watchface.aod.dialFace,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n      drawTimeAnalog(ctx, images, watchface.aod.dialFace, watchState);\r\n    }\r\n  }\r\n\r\n  function getCursorPosition(event) {\r\n    const canvas = document.getElementById(\r\n      \"canvasPreview\"\r\n    ) as HTMLCanvasElement;\r\n    const rect = canvas.getBoundingClientRect();\r\n    let x = event.clientX - rect.left;\r\n    let y = event.clientY - rect.top;\r\n    x = Math.min(width, Math.max(0, Math.round(x)));\r\n    y = Math.min(height, Math.max(0, Math.round(y)));\r\n    setX(x);\r\n    setY(y);\r\n  }\r\n\r\n  function onToggleWhiteGrid() {\r\n    const wg = !whiteGrid;\r\n    setWhiteGrid(wg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(wg));\r\n  }\r\n\r\n  function onToggleBlackGrid() {\r\n    const bg = !blackGrid;\r\n    setBlackGrid(bg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(bg));\r\n  }\r\n\r\n  function onToggleDigitBorder() {\r\n    const db = !digitBorder;\r\n    setDigitBorder(db);\r\n    localStorage.setItem(\r\n      storage_items.preview_digit_border,\r\n      JSON.stringify(db)\r\n    );\r\n  }\r\n\r\n  function drawGrid(ctx: CanvasRenderingContext2D) {\r\n    if (!whiteGrid && !blackGrid) return;\r\n    const stroke = whiteGrid ? \"white\" : \"black\";\r\n    const step = 20;\r\n    for (let i = width / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = width / 2; i < width; i += step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i < height; i += step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    drawLine(ctx, [width / 2 - 1, 0], [width / 2 - 1, height], stroke, 2);\r\n    drawLine(ctx, [0, height / 2 - 1], [width, height / 2 - 1], stroke, 2);\r\n  }\r\n\r\n  function drawLine(\r\n    ctx: CanvasRenderingContext2D,\r\n    begin: [number, number],\r\n    end: [number, number],\r\n    stroke = \"black\",\r\n    width = 1\r\n  ) {\r\n    if (stroke) {\r\n      ctx.strokeStyle = stroke;\r\n    }\r\n\r\n    if (width) {\r\n      ctx.lineWidth = width;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(begin[0], begin[1]);\r\n    ctx.lineTo(end[0], end[1]);\r\n    ctx.stroke();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={cl.canvasCcontainer}>\r\n        {previewScreenNormal? 'Screen Normal' : 'AOD'}\r\n        <div>\r\n          x: {x}, y: {y}\r\n        </div>\r\n        <Canvas\r\n          id='canvasPreview'\r\n          draw={draw}\r\n          className={cl.canvasPreview}\r\n          width={width}\r\n          height={height}\r\n          onClick={getCursorPosition}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <div>\r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            White grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={whiteGrid}\r\n              onChange={onToggleWhiteGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Black grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={blackGrid}\r\n              onChange={onToggleBlackGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on digit\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digitBorder}\r\n              onChange={onToggleDigitBorder}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={borderWidget}\r\n              onChange={() => setBorderWidget(!borderWidget)}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            show preview of widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={showWidgetPreview}\r\n              onChange={() => setShowWidgetPreview(!showWidgetPreview)}\r\n            />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewComponent;\r\n","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { Background } from \"../../model/watchFace.model\";\r\n  \r\nexport default function draw(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], background: Background) {\r\n    if (background?.imageIndex !== undefined && background?.imageIndex !== null) {\r\n        const i = findImageById(background.imageIndex, images)\r\n        //images[Constant.getImageIndex(background.imageIndex, images.length)]\r\n        if (i) {\r\n            const img = i\r\n            ctx.drawImage(img, 0, 0, img.width, img.height);\r\n        }\r\n    } else if (background.color && Color.GFG_Fun(background.color)) {\r\n        ctx.fillStyle = background.color\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { IImage } from \"../../model/image.model\";\r\nimport { WatchStatus } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\n\r\nexport default function draw(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    status: WatchStatus,\r\n    watchState: WatchState\r\n    ) {\r\n        if (status.bluetooth.enabled && !watchState.bluetooth) {\r\n            drawImageCoords(ctx, images, status.bluetooth.json)\r\n        }\r\n        if (status.dnd.enabled && watchState.dnd) {\r\n            drawImageCoords(ctx, images, status.dnd.json)\r\n        }\r\n        if (status.alarm.enabled && watchState.alarm) {\r\n            drawImageCoords(ctx, images, status.alarm.json)\r\n        }\r\n        if (status.lock.enabled && watchState.lock) {\r\n            drawImageCoords(ctx, images, status.lock.json)\r\n        }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\n\r\nexport default function drawAodBackground(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], imageIndex: number) {\r\n    if (imageIndex !== undefined && imageIndex !== null) {\r\n            const img = findImageById(imageIndex, images)\r\n            if (img) {\r\n                ctx.drawImage(img, 0, 0, img.width, img.height);\r\n            }\r\n    } else {\r\n        ctx.fillStyle = 'black'\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\n\r\n\r\nconst UploadedImagesomponent: FC = () => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center\">\r\n      { images.length > 0 ? \r\n      <div>\r\n        <h2>number of images: {images.length} </h2>\r\n        <ul className=\"list-group blocks\" style={{width: \"100%\"}}>\r\n          {images.map( (img) => \r\n              <li\r\n              key={img.id}\r\n              value={img.id}\r\n              className=\"list-group-item fileitem\"\r\n            >\r\n              {<img src={img.image.src} alt={img.name} width={30} />}\r\n              {img.name}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        </div>\r\n    : <div>\r\n      no uploaded images\r\n    </div>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadedImagesomponent;\r\n","import { FC, useState } from \"react\";\r\nimport { Constant } from \"../shared/constant\";\r\nimport ElementOrderComponent from \"./elementOrder.component\";\r\nimport JsonComponent from \"./json.component\";\r\nimport PreviewComponent from \"./preview.component\";\r\nimport UploadedImagesomponent from \"./uploadedImages.component\";\r\n\r\nconst tabs = [\r\n  { id: 0, name: \"Preview\" },\r\n  { id: 1, name: \"Element Order\" },\r\n  { id: 2, name: \"Uploaded Images\" },\r\n  { id: 3, name: \"Json\" },\r\n];\r\n\r\nconst RightSideComponent: FC = () => {\r\n  const [tabRight, setTabRight] = useState<number>(0);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${tabRight === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => setTabRight(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {tabRight === 0 ? (\r\n        <PreviewComponent width={Constant.width} height={Constant.height} />\r\n      ) : tabRight === 1 ? (\r\n        <ElementOrderComponent />\r\n      ) : tabRight === 2 ? (\r\n        <UploadedImagesomponent />\r\n      ) : (\r\n        <JsonComponent />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideComponent;\r\n","export class WatchState {\r\n  _date = new Date();\r\n  year = this._date.getFullYear();\r\n  month = this._date.getMonth() + 1;\r\n  monthasword = this._date.getMonth();\r\n  day = this._date.getDate();\r\n  hours = this._date.getHours();\r\n  minutes = this._date.getMinutes();\r\n  seconds = this._date.getSeconds();\r\n  weekday = this._date.getDay() > 0 ? this._date.getDay() - 1 : 6;\r\n  batteryGoal = 100;\r\n  battery = Math.round(Math.random() * this.batteryGoal);\r\n  stepsGoal = (Math.round(Math.random() * 5) + 5) * 1000;\r\n  steps = Math.round(Math.random() * this.stepsGoal);\r\n  caloriesGoal = 200;\r\n  calories = Math.round(Math.random() * this.caloriesGoal);\r\n  hearthrateGoal = 220\r\n  hearthrate = Math.round(Math.random() * 200);\r\n  distance = Math.round(Math.random() * 1000) + 1000;\r\n  paiGoal = 100;\r\n  pai = Math.round(Math.random() * this.paiGoal);\r\n  standupGoal = 12;\r\n  standup = Math.round(Math.random() * this.standupGoal);\r\n  bluetooth = true;\r\n  dnd = true;\r\n  lock = false;\r\n  alarm = true;\r\n  \r\n  temperature = Math.round(Math.random() * 10);\r\n  temperatureMin = this.temperature - Math.round(Math.random() * 10)\r\n  temperatureMax = this.temperature + Math.round(Math.random() * 10)\r\n  weatherIcon = Math.round(Math.random() * 29);\r\n  \r\n  uvIndexGoal = 11\r\n  uvIndex = Math.round(Math.random() * this.uvIndexGoal)\r\n  airQualityGoal = 500\r\n  airQuality = Math.round(Math.random() * this.airQualityGoal)\r\n  humidityGoal = 100\r\n  humidity = Math.round(Math.random() * this.humidityGoal)\r\n  \r\n  sunrise = 536\r\n  sunset = 1742\r\n\r\n  windForce = Math.round(Math.random() * 12)\r\n\r\n  airPressureGoal = 100\r\n  airPressure = Math.round(Math.random() * this.airPressureGoal)\r\n\r\n  stressGoal = 100\r\n  stress = Math.round(Math.random() * this.stressGoal)\r\n\r\n  fatBurningGoal = 30\r\n  fatBurning = Math.round(Math.random() * this.fatBurningGoal)\r\n\r\n  widgets: number[] = []\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FC, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport \"./App.css\";\nimport FileLoaderComponent from \"./app/main/fileLoader.component\";\nimport LeftSideComponent from \"./app/main/leftside.component\";\nimport RightSideComponent from \"./app/main/rightside.component\";\nimport { IImage } from \"./app/model/image.model\";\nimport WatchFace from \"./app/model/watchFace.model\";\nimport { WatchState } from \"./app/model/watchState\";\nimport { WatchfaceContext } from \"./app/context\";\n\nconst App: FC = () => {\n  const [images, setImages] = useState<IImage[]>([]);\n  const [watchface, setWatchface] = useState<WatchFace>(new WatchFace());\n  const [watchState, setWatchState] = useState<WatchState>(new WatchState());\n\n  const [jsonName, setJsonName] = useState<string>(null);\n  const [previewScreenNormal, setPreviewScreenNormal] = useState<boolean>(true);\n\n  return (\n    <WatchfaceContext.Provider\n      value={{\n        images,\n        setImages,\n        watchface,\n        setWatchface,\n        watchState,\n        setWatchState,\n        jsonName,\n        setJsonName,\n        previewScreenNormal,\n        setPreviewScreenNormal\n      }}\n    >\n      <Container className=\"App d-flex flex-column min-vh-100 vh-100\">\n        <Row className=\"header\">\n          <FileLoaderComponent />\n        </Row>\n        <Row className=\"main\">\n          <Col xs={6} className=\"leftcol\">\n            <LeftSideComponent />\n          </Col>\n          <Col xs={6} className=\"rightcol\">\n            <RightSideComponent />\n          </Col>\n        </Row>\n      </Container>\n    </WatchfaceContext.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}