{"version":3,"sources":["app/components/main/previewComponent.module.css","app/components/main/JsonComponent.module.css","app/context/index.ts","app/shared/color.tsx","app/model/types.model.ts","app/model/json.model.tsx","app/model/watchFace.model.tsx","app/shared/constant.tsx","app/model/blocks.model.tsx","app/components/main/fileLoader.component.tsx","app/shared/draganddroplist.component.tsx","app/shared/selectFileList.component.tsx","app/blocks/checkboxBlock.component.tsx","app/blocks/colorBlock.component.tsx","app/blocks/numberBlock.component.tsx","app/blocks/selectBlock.component.tsx","app/blocks/row.component.tsx","app/blocks/blocksArray.component.tsx","app/components/watchface/imageDigit.component.tsx","app/components/watchface/systemFont.component.tsx","app/components/watchface/systemFontCircle.component.tsx","app/components/watchface/activityDigit.component.tsx","app/components/watchface/clockHand.component.tsx","app/components/watchface/imageCoords.component.tsx","app/components/watchface/imageProgress.component.tsx","app/components/watchface/progressbarCircle.component.tsx","app/components/watchface/progressbarLinear.component.tsx","app/components/watchface/activity.component.tsx","app/components/watchface/activitylist.component.tsx","app/components/watchface/background.component.tsx","app/components/watchface/date.component.tsx","app/components/watchface/status.component.tsx","app/components/watchface/timeAnalog.component.tsx","app/components/watchface/multiLangImageCoords.component.tsx","app/components/watchface/timeDigital.component.tsx","app/components/watchface/screennormal.component.tsx","app/model/weather.states.tsx","app/components/main/previewstates.component.tsx","app/components/watchface/backgroundaod.component.tsx","app/components/watchface/timeAnalogAOD.component.tsx","app/components/watchface/timeDigitalAOD.component.tsx","app/components/watchface/aod.component.tsx","app/components/watchface/widgetElement.component.tsx","app/components/watchface/widget.component.tsx","app/components/watchface/widgets.component.tsx","app/components/main/leftside.component.tsx","app/components/main/json.component.tsx","app/components/main/canvas.function.tsx","app/shared/helper.tsx","app/preview/imageCoords.element.tsx","app/preview/digitImage.element.tsx","app/preview/systemfont.element.tsx","app/preview/digit.element.tsx","app/preview/progressBarCircle.element.tsx","app/preview/progressBarLinear.element.tsx","app/preview/clockHand.element.tsx","app/preview/activity.element.tsx","app/preview/imageProgress.element.tsx","app/preview/date.element.tsx","app/preview/timeAnalog.element.tsx","app/preview/multiLangImageCoords.element.tsx","app/preview/timeDigital.element.tsx","app/preview/widgets.element.ts","app/components/main/preview.component.tsx","app/preview/background.element.ts","app/preview/status.element.tsx","app/preview/backgroundaod.element.ts","app/components/main/uploadedImages.component.tsx","app/components/main/rightside.component.tsx","app/model/watchState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","WatchfaceContext","createContext","colorRegex","Color","hex","result","exec","r","parseInt","g","b","toString","padStart","color","length","substring","firstByteS","secondByteS","firstByte","secondByte","this","rgbToHex","h","hexToRgb","toUpperCase","test","DEFAULT_COLOR","JsonType","index","json","LangCodeType","undefined","Zh","Object","values","find","val","ZhHant","All","AlignmentType","Left","Center","Right","FollowType","Follow","Single","CommonType","Default","Min","Max","ImageProgressDisplayType","Continuous","DateType","Year","Month","Day","TimeType","Hour","Minute","Second","ActivityType","Date","Battery","Steps","Calories","HeartRate","Pai","Distance","StandUp","Weather","UVindex","AirQuality","Humidity","Sunrise","WindForce","Altitude","AirPressure","Stress","ActivityGoal","FatBurning","Coordinates","X","Y","ImageSetGTR2","ImageIndex","ImagesCount","ImageCoord","ImageIndex2","ImageIndex3","ImageProgress","ImageSet","DisplayType","ProgressBar","AngleSettings","LinearSettings","ForegroundImageIndex","Width","Flatness","PointerImageIndex","BackgroundImageIndex","StartX","StartY","EndX","EndY","Unknown5","StartAngle","EndAngle","Radius","ClockHand","Scale","Pointer","Cover","Unknown16","MultilangImageCoord","LangCode","Text","Image","SystemFont","Alignment","Spacing","PaddingZero","DisplayFormAnalog","NoDataImageIndex","MultilangImage","DecimalPointImageIndex","MultilangImageUnit","DelimiterImageIndex","MultilangImageUnitMile","FontRotate","Angle","Size","colorWrite","ShowUnitCheck","RotateDirection","DigitalDigit","Type","CombingMode","Digit","Separator","oneCoordinates","coordinates","x","y","forEach","coordinate","TypeOfDigit","digitTypes","hour","type","count","numberLenght","displayAnalog","imageProgressTotal","unit","separator","timeDelimiter","title","min","sec","year","month","monthasword","day","weekday","battery","steps","titleMin","calories","heartRate","pai","distance","decimalDelimiter","standUp","uvIndex","airQuality","humidity","sunrise","titleDefault","titleMax","windForce","airPressure","stress","activityGoal","fatBurning","weather","Background","imageIndex","previewIndex","collapsed","WatchImageCoords","j","enabled","WatchMultilangImageCoords","WatchImageProgress","WatchCommonDigit","d","con","enabledImage","enabledSystemFont","enabledSystemFontCircle","DATE","toJson","TIME","COMMON","WatchClockHand","WatchDialFace","collapsedDigital","collapsedAnalog","hoursDigital","minutesDigital","secondsDigital","hoursClockhand","minutesClockhand","secondsClockhand","am","pm","ElementOrderItem","jsonType","WatchDate","monthAsWord","weekDay","orderElements","WatchStatus","s","bluetooth","dnd","alarm","lock","Bluetooth","Lock","DoNotDisturb","Alarm","WatchProgressBar","enabledLinear","enabledCircle","jsonObj","WatchActivity","dt","key","digit","digitMin","digitMax","imageProgress","pointerProgress","progressBar","icon","shortcut","getTime","WatchAOD","dialFace","date","activitylistCollapsed","activitylist","backgroundImageIndex","backgroundCollapsed","newOrderElementsTime","DialFace","DigitalDialFace","Digits","push","AM","PM","AnalogDialFace","Hours","Minutes","newOrderElementsDate","DateDigits","el","WeeksDigits","getActivityListFromJson","Activity","getActivityFromJson","a","atype","_activity","_dt","PointerProgress","Icon","Shortcut","ar","_a","findByJson","WatchWidgetElement","previewImageIndex","activitys","orderElementsDate","Preview","findIndex","item","WatchWidget","width","height","widgetElementsCollapsed","widgetElements","borderActivImageIndex","borderInactivImageIndex","descriptionImageBackground","descriptionWidthCheck","Height","WidgetElement","BorderActivImageIndex","BorderInactivImageIndex","DescriptionImageBackground","DescriptionWidthCheck","WatchWidgets","topMaskImageIndex","underMaskImageIndex","showTimeOnEditScreen","widgets","TopMaskImageIndex","UnderMaskImageIndex","Unknown4","Widget","map","wi","WatchFace","background","activity","status","aod","colorBackgroundRead","ix","Seconds","System","Status","Widgets","ScreenIdle","Constant","max","resultIndex","startImageIndex","alert","NONE","DEVICE","deviceId","BlockType","FileLoaderComponent","useContext","images","setImages","setWatchface","setJsonName","onLoadJson","e","target","JSON","parse","w","getImages","files","filename","name","base","lastIndexOf","id","isNaN","img","addEventListener","checkImagesCount","src","URL","createObjectURL","alt","image","sortedAr","sort","window","className","multiple","accept","onChange","event","file","fr","FileReader","onload","readAsText","Button","onClick","document","getElementById","value","initialDnDState","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","DnDListComponent","_list","updateOrder","useState","dragAndDrop","setDragAndDrop","onDragStart","initialPosition","Number","currentTarget","dataset","position","dataTransfer","setData","onDragOver","preventDefault","newList","itemDragged","remainingItems","filter","slice","onDrop","onDragLeave","data-position","draggable","reactItem","OptionsAlignment","OptionsUnitSystemFont","OptionsSystemFontDirection","OptionsLineEndingLine","OptionsLineEndingCircle","SelectFileListComponent","setCollapsed","onFileSelected","options","i","disabled","CheckBoxBlockComponent","checked","ColorBlockComponent","style","NumberBlockComponent","SelectBlockComponent","RowComponent","row","showDelete","blocks","block","Empty","SelectFile","nvalue","Checkbox","Select","svalue","selectOptions","getBlock","onDelete","BlocksArrayComponent","ImageDigitComponent","onUpdate","showNoData","showDecimalPointer","showDelimiter","paddingZeroFix","followDisabled","imageSetIndex","onCopyFromNormal","useMemo","findImageIndex","unitImageSetIndex","onChangeImageIndex","onChangeX","onChangeY","onChangeUnit","onChangeNoData","onChangeDelimiter","onChangeDecimalPointer","onChangePaddingZero","onChangeSpacing","onChangeFollow","fromJson","onChangeAlignment","onChangeSeparator","onChangeSeparatorX","onChangeSeparatorY","Card","Header","digitimage","Body","SystemFontComponent","colorRead","onChangeColor","onChangeSize","onChangeAngle","onChangeUnitCheck","clear","float","SystemFontCircleComponent","onChangeRadius","onChangeDirection","ActivityDigitComponent","ClockHandComponent","clockHand","showAngle","scaleImageSetIndex","changePointerImageIndex","changeX","changeY","changePointerX","changePointerY","changeCoverImageIndex","changeCoverX","changeCoverY","changeScaleImageIndex","changeScaleX","changeScaleY","changeStartAngle","changeEndAngle","ch","ImageCoordsComponent","imageCoords","ip","ic","ImageProgressComponent","changeImageIndex","changeCount","onChangeDisplayType","coords","splice","ProgressbarCircleCodmponent","changeRadius","changeWidth","changeForegroundImageIndex","changeColor","changeLineEnding","changeBackgroundImageIndex","pBar","Math","abs","pb","ProgressbarLinearCodmponent","changeLength","start","ActivityComponent","onUpdateActivity","showProgress","onCopy","stopPropagation","role","ActivityListComponent","activityToAdd","setActivityToAdd","keys","findByIndex","al","updateActivity","confirm","deleteActivity","list","BackgroundComponent","watchface","onChangeBackgroundPreviewImage","onChangeBackgroundImageIndex","onChangeBackgroundColor","DateComponent","collapsedOrderElement","setCollapsedOrderelement","updateDay","_date","updateMonth","updateYear","StatusComponent","updateStatus","TimeAnalogComponent","MultilangImageCoordsComponent","TimeDigitalComponent","updateHoursDigit","t","updateTimeDigital","updateMinutesDigit","m","updateSecondsDigit","wdf","ScreenNormalcomponent","WeatherStates","PreviewStatesComponent","watchState","setWatchState","useEffect","ws","time","hours","minutes","seconds","getFullYear","getMonth","getDate","getDay","step","split","v","stepsGoal","hearthrateGoal","hearthrate","paiGoal","standupGoal","standup","weatherIcon","temperature","temperatureMin","temperatureMax","airPressureGoal","activeWidget","BackgroundAODComponent","TimeAnalogAODComponent","TimeDigitalAODComponent","AodComponent","WidgetElementComponent","element","defaultCount","we","_we","WidgetComponent","widget","onChangeWidth","onChangeHeight","onChangeBorderActiv","onChangeBorderInactiv","onChangeDescriptionWidth","_wi","updateElement","deleteElement","WidgetsComponent","updateWidgets","_wf","wf","updateWidget","deleteWidget","tabs","LeftSideComponent","setPreviewScreenNormal","selectedTab","setSelectedTab","tab","tabid","JsonComponent","jsonName","setJson","timeDigitalEnabled","timeDigitalAodEnabled","timeClockHandEnabled","timeClockHandAodEnabled","dateEnabled","dateAodEnabled","statusEnabled","dialFaceEnabled","dialFaceAodEnabled","timeDigits","getTimeDigital","timeDigitsAod","dateDigits","dateDigitsAod","activitysToJson","activitysAod","Info","DeviceId","colorBackgroundWrite","ProgressDialFace","DateProgressBar","DateClockHand","getWidgets","stringify","generateJson","Blob","href","download","saveJson","cl","alist","digits","getWidgetElement","getWidget","Canvas","props","draw","rest","canvasRef","useRef","canvas","current","context","getContext","ref","findImageById","console","error","drawImageCoords","ctx","imageCoord","drawImage","drawDigitImage","number","followXY","drawBorder","weatherIconCenterX","strNumber","concat","decimalPointer","chr","charAt","n","widthZero","widthDelimiter","widthUnit","startx","starty","spacing","alignment","strLenght","drawborder","imageWidth","maxWidth","beginPath","strokeStyle","rect","stroke","drawImages","drawSeparator","addUnitsAndSeparator","text","forceSeparator","systemFont","getSystemFontText","systemFontText","drawDigit","fontSize","radius","font","tx","ty","fillStyle","save","translate","rotate","PI","measureText","fillText","spacingAngle","restore","drawSystemFontFontRotated","radians","drawSystemFont","drawProgressBarCircle","total","angleSettings","ax","ay","startAngle","sector_angle","dX","dY","backimg","flatness","endAngle","radianStart","radianEnd","clockwise","x1","cos","y1","sin","x2","y2","x3","y3","x5","y5","x6","y6","arc","moveTo","lineTo","x4","y4","xc1","yc1","xc2","yc2","drawArcPath","clip","GFG_Fun","lineWidth","closePath","fill","_x","_y","drawColorEndings","drawProgressBarLinear","lineB","endx","endy","fillRect","drawclockhand","offsetX","offsetY","_startAngle","angle","drawActivityList","digitBorder","mainScreen","weatherTemperatureActivityIndex","imageIndexWeather","_image_x","batteryGoal","drawActivity","cur","caloriesGoal","uvIndexGoal","airQualityGoal","humidityGoal","sunset","stressGoal","fatBurningGoal","coors","ceil","initial","drawImageProgress","drawDate","_temp","_follow","drawTimeAnalog","drawClockHand","drawMultilangImageCoords","drawTimeDigital","timeDigital","s_hours","s_minutes","s_seconds","drawWidgets","borderWidget","showWidgetPreview","topMask","bottomMask","imgBack","imgTop","imgFrame","strokeRect","drawWidget","storage_items","PreviewComponent","previewScreenNormal","setBorderWidget","setShowWidgetPreview","setX","setY","localStorage","getItem","whiteGrid","setWhiteGrid","blackGrid","setBlackGrid","setDigitBorder","drawLine","begin","end","canvasCcontainer","clearRect","drawBackground","drawStatus","drawNormal","drawAodBackground","drawAod","drawGrid","canvasPreview","getBoundingClientRect","clientX","left","clientY","top","round","wg","setItem","bg","db","UploadedImagesomponent","RightSideComponent","WatchState","getHours","getMinutes","getSeconds","random","App","Provider","Container","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0a238ebe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasCcontainer\":\"previewComponent_canvasCcontainer___DCgA\",\"canvasPreview\":\"previewComponent_canvasPreview__KWMJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JsonComponent_json__6-65E\"};","import {createContext} from 'react'\r\nimport { IImage } from '../model/image.model';\r\nimport WatchFace from '../model/watchFace.model';\r\nimport { WatchState } from '../model/watchState';\r\n\r\nexport const WatchfaceContext = createContext(null);\r\n\r\nexport interface IWatchContext {\r\n    images: IImage[],\r\n    setImages(images: IImage[]): void,\r\n    watchface: WatchFace,\r\n    setWatchface(watchface: WatchFace): void,\r\n    watchState: WatchState,\r\n    setWatchState(watchState: WatchState): void,\r\n    jsonName: string,\r\n    setJsonName(jsonName: string): void,\r\n    previewScreenNormal: boolean,\r\n    setPreviewScreenNormal(s: boolean): void,\r\n  }","const colorRegex: RegExp = /^#[0-9A-F]{6}$/i;\r\n\r\n\r\nexport default class Color {\r\n  \r\n  static readonly DEFAULT_COLOR = '#000000';\r\n  \r\n  static hexToRgb(hex: string) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  }\r\n\r\n  static rgbToHex(r: number, g: number, b: number) {\r\n    return (\r\n      \"#\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\")\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Read amazfit hex color from Json to HTML-HEX-String\r\n   */\r\n  static colorRead(color: string) {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(10, 18);\r\n    if (color.length === 10) color = \"#\" + color.substring(4);\r\n    //let old_color = this.hexToRgb(color);\r\n    //let new_color = this.rgbToHex(old_color.r, old_color.g, old_color.b);\r\n    return color;\r\n  }\r\n\r\n  /*\r\n        Read from json 16 bit background amazfit color to 32 bit\r\n    */\r\n  static colorBackgroundRead(color: string): string {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(8, 18);\r\n    let firstByteS = color.substring(8, 10);\r\n    let secondByteS = color.substring(10, 12);\r\n    let firstByte = parseInt(firstByteS, 16);\r\n    let secondByte = parseInt(secondByteS, 16);\r\n\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    r = ((firstByte >> 3) & 0x1f) << 3;\r\n    g = (((secondByte >> 5) & 0x7) | ((firstByte & 0x07) << 3)) << 2;\r\n    b = (secondByte & 0x1f) << 3;\r\n\r\n    let new_color = this.rgbToHex(r, g, b);\r\n   \r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html-hex 32 bit color to 16 bit amazfit color \r\n    */\r\n  static colorBackgroundWrite(hex: string): string {\r\n    if (!hex) return null\r\n    \r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let temp_b = (b >> 3) & 0x1f;\r\n    let temp_g = ((g >> 2) & 0x7) << 5;\r\n    let secondByte = temp_b | temp_g;\r\n\r\n    let temp_g2 = (g >> 5) & 0x07;\r\n    let temp_r = ((r >> 3) & 0x1f) << 3;\r\n    let firstByte = temp_g2 | temp_r;\r\n    let firstByteS = firstByte.toString(16).padStart(2, '0').toUpperCase();\r\n    let secondByteS = secondByte.toString(16).padStart(2, '0').toUpperCase();\r\n\r\n    let new_color = \"0xFFFF\" + firstByteS + secondByteS;\r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html hex 32 bit color to 32 bit amazfit json hex color\r\n  */\r\n  static colorWrite(hex: string): string {\r\n    if (!hex) return null\r\n\r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let new_color =\r\n      \"0xFF\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\");\r\n    return new_color;\r\n  }\r\n\r\n  static GFG_Fun(color: any) {\r\n    return colorRegex.test(color);\r\n  }\r\n}\r\n","export class JsonType {\r\n    constructor(public index: number, public json: string) {}\r\n  }\r\n  \r\n  export class LangCodeType {\r\n    static Zh = new JsonType(0, \"Zh\");\r\n    static ZhHant = new JsonType(1, \"ZhHant\");\r\n    static All = new JsonType(2, \"All\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Zh.json;\r\n      return Object.values(LangCodeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Zh.index;\r\n      return Object.values(LangCodeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class AlignmentType {\r\n    static Left = new JsonType(0, \"Left\");\r\n    static Center = new JsonType(1, \"Center\");\r\n    static Right = new JsonType(2, \"Right\");\r\n  \r\n    static toJson(index: number): string {\r\n      if (index === undefined) return this.Left.json;\r\n      return Object.values(AlignmentType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string): number {\r\n      if (json === undefined) return this.Left.index;\r\n      return Object.values(AlignmentType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class FollowType {\r\n    static Follow = new JsonType(0, \"Follow\");\r\n    static Single = new JsonType(1, \"Single\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Follow.json;\r\n      return Object.values(FollowType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Follow.index;\r\n      return Object.values(FollowType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class CommonType {\r\n    static Default = new JsonType(0, null);\r\n    static Min = new JsonType(1, \"Min\");\r\n    static Max = new JsonType(2, \"Max\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Default.json;\r\n      return Object.values(CommonType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Default.index;\r\n      return Object.values(CommonType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ImageProgressDisplayType {\r\n    static Single = new JsonType(0, \"Single\");\r\n    static Continuous = new JsonType(1, \"Continuous\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Single.json;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Single.index;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class DateType {\r\n    static Year = new JsonType(0, \"Year\");\r\n    static Month = new JsonType(1, \"Month\");\r\n    static Day = new JsonType(2, \"Day\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Year.json;\r\n      return Object.values(DateType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Year.index;\r\n      return Object.values(DateType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class TimeType {\r\n    static Hour = new JsonType(0, \"Hour\");\r\n    static Minute = new JsonType(1, \"Minute\");\r\n    static Second = new JsonType(2, \"Second\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Hour.json;\r\n      return Object.values(TimeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Hour.index;\r\n      return Object.values(TimeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ActivityType {\r\n    static Date = new JsonType(0, \"Date\");\r\n    static Battery = new JsonType(1, \"Battery\");\r\n    static Steps = new JsonType(2, \"Steps\");\r\n    static Calories = new JsonType(3, \"Calories\");\r\n    static HeartRate = new JsonType(4, \"HeartRate\");\r\n    static Pai = new JsonType(5, \"PAI\");\r\n    static Distance = new JsonType(6, \"Distance\");\r\n    static StandUp = new JsonType(7, \"StandUp\");\r\n    static Weather = new JsonType(8, \"Weather\");\r\n    static UVindex = new JsonType(9, \"UVindex\");\r\n    static AirQuality = new JsonType(10, \"AirQuality\");\r\n    static Humidity = new JsonType(11, \"Humidity\");\r\n    static Sunrise = new JsonType(12, \"Sunrise\");\r\n    static WindForce = new JsonType(13, \"WindForce\");\r\n    static Altitude = new JsonType(14, \"Altitude\");\r\n    static AirPressure = new JsonType(15, \"AirPressure\");\r\n    static Stress = new JsonType(16, \"Stress\");\r\n    static ActivityGoal = new JsonType(17, \"ActivityGoal\");\r\n    static FatBurning = new JsonType(18, \"FatBurning\");\r\n  \r\n    static findByIndex(index: number) {\r\n      if (index === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.index === index);\r\n    }\r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Date.json;\r\n      return Object.values(ActivityType).find((val) => val.index === index).json;\r\n    }\r\n    static findByJson(json: string) {\r\n      if (json === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.json === json);\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Date.index;\r\n      return Object.values(ActivityType).find((val) => val.json === json).index;\r\n    }\r\n  }","import Color from \"../shared/color\";\r\nimport { AlignmentType, FollowType, ImageProgressDisplayType, LangCodeType } from \"./types.model\";\r\n\r\n\r\nexport class DeviceId {\r\n  DeviceId: number;\r\n}\r\n\r\nexport class Background {\r\n  Preview: MultilangImage[] = [];\r\n  BackgroundImageIndex: number;\r\n  Color: string;\r\n}\r\n\r\nexport class Coordinates {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n}\r\n\r\nexport class ImageSetGTR2 {\r\n  ImageIndex: number = null;\r\n  ImagesCount: number = 1;\r\n}\r\n\r\nexport class ScreenNormal {\r\n  DigitalDialFace: DigitalDialFace;\r\n  AnalogDialFace: AnalogDialFace;\r\n  ProgressDialFace: ProgressDialFace;\r\n}\r\n\r\nexport class System {\r\n  Status: Status;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Widgets {\r\n  Widget: Widget[];\r\n  TopMaskImageIndex: number;\r\n  UnderMaskImageIndex: number;\r\n  Unknown4: number = 0;\r\n}\r\n\r\nexport class ScreenIdle {\r\n  DialFace: ScreenNormal;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class ImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageIndex: number = null;\r\n  ImageIndex2: number = null;\r\n  ImageIndex3: number = null;\r\n}\r\n\r\nexport class Widget {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Width: number = 0;\r\n  Height: number = 0;\r\n  WidgetElement: WidgetElement[] = [];\r\n  BorderActivImageIndex: number;\r\n  BorderInactivImageIndex: number;\r\n  DescriptionImageBackground: ImageCoord = new ImageCoord();\r\n  DescriptionWidthCheck: number = 0;\r\n}\r\n\r\nexport class WidgetElement {\r\n  Preview: MultilangImage[] = [];\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Date {\r\n  DateDigits: DigitalDigit[];\r\n  WeeksDigits: DigitalDigit;\r\n  DateClockHand: DateClockHand;\r\n  DateProgressBar: DateProgressBar;\r\n}\r\n\r\nexport class DateProgressBar {\r\n  MonthProgressBar: ProgressBar;\r\n  DayProgressBar: ProgressBar;\r\n  WeekDayProgressBar: ProgressBar;\r\n}\r\n\r\nexport class Status {\r\n  Bluetooth: ImageCoord;\r\n  DoNotDisturb: ImageCoord;\r\n  Lock: ImageCoord;\r\n  Alarm: ImageCoord;\r\n}\r\n\r\nexport class Activity {\r\n  Type: string;\r\n  PointerProgress: ClockHand;\r\n  ProgressBar: ProgressBar;\r\n  ImageProgress: ImageProgress;\r\n  Digits: DigitalDigit[];\r\n  Shortcut: Shortcut;\r\n  Icon: ImageCoord;\r\n}\r\n\r\nexport class Shortcut {\r\n  BoxElement: BoxElement;\r\n  ImageIndex: number;\r\n}\r\n\r\nexport class BoxElement {\r\n  TopLeftX: number;\r\n  TopLeftY: number;\r\n  Width: number;\r\n  Height: number;\r\n}\r\n\r\nexport class ImageProgress {\r\n  Coordinates: Coordinates[] = [];\r\n  ImageSet = new ImageSetGTR2();\r\n  DisplayType: string = ImageProgressDisplayType.Single.json;\r\n}\r\n\r\nexport class ProgressDialFace {\r\n  Hours: ProgressBar;\r\n  Minutes: ProgressBar;\r\n  Seconds: ProgressBar;\r\n}\r\n\r\nexport class ProgressBar {\r\n  AngleSettings: AngleSettings;\r\n  LinearSettings: LinearSettings;\r\n  ForegroundImageIndex: number;\r\n  Color: string;\r\n  Width: number;\r\n  Flatness: number;\r\n  PointerImageIndex: number;\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class LinearSettings {\r\n  StartX: number = 0;\r\n  StartY: number = 0;\r\n  EndX: number = 0;\r\n  EndY: number = 0;\r\n  Unknown5: number;\r\n}\r\n\r\nexport class AngleSettings {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  StartAngle: number = 0;\r\n  EndAngle: number = 360;\r\n  Radius: number = 0;\r\n}\r\n\r\nexport class AnalogDialFace {\r\n  Hours: ClockHand;\r\n  Minutes: ClockHand;\r\n  Seconds: ClockHand;\r\n}\r\n\r\nexport class DateClockHand {\r\n  MonthClockHand: ClockHand;\r\n  DayClockHand: ClockHand;\r\n  WeekDayClockHand: ClockHand;\r\n}\r\n\r\nexport class ClockHand {\r\n  X: number;\r\n  Y: number;\r\n  Scale: MultilangImageCoord;\r\n  Pointer: ImageCoord;\r\n  Cover: ImageCoord;\r\n  StartAngle: number;\r\n  EndAngle: number;\r\n  Unknown16: number;\r\n}\r\n\r\nexport class DigitalDialFace {\r\n  Digits: DigitalDigit[];\r\n  AM: MultilangImageCoord;\r\n  PM: MultilangImageCoord;\r\n}\r\n\r\nexport class MultilangImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageSet: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nexport class Text {\r\n  Image: Image;\r\n  SystemFont: SystemFont;\r\n  Alignment: string = AlignmentType.Left.json;\r\n  Spacing: number = 0;\r\n  PaddingZero: boolean = false;\r\n  DisplayFormAnalog: boolean = false;\r\n}\r\n\r\nexport class Image {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  NoDataImageIndex: number = null;\r\n  MultilangImage: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n  DecimalPointImageIndex: number = null;\r\n  MultilangImageUnit: MultilangImage[];\r\n  DelimiterImageIndex: number = null;\r\n  MultilangImageUnitMile: MultilangImage[];\r\n}\r\n\r\nexport class SystemFont {\r\n  FontRotate: FontRotate;\r\n  Coordinates: Coordinates;\r\n  Angle: number = 0;\r\n  Size: number = 20;\r\n  Color: string =  Color.colorWrite(\"#000000\");\r\n  ShowUnitCheck: number = -1;\r\n}\r\n\r\n\r\nexport class FontRotate {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Radius: number = 0;\r\n  RotateDirection: number = 0;\r\n}\r\n\r\nexport class DigitalDigit {\r\n  Type: string;\r\n  TimeType: string;\r\n  DateType: string;\r\n  CombingMode: string = FollowType.Single.json;\r\n  Digit: Text = new Text();\r\n  Separator: ImageCoord;\r\n}\r\n\r\nexport class MultilangImage {\r\n  LangCode: string = LangCodeType.All.json;\r\n  ImageSet: ImageSetGTR2 = new ImageSetGTR2();\r\n}\r\n\r\nexport class WatchJson {\r\n  Info: DeviceId;\r\n  Background: Background;\r\n  DialFace: ScreenNormal;\r\n  System: System;\r\n  Widgets: Widgets;\r\n  ScreenIdle: ScreenIdle;\r\n}\r\n\r\nexport function oneCoordinates(coordinates: Coordinates[]): Boolean {\r\n    if (coordinates.length === 1) return true;\r\n    let result = true;\r\n    let x = coordinates[0].X;\r\n    let y = coordinates[0].Y;\r\n    coordinates.forEach( (coordinate) => {\r\n        if (x !== coordinate.X || y !== coordinate.Y) result = false;\r\n    })\r\n    return result;\r\n}","import Color from \"../shared/color\";\r\nimport {\r\n  ClockHand, DigitalDigit, ImageCoord, ImageProgress, ProgressBar, ScreenIdle, Shortcut, Status, Text, WatchJson, Widgets, MultilangImageCoord, Activity, Widget, WidgetElement\r\n} from \"./json.model\";\r\nimport { TimeType, DateType, CommonType, ActivityType, JsonType, LangCodeType } from \"./types.model\";\r\n\r\n\r\ninterface IDigitConstructor {\r\n  type: number;\r\n  count: number;\r\n  numberLenght: number;\r\n  unit: string[];\r\n  separator: string;\r\n  title: string;\r\n  titleDefault?: string;\r\n  titleMin?: string;\r\n  titleMax?: string;\r\n  decimalDelimiter?: boolean;\r\n  timeDelimiter?: boolean;\r\n  displayAnalog?: boolean;\r\n  imageProgressTotal?: number;\r\n}\r\n\r\nconst digitTypes = {\r\n  hour: {\r\n    type: TimeType.Hour.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: [':', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Hours',\r\n  },\r\n  min: {\r\n    type: TimeType.Minute.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: [':', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Minutes',\r\n  },\r\n  sec: {\r\n    type: TimeType.Second.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: [':', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Seconds',\r\n  },\r\n  year: {\r\n    type: DateType.Year.index,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['/', '/', '.'],\r\n    separator: '/',\r\n    title: 'Year',\r\n  },\r\n  month: {\r\n    type: DateType.Month.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['/', '/', '.'],\r\n    separator: '/',\r\n    title: 'Month',\r\n  },\r\n  monthasword: {\r\n    type: DateType.Month.index,\r\n    count: 12,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Month as word',\r\n  },\r\n  day: {\r\n    type: DateType.Day.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '/', '.'],\r\n    separator: '/',\r\n    title: 'Day',\r\n  },\r\n  weekday: {\r\n    type: 0,\r\n    count: 7,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Weekday',\r\n  },\r\n  battery: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Battery',\r\n  },\r\n  steps: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'Steps', 'STEPS'],\r\n    separator: '/',\r\n    title: 'Steps',\r\n    titleMin: 'goal of steps'\r\n  },\r\n  calories: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kcal', 'Cal'],\r\n    separator: '/',\r\n    title: 'Calories',\r\n    titleMin: 'goal of calories'\r\n  },\r\n  heartRate: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 6,\r\n    unit: ['', 'bpm', 'BPM'],\r\n    separator: '/',\r\n    title: 'Heart rate'\r\n  },\r\n  pai: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'PAI',\r\n  },\r\n  distance: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'km', 'KM'],\r\n    separator: '/',\r\n    decimalDelimiter: true,\r\n    title: 'Distance',\r\n  },\r\n  standUp: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Standup',\r\n    titleMin: 'goal of stand up'\r\n  },\r\n  uvIndex: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'UVIndex',\r\n  },\r\n  airQuality: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air quality',\r\n  },\r\n  humidity: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Humidity',\r\n  },\r\n  sunrise: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Sunrise',\r\n    titleDefault: 'closest sunrise or sunset',\r\n    titleMin: 'sunrise',\r\n    titleMax: 'sunset',\r\n  },\r\n  windForce: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kpa', 'KPA'],\r\n    separator: '/',\r\n    title: 'Wind force',\r\n  },\r\n  airPressure: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air pressure',\r\n  },\r\n  stress: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Stress',\r\n  },\r\n  activityGoal: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'ActivityGoal',\r\n    titleMin: 'goal of activity'\r\n  },\r\n  fatBurning: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'FatBurning',\r\n    titleMin: 'goal of FatBurning'\r\n  },\r\n  weather: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 29,\r\n    unit: ['°C', '°C', '°C'],\r\n    separator: '/',\r\n    title: 'Weather',\r\n    titleDefault: 'Current',\r\n    titleMin: 'Minimum',\r\n    titleMax: 'Maximum',\r\n  },\r\n\r\n};\r\nexport class Background {\r\n  imageIndex = null;\r\n  previewIndex = null;\r\n  color = Color.DEFAULT_COLOR;\r\n  collapsed = true;\r\n}\r\n\r\nexport class Coords {\r\n  x: number = 0;\r\n  y: number = 0;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x ? x : 0;\r\n    this.y = y ? y : 0;\r\n  }\r\n}\r\n\r\nexport class WatchImageCoords {\r\n  json = new ImageCoord()\r\n  enabled = false;\r\n\r\n  constructor(j?: ImageCoord) {\r\n    if (j) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\nexport class WatchMultilangImageCoords {\r\n  json = new MultilangImageCoord()\r\n  enabled = false;\r\n  count = 1;\r\n\r\n  constructor(j?: MultilangImageCoord, count?: number) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n    if (count) {\r\n      this.count = count\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchImageProgress {\r\n  enabled = false;\r\n  json = new ImageProgress();\r\n\r\n  constructor(j?: ImageProgress) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport enum TypeOfDigit {\r\n  TIME,\r\n  DATE,\r\n  COMMON\r\n}\r\nexport class WatchCommonDigit {\r\n  constructor(type: TypeOfDigit, d?: DigitalDigit, con?: IDigitConstructor) {\r\n    this.json = d;\r\n    if (d != null) {\r\n      this.enabled = true\r\n      if (d.Digit?.Image) this.enabledImage = true\r\n      if (d.Digit?.SystemFont) {\r\n        if (d.Digit?.SystemFont?.FontRotate) this.enabledSystemFontCircle = true\r\n        else this.enabledSystemFont = true\r\n      }\r\n      this.enabled = this.enabledImage || this.enabledSystemFont || this.enabledSystemFontCircle\r\n    }\r\n    if (con != null) {\r\n      if (!d) {\r\n        this.json = new DigitalDigit()\r\n        this.json.Digit = new Text()\r\n      }\r\n      this.con = con\r\n    }\r\n    this.json.DateType = type === TypeOfDigit.DATE ? DateType.toJson(con.type) : null\r\n    this.json.TimeType = type === TypeOfDigit.TIME ? TimeType.toJson(con.type) : null\r\n    this.json.Type = type === TypeOfDigit.COMMON ? CommonType.toJson(con.type) : null\r\n  }\r\n  json: DigitalDigit = new DigitalDigit();\r\n  con: IDigitConstructor;\r\n  enabled = false;\r\n  enabledImage = false;\r\n  enabledSystemFont = false;\r\n  enabledSystemFontCircle = false;\r\n}\r\n\r\nexport class WatchClockHand {\r\n  enabled: boolean = false;\r\n\r\n  json: ClockHand = new ClockHand()\r\n\r\n  constructor(json?: ClockHand) {\r\n    this.json = json\r\n    if (json) this.enabled = true\r\n  }\r\n}\r\n\r\nexport class WatchDialFace {\r\n  collapsedDigital = true;\r\n  collapsedAnalog = true;\r\n  hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.hour);\r\n  minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.min);\r\n  secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.sec);\r\n  hoursClockhand = new WatchClockHand();\r\n  minutesClockhand = new WatchClockHand();\r\n  secondsClockhand = new WatchClockHand();\r\n  am = new WatchMultilangImageCoords()\r\n  pm = new WatchMultilangImageCoords()\r\n}\r\n\r\nexport class ElementOrderItem {\r\n  public type: number;\r\n  public title: string;\r\n  constructor(jsonType: JsonType) {\r\n    this.type = jsonType.index;\r\n    this.title = jsonType.json;\r\n  }\r\n}\r\n\r\nexport class WatchDate {\r\n  collapsed = true;\r\n  enabled = false;\r\n  year = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.year);\r\n  month = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.month);\r\n  day = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.day);\r\n  monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.monthasword);\r\n  weekDay = new WatchCommonDigit(TypeOfDigit.COMMON, null, digitTypes.weekday);\r\n\r\n  orderElements = [\r\n    new ElementOrderItem(DateType.Year),\r\n    new ElementOrderItem(DateType.Month),\r\n    new ElementOrderItem(DateType.Day),\r\n  ]\r\n}\r\n\r\nexport class WatchStatus {\r\n  collapsed = true;\r\n  constructor(s?: Status) {\r\n    if (s) {\r\n      if (s.Bluetooth?.ImageIndex) {\r\n        this.bluetooth = new WatchImageCoords(s.Bluetooth);\r\n        this.bluetooth.enabled = true;\r\n      }\r\n      if (s.Lock?.ImageIndex) {\r\n        this.lock = new WatchImageCoords(s.Lock);\r\n        this.lock.enabled = true;\r\n      }\r\n      if (s.DoNotDisturb?.ImageIndex) {\r\n        this.dnd = new WatchImageCoords(s.DoNotDisturb);\r\n        this.dnd.enabled = true;\r\n      }\r\n      if (s.Alarm?.ImageIndex) {\r\n        this.alarm = new WatchImageCoords(s.Alarm);\r\n        this.alarm.enabled = true;\r\n      }\r\n    }\r\n  }\r\n  bluetooth = new WatchImageCoords(null);\r\n  dnd = new WatchImageCoords(null);\r\n  alarm = new WatchImageCoords(null);\r\n  lock = new WatchImageCoords(null);\r\n}\r\n\r\nexport class WatchProgressBar {\r\n  enabledLinear: boolean = false;\r\n  enabledCircle: boolean = false;\r\n  jsonObj: ProgressBar;\r\n\r\n  constructor(json?: ProgressBar) {\r\n    this.jsonObj = json;\r\n    if (json) {\r\n      if (json.LinearSettings)\r\n        this.enabledLinear = true;\r\n      else if (json.AngleSettings)\r\n        this.enabledCircle = true;\r\n    }\r\n  }\r\n}\r\nexport class WatchActivity {\r\n  collapsed = true;\r\n  key: string;\r\n  type: JsonType;\r\n  dt: IDigitConstructor;\r\n  digit: WatchCommonDigit;\r\n  digitMin: WatchCommonDigit;\r\n  digitMax: WatchCommonDigit;\r\n  imageProgress = new WatchImageProgress();\r\n  pointerProgress = new WatchClockHand();\r\n  progressBar = new WatchProgressBar();\r\n  icon = new WatchImageCoords();\r\n  shortcut: Shortcut = null;\r\n\r\n  constructor(type: JsonType, dt: IDigitConstructor) {\r\n    this.key = type.index + '_' + new Date().getTime()\r\n    this.type = type;\r\n    this.dt = dt;\r\n    this.imageProgress.json.ImageSet.ImagesCount = dt.imageProgressTotal;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class WatchAOD {\r\n  dialFace = new WatchDialFace();\r\n  date = new WatchDate();\r\n  activitylistCollapsed = true;\r\n  activitylist: WatchActivity[] = [];\r\n  backgroundImageIndex: number;\r\n  backgroundCollapsed = true;\r\n  json: ScreenIdle\r\n\r\n  constructor(j: ScreenIdle) {\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activitylist = [];\r\n    this.backgroundImageIndex = null;\r\n    this.json = j\r\n    if (j == null) return\r\n    this.backgroundImageIndex = j.BackgroundImageIndex\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    this.dialFace.secondsDigital = null\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = null\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.Date?.DateDigits) {\r\n      j.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.date.orderElements.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.date.orderElements = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.activitylist = getActivityListFromJson(j.Activity);\r\n  }\r\n}\r\n\r\nexport function getActivityFromJson(a: Activity, atype: JsonType): WatchActivity {\r\n  let _activity: WatchActivity = null;\r\n  let _dt: IDigitConstructor = null;\r\n  switch (atype) {\r\n    case ActivityType.Battery:\r\n      _dt = digitTypes.battery;\r\n      break;\r\n    case ActivityType.Steps:\r\n      _dt = digitTypes.steps;\r\n      break;\r\n    case ActivityType.Calories:\r\n      _dt = digitTypes.calories;\r\n      break;\r\n    case ActivityType.HeartRate:\r\n      _dt = digitTypes.heartRate;\r\n      break;\r\n    case ActivityType.Pai:\r\n      _dt = digitTypes.pai;\r\n      break;\r\n    case ActivityType.Distance:\r\n      _dt = digitTypes.distance;\r\n      break;\r\n    case ActivityType.StandUp:\r\n      _dt = digitTypes.standUp;\r\n      break;\r\n    case ActivityType.UVindex:\r\n      _dt = digitTypes.uvIndex;\r\n      break;\r\n    case ActivityType.AirQuality:\r\n      _dt = digitTypes.airQuality;\r\n      break;\r\n    case ActivityType.Humidity:\r\n      _dt = digitTypes.humidity;\r\n      break;\r\n    case ActivityType.Sunrise:\r\n      _dt = digitTypes.sunrise;\r\n      break;\r\n    case ActivityType.WindForce:\r\n      _dt = digitTypes.windForce;\r\n      break;\r\n    case ActivityType.AirPressure:\r\n      _dt = digitTypes.airPressure;\r\n      break;\r\n    case ActivityType.Weather:\r\n      _dt = digitTypes.weather;\r\n      break;\r\n    case ActivityType.ActivityGoal:\r\n      _dt = digitTypes.activityGoal;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (_dt){\r\n    _activity = new WatchActivity(atype, _dt);\r\n    _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, null, _dt);\r\n    _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Min.index});\r\n    _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Max.index});\r\n  } \r\n  if (_activity) {\r\n    if (a?.Digits) {\r\n      a.Digits.forEach((digit) => {\r\n        if ( digit.Type === CommonType.Min.json )\r\n          _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Min.index});\r\n        else if ( digit.Type === CommonType.Max.json )\r\n          _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Max.index});\r\n        else\r\n          _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Default.index});\r\n      })\r\n    }\r\n    _activity.imageProgress = new WatchImageProgress(a?.ImageProgress);\r\n    _activity.pointerProgress = new WatchClockHand(a?.PointerProgress);\r\n    _activity.progressBar = new WatchProgressBar(a?.ProgressBar);\r\n    _activity.icon = new WatchImageCoords(a?.Icon);\r\n    _activity.shortcut = a?.Shortcut;\r\n  }\r\n  return _activity\r\n}\r\n\r\nexport function getActivityListFromJson(ar: Activity[]): WatchActivity[] | null {\r\n  if (ar) {\r\n    let activitylist: WatchActivity[] = []\r\n    ar.forEach((a) => {\r\n      let _a = getActivityFromJson(a, ActivityType.findByJson(a.Type))\r\n      if (_a) activitylist.push(_a)\r\n    });\r\n    return activitylist;\r\n  } else {\r\n    return [];\r\n  }\r\n\r\n}\r\n\r\nexport class WatchWidgetElement {\r\n  collapsed = true;\r\n  previewImageIndex: number;\r\n  date: WatchDate;\r\n  activitylistCollapsed = true;\r\n  activitys: WatchActivity[] = [];\r\n  orderElements = {\r\n    orderElementsDate: [\r\n      new ElementOrderItem(DateType.Year),\r\n      new ElementOrderItem(DateType.Month),\r\n      new ElementOrderItem(DateType.Day),\r\n    ]\r\n  };\r\n\r\n  constructor(j?: WidgetElement) {\r\n    if (j) {\r\n      if (!j.Preview) return null\r\n      let index = j.Preview.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n      this.previewImageIndex = index >= 0 ? j.Preview[index].ImageSet.ImageIndex : 0\r\n      this.activitys = getActivityListFromJson(j.Activity)\r\n\r\n      this.date = new WatchDate();\r\n      let newOrderElementsDate: ElementOrderItem[] = [];\r\n      if (j.Date?.DateDigits) {\r\n        j.Date.DateDigits.forEach((d) => {\r\n          switch (d.DateType) {\r\n            case DateType.Month.json:\r\n              if (d.Digit.DisplayFormAnalog) {\r\n                this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n                newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n              } else {\r\n                this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n                newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n              }\r\n              break;\r\n            case DateType.Day.json:\r\n              this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n              break;\r\n            default:\r\n              this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n              break;\r\n          }\r\n        });\r\n      }\r\n      this.orderElements.orderElementsDate.forEach((el) => {\r\n        if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n          newOrderElementsDate.push(el);\r\n      });\r\n      this.orderElements.orderElementsDate = newOrderElementsDate;\r\n  \r\n      this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n        j.Date?.WeeksDigits,\r\n        digitTypes.weekday\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchWidget {\r\n  collapsed = true;\r\n  x: number = 0;\r\n  y: number = 0;\r\n  width: number = 0;\r\n  height: number = 0;\r\n  widgetElementsCollapsed = true;\r\n  widgetElements: WatchWidgetElement[] = [];\r\n  borderActivImageIndex: number;\r\n  borderInactivImageIndex: number;\r\n  descriptionImageBackground: WatchImageCoords = new WatchImageCoords();\r\n  descriptionWidthCheck: number = 0;\r\n\r\n  constructor(j?: Widget) {\r\n    if ( j) {\r\n      this.x = j.X ? j.X : 0;\r\n      this.y = j.Y ? j.Y : 0;\r\n      this.width = j.Width;\r\n      this.height = j.Height;\r\n      this.widgetElements = []\r\n      if (j.WidgetElement) {\r\n        j.WidgetElement.forEach((item) => {\r\n          this.widgetElements.push(new WatchWidgetElement(item))\r\n        });\r\n      }\r\n      this.borderActivImageIndex = j.BorderActivImageIndex;\r\n      this.borderInactivImageIndex = j.BorderInactivImageIndex;\r\n      this.descriptionImageBackground = new WatchImageCoords(j.DescriptionImageBackground)\r\n      this.descriptionWidthCheck = j.DescriptionWidthCheck\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchWidgets {\r\n  enabled: boolean = false;\r\n  collapsed = true;\r\n  topMaskImageIndex: number\r\n  underMaskImageIndex: number\r\n  showTimeOnEditScreen: number\r\n  widgets: WatchWidget[] = []\r\n\r\n  constructor(json?: Widgets) {\r\n    if (json) {\r\n      this.enabled = true\r\n      this.topMaskImageIndex = json.TopMaskImageIndex\r\n      this.underMaskImageIndex = json.UnderMaskImageIndex\r\n      this.showTimeOnEditScreen = json.Unknown4\r\n      this.widgets = []\r\n      if (json.Widget) {\r\n        this.widgets = json.Widget.map((wi) => new WatchWidget(wi))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default class WatchFace {\r\n  background: Background = new Background();\r\n  dialFace: WatchDialFace = new WatchDialFace();\r\n  date: WatchDate = new WatchDate();\r\n  activitylistCollapsed = true;\r\n  activity: WatchActivity[] = [];\r\n  status = new WatchStatus();\r\n  widgets = new WatchWidgets(null)\r\n  aod = new WatchAOD(null)\r\n\r\n  constructor(j?: WatchJson) {\r\n    if (!j) return;\r\n\r\n    this.background = new Background();\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activity = [];\r\n    this.status = new WatchStatus();\r\n    this.aod = new WatchAOD(null)\r\n\r\n    this.background.color = Color.colorBackgroundRead(j.Background.Color);\r\n    this.background.imageIndex = j.Background.BackgroundImageIndex;\r\n    if (j.Background.Preview) {\r\n      let ix = 0;\r\n      j.Background?.Preview?.forEach((item, index) => {\r\n        if (item.LangCode === LangCodeType.All.json) {\r\n          ix = index;\r\n        }\r\n      });\r\n      this.background.previewIndex = j.Background.Preview[ix]?.ImageSet?.ImageIndex;\r\n    }\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          case TimeType.Second.json:\r\n            this.dialFace.secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.sec);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Second));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Seconds\r\n    );\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.System?.Date?.DateDigits) {\r\n      j.System.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.date.orderElements.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.date.orderElements = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.System?.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.status = new WatchStatus(j.System?.Status);\r\n\r\n    this.activity = getActivityListFromJson(j.System?.Activity)\r\n\r\n    this.widgets = new WatchWidgets(j.Widgets)\r\n    this.aod = new WatchAOD(j.ScreenIdle)\r\n  }\r\n}\r\n","export class Constant {\r\n  static readonly NONE = \"None\";\r\n  static readonly DEVICE = \"GTS 2\";\r\n  static readonly startImageIndex = 1;\r\n  static readonly width: number = 348;\r\n  static readonly height: number = 442;\r\n  static readonly deviceId: number = 65;\r\n\r\n  static getImageIndex(index: number, max: number) {\r\n    const resultIndex = index - Constant.startImageIndex;\r\n    if (resultIndex >= max) {\r\n      alert(\"Bad imageIndex: \" + resultIndex);\r\n      return 0;\r\n    }\r\n    return index;\r\n  }\r\n}\r\n","export enum BlockType {\r\n    Empty,\r\n    Number,\r\n    Date,\r\n    Time,\r\n    Checkbox,\r\n    Select,\r\n    Color,\r\n    SelectFile,\r\n  }\r\n  \r\nexport  interface IRow {\r\n    blocks: IBlock[],\r\n    disabled?: boolean,\r\n    onDelete?(): void,\r\n    showDelete?: boolean\r\n}\r\n\r\nexport interface IOption {\r\n    value: string,\r\n    title: string\r\n}\r\n\r\nexport const OptionsAlignment: IOption[] =  [ {value:'0', title: 'Left'}, {value: '1', title: 'Center'}, {value:'2', title: 'Right'}]\r\nexport const OptionsUnitSystemFont: IOption[] =  [ {value:'-1', title: 'Default'}, {value:'0', title: 'None'}, {value: '1', title: 'Normal'}, {value:'2', title: 'Alt'}]\r\nexport const OptionsSystemFontDirection: IOption[] =  [ {value:'0', title: 'Clockwise'}, {value: '1', title: 'Counter clock'}]\r\nexport const OptionsLineEndingLine: IOption[] =  [ {value:'0', title: 'Circle'}, {value:'180', title: 'Flat'}]\r\nexport const OptionsLineEndingCircle: IOption[] =  [ {value:'0', title: 'Circle'}, {value: '90', title: 'Triangle'}, {value:'180', title: 'Flat'}]\r\n\r\n\r\nexport interface IBlock {\r\n    title: string;\r\n    type: BlockType;\r\n    nvalue?: number;\r\n    checked?: boolean;\r\n    svalue?: string;\r\n    selectOptions?: IOption[]\r\n    onChange?(e): any;\r\n    disabled?: boolean;\r\n    min?: number\r\n    max?: number\r\n}","import { FC, useContext } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { WatchJson } from \"../../model/json.model\";\r\nimport WatchFace from \"../../model/watchFace.model\";\r\nimport { Constant } from \"../../shared/constant\";\r\n\r\nconst FileLoaderComponent: FC = () => {\r\n  const { images, setImages, setWatchface, setJsonName } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function onLoadJson(e: ProgressEvent<FileReader>) {\r\n    let json = e.target.result;\r\n    let j: WatchJson = JSON.parse(json.toString());\r\n    let w = new WatchFace(j);\r\n    setWatchface(w);\r\n  }\r\n\r\n  function uploadJsonFile(e) {\r\n    let file = e.target.files.item(0);\r\n    if (file) {\r\n      let fr = new FileReader();\r\n      fr.onload = onLoadJson;\r\n      fr.readAsText(file);\r\n      setJsonName(e.target.files.item(0).name);\r\n    }\r\n  }\r\n\r\n  function imagesUploadHandler(event: any) {\r\n    getImages(event.target.files, []);\r\n  }\r\n\r\n  function getImages(files: FileList, ar: IImage[], index = 0) {\r\n    //clearInput()\r\n    //setJsonName(null)\r\n    if (index < files.length) {\r\n      const filename = files[index].name;\r\n      let base = filename;\r\n      if (base.lastIndexOf(\".\") !== -1)\r\n        base = base.substring(0, base.lastIndexOf(\".\"));\r\n\r\n      const id = parseInt(base);\r\n      if ( /^\\d+$/.test(base) && !isNaN(id)) {\r\n        const img = new Image();\r\n        img.addEventListener(\"load\", () => {\r\n          index += 1;\r\n          if (index < files.length) \r\n            getImages(files, ar, index);\r\n          else {\r\n            checkImagesCount(ar);\r\n          }\r\n        });\r\n        img.src = URL.createObjectURL(files[index]);\r\n        img.alt = filename;\r\n        ar.push({\r\n          id: id,\r\n          name: filename,\r\n          image: img,\r\n        });\r\n      } else {\r\n        index += 1;\r\n        if (index < files.length) getImages(files, ar, index);\r\n        else checkImagesCount(ar);\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkImagesCount(ar: IImage[]) {\r\n    \r\n    let sortedAr = ar.sort((a, b) => a.id - b.id)\r\n\r\n    if ( sortedAr[sortedAr.length-1].id !== sortedAr.length - 1 + Constant.startImageIndex) {\r\n      window.alert('Images files go out of order or some of the files are missing. Name the PNG files in ascending order.')\r\n    }\r\n    if ( sortedAr[0].id !== Constant.startImageIndex) {\r\n      window.alert(`Images file numbering must start at ${Constant.startImageIndex}.`)\r\n    }\r\n    setImages(sortedAr)\r\n  }\r\n\r\n  function clearInput() {\r\n    if (document.getElementById(\"jsonLoad\")) (document.getElementById(\"jsonLoad\") as HTMLInputElement).value = null;\r\n    setWatchface(new WatchFace());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"input-group input-group-sm mb-3\">\r\n        <span className=\"input-group-text\">Load images</span>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          id=\"fileUpload\"\r\n          accept=\"image/*\"\r\n          onChange={imagesUploadHandler}\r\n        />\r\n        {images.length > 0 ? (\r\n          <>\r\n            <span className=\"input-group-text\">Load json file</span>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"application/json\"\r\n              id=\"jsonLoad\"\r\n              onChange={uploadJsonFile}\r\n            />\r\n            <Button onClick={clearInput}>clear</Button>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileLoaderComponent;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./draganddroplist.css\";\r\n\r\n\r\nexport interface IDNDItem<T> {\r\n  item: T,\r\n  reactItem: React.ReactChild\r\n}\r\n\r\ninterface IProps {\r\n  _list: IDNDItem<any>[];\r\n  updateOrder(list: IDNDItem<any>[]);\r\n}\r\n\r\nconst initialDnDState = {\r\n  draggedFrom: null,\r\n  draggedTo: null,\r\n  isDragging: false,\r\n  originalOrder: [],\r\n  updatedOrder: [],\r\n};\r\n\r\nconst DnDListComponent: FC<IProps> = ({ _list, updateOrder }) => {\r\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\r\n\r\n  // onDragStart fires when an element\r\n  // starts being dragged\r\n  function onDragStart(event) {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: _list,\r\n    });\r\n\r\n    // Note: this is only for Firefox.\r\n    // Without it, the DnD won't work.\r\n    // But we are not using it.\r\n    event.dataTransfer.setData(\"text/html\", \"\");\r\n  }\r\n\r\n  // onDragOver fires when an element being dragged\r\n  // enters a droppable area.\r\n  // In this case, any of the items on the list\r\n  function onDragOver(event) {\r\n    // in order for the onDrop\r\n    // event to fire, we have\r\n    // to cancel out this one\r\n    event.preventDefault();\r\n\r\n    let newList = dragAndDrop.originalOrder;\r\n\r\n    // index of the item being dragged\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n\r\n    // index of the droppable area being hovered\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n\r\n    const itemDragged = newList[draggedFrom];\r\n    const remainingItems = newList.filter(\r\n      (item, index) => index !== draggedFrom\r\n    );\r\n\r\n    newList = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo),\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newList,\r\n        draggedTo: draggedTo,\r\n      });\r\n      updateOrder(newList);\r\n    }\r\n  }\r\n\r\n  function onDrop(event) {\r\n    updateOrder(dragAndDrop.updatedOrder);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false,\r\n    });\r\n  }\r\n\r\n  function onDragLeave() {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list-group droplist\">\r\n        {_list.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              data-position={index}\r\n              draggable\r\n              onDragStart={onDragStart}\r\n              onDragOver={onDragOver}\r\n              onDrop={onDrop}\r\n              onDragLeave={onDragLeave}\r\n              className={`list-group-item ${\r\n                dragAndDrop && dragAndDrop.draggedTo === Number(index)\r\n                  ? \"dropArea\"\r\n                  : \"\"\r\n              }`}\r\n              title=\"Drag and Drop to change order\"\r\n            >\r\n                {item.reactItem}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DnDListComponent;\r\n","import React, { FC, ReactElement, useContext, useState } from \"react\";\r\nimport { Constant } from \"./constant\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport \"./selectFileList.css\";\r\ninterface IProps {\r\n  title: string,\r\n  value: number;\r\n  onChange(id: number): void;\r\n}\r\n\r\nconst SelectFileListComponent: FC<IProps> = ({\r\n  title,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function onFileSelected(id: number) {\r\n    onChange(id);\r\n    setCollapsed(true);\r\n  }\r\n\r\n  function onRemove() {\r\n    onFileSelected(null);\r\n  }\r\n\r\n  const options: ReactElement[] = [];\r\n\r\n  options.push(\r\n    <option key={\"None\"} value={\"None\"}>\r\n      {\" \"}\r\n    </option>\r\n  );\r\n\r\n  if (images) {\r\n    for (var i = 0; i < images.length; i++) {\r\n      let img = images[i];\r\n\r\n      options.push(\r\n        <li\r\n          key={img.id}\r\n          value={img.id}\r\n          className=\"list-group-item fileitem\"\r\n          onClick={() => onFileSelected(img.id)}\r\n        >\r\n          {<img src={img.image.src} alt={img.name} width={30} />}\r\n          {img.name}\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <span className=\"input-group-text\">{title}</span>\r\n      <div className=\"input-group-text dropdown\">\r\n        <div>\r\n          {value !== null &&\r\n          value !== undefined &&\r\n          images[value - Constant.startImageIndex]\r\n            ? images[value - Constant.startImageIndex].name\r\n            : \"None\"}\r\n        </div>\r\n        {collapsed ? (\r\n          \"\"\r\n        ) : (\r\n          <ul className=\"list-group dropdown-content\">{options}</ul>\r\n        )}\r\n      </div>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n        disabled={!images || images.length === 0}\r\n      >\r\n        + \r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={onRemove}\r\n        disabled={!value}\r\n      >\r\n        x\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectFileListComponent;\r\n","import React, { FC } from 'react';\r\n\r\ninterface IProps {\r\n    title: string,\r\n    checked: boolean,\r\n    onChange(checked: boolean): void,\r\n    disabled?: boolean\r\n}\r\n\r\nconst CheckBoxBlockComponent: FC<IProps> = ({ title, checked, onChange, disabled }) => {\r\n    return (\r\n        <>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                {title}\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n                <input\r\n                    className=\"form-check-input form-check-input-sm\"\r\n                    type=\"checkbox\"\r\n                    disabled={disabled}\r\n                    checked={checked ? true : false}\r\n                    onChange={() => onChange(!checked)}\r\n                    />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckBoxBlockComponent;","import React, { FC } from 'react';\r\nimport Color from '../shared/color';\r\n\r\ninterface IProps {\r\n    title: string,\r\n    value: string,\r\n    onChange(value: string): void\r\n}\r\nconst ColorBlockComponent: FC<IProps> = ({ title, value, onChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <span className=\"input-group-text\">{title}</span>\r\n            <span className=\"input-group-text\">{value ? value : 'None'}</span>\r\n            <input\r\n              type=\"color\"\r\n              className=\"form-control form-control-sm\"\r\n              style={{ width: 40 }}\r\n              onChange={(e) => {\r\n                onChange(e.target.value)\r\n              }}\r\n              id=\"colorBackground\"\r\n              value={value ? value : Color.DEFAULT_COLOR}\r\n              title=\"Choose color\"\r\n              />\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    onChange(null)\r\n                }}\r\n                title={`Remove ${title}`}\r\n            >\r\n                x\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ColorBlockComponent;","import React, { FC } from 'react';\r\n\r\ninterface IProps {\r\n    title: string,\r\n    value: number,\r\n    onChange(value: number): void,\r\n    disabled?: boolean,\r\n    min?: number,\r\n    max?: number,\r\n}\r\nconst NumberBlockComponent: FC<IProps> = ({ title, value, onChange, disabled, min, max }) => {\r\n    return (\r\n        <>\r\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n                {title}\r\n            </span>\r\n            <input\r\n                type=\"number\"\r\n                className=\"form-control form-control-sm\"\r\n                value={value || 0}\r\n                min={min}\r\n                max={max}\r\n                onChange={(e) => {\r\n                    let val = parseInt(e.target.value)\r\n                    onChange(isNaN(val) ? 0 : val)\r\n                }}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NumberBlockComponent;","import React, { FC } from 'react';\r\nimport { IOption } from '../model/blocks.model';\r\n\r\ninterface IProps {\r\n    title: string,\r\n    value: string,\r\n    onChange(value: string): void,\r\n    options: IOption[],\r\n    disabled?: boolean\r\n}\r\n\r\nconst SelectBlockComponent: FC<IProps> = ({ title, value, onChange, disabled, options }) => {\r\n    return (\r\n        <>\r\n            <span className=\"input-group-text\" >\r\n                {title}\r\n            </span>\r\n            <select\r\n                disabled={disabled}\r\n                value={value}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n            >\r\n                { options.map(\r\n                    (item) => \r\n                    <option key={item.value} value={item.value}>\r\n                        {item.title}\r\n                    </option>\r\n                )}\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectBlockComponent;","import React, { FC } from 'react';\r\nimport { IRow, BlockType, IBlock } from '../model/blocks.model';\r\nimport SelectFileListComponent from '../shared/selectFileList.component';\r\nimport CheckBoxBlockComponent from './checkboxBlock.component';\r\nimport ColorBlockComponent from './colorBlock.component';\r\nimport NumberBlockComponent from './numberBlock.component';\r\nimport SelectBlockComponent from './selectBlock.component';\r\n\r\ninterface IProps {\r\n    row: IRow\r\n}\r\nconst RowComponent: FC<IProps> = ({ row }) => {\r\n\r\n    function getBlock(block: IBlock, index: number) {\r\n        let result: any = '';\r\n        switch (block.type) {\r\n            case BlockType.Empty:\r\n                result = <span key={index} className=\"input-group-text\">{block.title}</span>\r\n                break;\r\n            case BlockType.SelectFile:\r\n                result =\r\n                    <SelectFileListComponent\r\n                        key={index} \r\n                        title={block.title}\r\n                        onChange={block.onChange}\r\n                        value={block.nvalue}\r\n                    />\r\n                break;\r\n            case BlockType.Number:\r\n                result =\r\n                    <NumberBlockComponent\r\n                        key={index} \r\n                        title={block.title}\r\n                        onChange={block.onChange}\r\n                        value={block.nvalue}\r\n                        disabled={block.disabled}\r\n                    />\r\n                break;\r\n            case BlockType.Checkbox:\r\n                result =\r\n                    <CheckBoxBlockComponent\r\n                        key={index} \r\n                        title={block.title}\r\n                        onChange={block.onChange}\r\n                        checked={block.checked}\r\n                        disabled={block.disabled}\r\n                    />\r\n                break;\r\n            case BlockType.Select:\r\n                result = \r\n                    <SelectBlockComponent\r\n                        key={index} \r\n                        title={block.title}\r\n                        onChange={block.onChange}\r\n                        value={block.svalue}\r\n                        disabled={block.disabled}\r\n                        options={block.selectOptions}\r\n                    />\r\n                break;\r\n            case BlockType.Color:\r\n                result =\r\n                    <ColorBlockComponent\r\n                        key={index} \r\n                        title={block.title}\r\n                        onChange={block.onChange}\r\n                        value={block.svalue}\r\n                    />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`input-group input-group-sm d-flex ${ row.showDelete ? 'justify-content-between' : ''}`}>\r\n                {row.blocks.map((block, index) =>\r\n                    getBlock(block, index))\r\n                }\r\n                { row.showDelete ?\r\n                    <button className=\"btn btn-outline-danger\" type=\"button\" onClick={row.onDelete} disabled={!row.onDelete}>Delete</button> : ''}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RowComponent;\r\n\r\n\r\n","import React, { FC } from 'react';\r\nimport { IRow } from '../model/blocks.model';\r\nimport RowComponent from './row.component';\r\n\r\ninterface IProps {\r\n    ar: IRow[]\r\n}\r\nconst BlocksArrayComponent: FC<IProps> = ({ar}) => {\r\n    return (\r\n        <>\r\n            { ar.map((row, index) => \r\n                 !row.disabled ?\r\n                    <RowComponent key={index} row={row} /> : ''  )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BlocksArrayComponent;","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow, OptionsAlignment } from \"../../model/blocks.model\";\r\nimport { Image, ImageCoord, MultilangImage } from \"../../model/json.model\";\r\nimport { AlignmentType, FollowType, LangCodeType } from \"../../model/types.model\";\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst ImageDigitComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  showNoData,\r\n  showDecimalPointer,\r\n  showDelimiter,\r\n  paddingZeroFix,\r\n  followDisabled,\r\n  onCopyFromNormal\r\n}) => {\r\n\r\n  const imageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImage), [digit])\r\n  const unitImageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImageUnit), [digit])\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Image', type: BlockType.SelectFile, nvalue: digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex, onChange: onChangeImageIndex },\r\n        { title: `Count: ${digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImagesCount}`, type: BlockType.Empty },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'X', type: BlockType.Number, nvalue: digit.json.Digit?.Image?.X ? digit.json.Digit.Image.X : 0, onChange: onChangeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: digit.json.Digit?.Image?.Y ? digit.json.Digit.Image.Y : 0, onChange: onChangeY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Unit', type: BlockType.SelectFile, nvalue: digit.json?.Digit?.Image?.MultilangImageUnit ? digit.json?.Digit?.Image?.MultilangImageUnit[unitImageSetIndex].ImageSet?.ImageIndex : null, onChange: onChangeUnit },\r\n      ]\r\n    },\r\n    {\r\n      disabled: !showNoData,\r\n      blocks: [\r\n        { title: 'No data', type: BlockType.SelectFile, nvalue: digit.json?.Digit?.Image?.NoDataImageIndex, onChange: onChangeNoData },\r\n      ]\r\n    },\r\n    {\r\n      disabled: !showDelimiter,\r\n      blocks: [\r\n        { title: 'Minus', type: BlockType.SelectFile, nvalue: digit.json?.Digit?.Image?.DelimiterImageIndex, onChange: onChangeDelimiter },\r\n      ]\r\n    },\r\n    {\r\n      disabled: !showDecimalPointer,\r\n      blocks: [\r\n        { title: 'Decimal pointer', type: BlockType.SelectFile, nvalue: digit.json?.Digit?.Image?.DecimalPointImageIndex, onChange: onChangeDecimalPointer },\r\n      ]\r\n    },\r\n    {\r\n      disabled: digit.json.Digit.DisplayFormAnalog,\r\n      blocks: [\r\n        { title: 'padding zero', type: BlockType.Checkbox, checked: digit.json?.Digit?.PaddingZero || paddingZeroFix, onChange: onChangePaddingZero, disabled: paddingZeroFix },\r\n        { title: 'spacing', type: BlockType.Number, nvalue: digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0, onChange: onChangeSpacing },\r\n      ]\r\n    },\r\n    {\r\n      disabled: digit.json.Digit.DisplayFormAnalog,\r\n      blocks: [\r\n        { title: 'follow', type: BlockType.Checkbox, checked: digit.json?.CombingMode !== FollowType.Single.json, onChange: onChangeFollow, disabled: followDisabled },\r\n        { title: 'alignment', type: BlockType.Select, svalue: AlignmentType.fromJson(digit.json?.Digit?.Alignment).toString(), selectOptions: OptionsAlignment,  onChange: onChangeAlignment },\r\n      ]\r\n    },\r\n    {\r\n      disabled: digit.json.Digit.DisplayFormAnalog,\r\n      blocks: [\r\n        { title: 'Separator', type: BlockType.SelectFile, nvalue: digit.json?.Separator?.ImageIndex, onChange: onChangeSeparator },\r\n        { title: 'X', type: BlockType.Number, nvalue: digit.json.Separator?.Coordinates?.X ? digit.json.Separator.Coordinates.X : 0, onChange: onChangeSeparatorX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: digit.json.Separator?.Coordinates?.Y ? digit.json.Separator.Coordinates.Y : 0, onChange: onChangeSeparatorY },\r\n      ]\r\n    },\r\n  ], [digit]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }\r\n\r\n  function onChangeImageIndex(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImage) {\r\n      d.json.Digit.Image.MultilangImage = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImage[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImage.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImage[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImagesCount = d.con.count;\r\n    } else {\r\n      if (index) {\r\n        d.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex = index;\r\n      } else {\r\n        d.json.Digit.Image.MultilangImage = null;\r\n      }\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnit(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImageUnit) {\r\n      d.json.Digit.Image.MultilangImageUnit = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImageUnit[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImageUnit.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImagesCount = 1;\r\n    } else {\r\n      if (index) {\r\n        d.json.Digit.Image.MultilangImageUnit[imageSetIndex].ImageSet.ImageIndex = index;\r\n      } else {\r\n        d.json.Digit.Image.MultilangImageUnit = null\r\n      }\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeX(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.X = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.Y = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(checked: boolean) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = checked;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(val: string) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(val));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(checked: boolean) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = checked ? FollowType.Follow.json : FollowType.Single.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeNoData(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.NoDataImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDelimiter(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DelimiterImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDecimalPointer(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DecimalPointImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator(index: number) {\r\n    const d = {...digit};\r\n    if (!index) d.json.Separator = null\r\n    else {\r\n      if ( !d.json.Separator) d.json.Separator = new ImageCoord()\r\n      d.json.Separator.ImageIndex = index;\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorX(val: number) {\r\n    const d = {...digit};\r\n    if ( !d.json.Separator) d.json.Separator = new ImageCoord()\r\n    d.json.Separator.Coordinates.X = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorY(val: number) {\r\n    const d = {...digit};\r\n    if ( !d.json.Separator) d.json.Separator = new ImageCoord()\r\n    d.json.Separator.Coordinates.Y = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledImage}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledImage = !d.enabledImage;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont || d.enabledSystemFontCircle\r\n                if ( !d.json.Digit.Image) {\r\n                  d.json.Digit.Image = new Image()\r\n                  let digitimage = new MultilangImage()\r\n                  digitimage.ImageSet.ImagesCount = d.con.count\r\n                  d.json.Digit.DisplayFormAnalog = d.con.displayAnalog\r\n                  d.json.Digit.Image.MultilangImage[0] = digitimage\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledImage ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageDigitComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow, OptionsUnitSystemFont } from \"../../model/blocks.model\";\r\nimport { Coordinates, ImageCoord, SystemFont } from \"../../model/json.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'X', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Coordinates?.X ? digit.json.Digit.SystemFont.Coordinates.X : 0, onChange: onChangeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Coordinates?.Y ? digit.json.Digit.SystemFont.Coordinates.Y : 0, onChange: onChangeY },\r\n        { title: 'Color', type: BlockType.Color, svalue: digit.json.Digit?.SystemFont?.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color) : Color.DEFAULT_COLOR, onChange: onChangeColor },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Size', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0, onChange: onChangeSize },\r\n        { title: 'Angle', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0, onChange: onChangeAngle },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'padding zero', type: BlockType.Checkbox, checked: digit.json?.Digit?.PaddingZero || paddingZeroFix, onChange: onChangePaddingZero, disabled: paddingZeroFix },\r\n        { title: 'follow', type: BlockType.Checkbox, checked: digit.json?.CombingMode !== FollowType.Single.json, onChange: onChangeFollow, disabled: followDisabled },\r\n        { title: 'spacing', type: BlockType.Number, nvalue: digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0, onChange: onChangeSpacing },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Unit', type: BlockType.Select, svalue: digit.json?.Digit?.SystemFont?.ShowUnitCheck ? digit.json?.Digit?.SystemFont.ShowUnitCheck?.toString() : '0', onChange: onChangeUnitCheck, selectOptions: OptionsUnitSystemFont },\r\n        { title: 'Separator', type: BlockType.Checkbox, checked: digit.json?.Separator ? true : false, onChange: onChangeSeparator },\r\n      ]\r\n    }\r\n  ], [digit])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeColor(color: string) {\r\n      const d = { ...digit };\r\n      d.json.Digit.SystemFont.Color = Color.colorWrite(color);\r\n      onUpdate(d);\r\n  }\r\n\r\n  function onChangeX(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.X = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.Y = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(val: boolean) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = val;\r\n    onUpdate(d);\r\n  }\r\n  function onChangeFollow(checked: boolean) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = checked ? FollowType.Follow.json : FollowType.Single.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(val: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(val: string) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(val);\r\n    onUpdate(d);\r\n  }\r\n \r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFont}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFont = !d.enabledSystemFont;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont || d.enabledSystemFontCircle\r\n                if ( !d.json.Digit.SystemFont) {\r\n                  d.json.Digit.SystemFont = new SystemFont()\r\n                  d.json.Digit.SystemFont.Coordinates = new Coordinates()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFont ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow, OptionsSystemFontDirection, OptionsUnitSystemFont } from \"../../model/blocks.model\";\r\nimport { FontRotate, ImageCoord, SystemFont } from \"../../model/json.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontCircleComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'X', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.FontRotate?.X ? digit.json.Digit.SystemFont.FontRotate.X : 0, onChange: onChangeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.FontRotate?.Y ? digit.json.Digit.SystemFont.FontRotate.Y : 0, onChange: onChangeY },\r\n        { title: 'Color', type: BlockType.Color, svalue: digit.json.Digit?.SystemFont?.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color) : Color.DEFAULT_COLOR, onChange: onChangeColor },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Size', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0, onChange: onChangeSize },\r\n        { title: 'Radius', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.FontRotate?.Radius ? digit.json.Digit.SystemFont.FontRotate.Radius : 0, onChange: onChangeRadius },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Angle', type: BlockType.Number, nvalue: digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0, onChange: onChangeAngle },\r\n        { title: 'Direction', type: BlockType.Select, svalue: digit.json?.Digit?.SystemFont?.FontRotate?.RotateDirection ? digit.json.Digit.SystemFont.FontRotate.RotateDirection.toString() : '0', onChange: onChangeDirection, selectOptions: OptionsSystemFontDirection },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'padding zero', type: BlockType.Checkbox, checked: digit.json?.Digit?.PaddingZero || paddingZeroFix, onChange: onChangePaddingZero, disabled: paddingZeroFix },\r\n        { title: 'follow', type: BlockType.Checkbox, checked: digit.json?.CombingMode !== FollowType.Single.json, onChange: onChangeFollow, disabled: followDisabled },\r\n        { title: 'spacing', type: BlockType.Number, nvalue: digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0, onChange: onChangeSpacing },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Unit', type: BlockType.Select, svalue: digit.json?.Digit?.SystemFont?.ShowUnitCheck ? digit.json?.Digit?.SystemFont.ShowUnitCheck?.toString() : '-1', onChange: onChangeUnitCheck, selectOptions: OptionsUnitSystemFont },\r\n        { title: 'Separator', type: BlockType.Checkbox, checked: digit.json?.Separator ? true : false, onChange: onChangeSeparator },\r\n      ]\r\n    }\r\n  ], [digit])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeX(value: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.X = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(value: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Y = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeColor(color: string) {\r\n    const d = { ...digit };\r\n    d.json.Digit.SystemFont.Color = Color.colorWrite(color);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(checked: boolean) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = checked;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(checked: boolean) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = checked ? FollowType.Follow.json : FollowType.Single.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(value: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(value: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeRadius(value) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Radius = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(value) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = value;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(value: string) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(value);\r\n    onUpdate(d);\r\n  }\r\n \r\n  function onChangeDirection(value: string) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.RotateDirection = parseInt(value);\r\n    onUpdate(d);\r\n  }\r\n \r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFontCircle}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFontCircle = !d.enabledSystemFontCircle;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont || d.enabledSystemFontCircle\r\n                if ( !d.json.Digit.SystemFont) d.json.Digit.SystemFont = new SystemFont()\r\n                if ( !d.json.Digit.SystemFont.FontRotate) {\r\n                  d.json.Digit.SystemFont.FontRotate = new FontRotate()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFontCircle ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontCircleComponent;\r\n","import React, { FC } from 'react';\r\nimport { WatchCommonDigit } from '../../model/watchFace.model';\r\nimport ImageDigitComponent from './imageDigit.component';\r\nimport SystemFontComponent from './systemFont.component';\r\nimport SystemFontCircleComponent from './systemFontCircle.component';\r\n\r\ninterface IProps {\r\n    digit: WatchCommonDigit;\r\n    title: string;\r\n    onUpdate(digit: WatchCommonDigit): void;\r\n    showDecimalPointer: boolean;\r\n    showDelimiter: boolean;\r\n    showNoData: boolean;\r\n    paddingZeroFix: boolean;\r\n  }\r\n\r\nconst ActivityDigitComponent: FC<IProps> = ({\r\n    digit,\r\n    title,\r\n    onUpdate,\r\n    showDecimalPointer,\r\n    showDelimiter,\r\n    showNoData,\r\n    paddingZeroFix,\r\n  }) => {\r\n\r\n    return (\r\n        <div>\r\n            <ImageDigitComponent\r\n            title={`Numerical (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            showDecimalPointer={showDecimalPointer}\r\n            showDelimiter={showDelimiter}\r\n            showNoData={showNoData}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n\r\n          <SystemFontComponent\r\n            title={`Systemfont Rotated (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title={`Systemfont Circle (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityDigitComponent","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\nimport { ClockHand, Coordinates, ImageCoord, MultilangImage, MultilangImageCoord } from \"../../model/json.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\nimport { WatchClockHand } from \"../../model/watchFace.model\";\r\n\r\ninterface IProps {\r\n  title: string,\r\n  clockHand: WatchClockHand;\r\n  onUpdate(clockHand: WatchClockHand): void;\r\n  showAngle: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst ClockHandComponent: FC<IProps> = ({ title, clockHand, onUpdate, showAngle, onCopyFromNormal }) => {\r\n\r\n  const scaleImageSetIndex = useMemo<number>(() => findImageIndex(clockHand.json?.Scale?.ImageSet), [clockHand])\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Pointer', type: BlockType.SelectFile, nvalue: clockHand.json?.Pointer?.ImageIndex, onChange: changePointerImageIndex },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Center of rotation', type: BlockType.Empty },\r\n        { title: 'X', type: BlockType.Number, nvalue: clockHand.json?.X ? clockHand.json.X : 0, onChange: changeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: clockHand.json?.Y ? clockHand.json.Y : 0, onChange: changeY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Pointer offset', type: BlockType.Empty },\r\n        { title: 'X', type: BlockType.Number, nvalue: clockHand.json?.Pointer?.Coordinates?.X ? clockHand.json.Pointer.Coordinates.X : 0, onChange: changePointerX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: clockHand.json?.Pointer?.Coordinates?.Y ? clockHand.json.Pointer.Coordinates.Y : 0, onChange: changePointerY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Cover', type: BlockType.SelectFile, nvalue: clockHand.json?.Cover?.ImageIndex, onChange: changeCoverImageIndex },\r\n        { title: 'X', type: BlockType.Number, nvalue: clockHand.json?.Cover?.Coordinates?.X ? clockHand.json?.Cover?.Coordinates?.X : 0, onChange: changeCoverX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: clockHand.json?.Cover?.Coordinates?.Y ? clockHand.json?.Cover?.Coordinates?.Y : 0, onChange: changeCoverY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Scale', type: BlockType.SelectFile, nvalue: clockHand.json?.Scale?.ImageSet[scaleImageSetIndex]?.ImageSet?.ImageIndex, onChange: changeScaleImageIndex },\r\n        { title: 'X', type: BlockType.Number, nvalue: clockHand.json?.Scale?.Coordinates?.X ? clockHand.json?.Scale?.Coordinates?.X : 0, onChange: changeScaleX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: clockHand.json?.Scale?.Coordinates?.Y ? clockHand.json?.Scale?.Coordinates?.Y : 0, onChange: changeScaleY },\r\n      ]\r\n    },\r\n    {\r\n      disabled: !showAngle,\r\n      blocks: [\r\n        { title: 'Start angle', type: BlockType.Number, nvalue: clockHand.json?.StartAngle, onChange: changeStartAngle },\r\n        { title: 'End angle', type: BlockType.Number, nvalue: clockHand.json?.EndAngle, onChange: changeEndAngle },\r\n      ]\r\n    },\r\n  ], [clockHand]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }\r\n\r\n  function toggleClockHand(e) {\r\n    const ch = { ...clockHand };\r\n    ch.enabled = !ch.enabled;\r\n    if (ch.enabled && !ch.json) { ch.json = new ClockHand(); ch.json.StartAngle = 0; ch.json.EndAngle = 360; }\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeEndAngle(val: number) {\r\n    const ch = {...clockHand};\r\n    ch.json.EndAngle = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeStartAngle(val: number) {\r\n    const ch = {...clockHand};\r\n    ch.json.StartAngle = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changePointerImageIndex(i: number) {\r\n    let ch = {...clockHand};\r\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\r\n    ch.json.Pointer.ImageIndex = i;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeX(val: number) {\r\n    const ch = {...clockHand};\r\n    ch.json.X = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeY(val: number) {\r\n    const ch = {...clockHand};\r\n    ch.json.Y = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changePointerX(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\r\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\r\n    ch.json.Pointer.Coordinates.X = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changePointerY(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\r\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\r\n    ch.json.Pointer.Coordinates.Y = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeCoverImageIndex(i: number) {\r\n    let ch = {...clockHand};\r\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\r\n    ch.json.Cover.ImageIndex = i;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeCoverX(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\r\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\r\n    ch.json.Cover.Coordinates.X = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeCoverY(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\r\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\r\n    ch.json.Cover.Coordinates.Y = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeScaleImageIndex(i: number) {\r\n    let ch = {...clockHand};\r\n    if (!ch.json.Scale) {\r\n      ch.json.Scale = new MultilangImageCoord()\r\n      ch.json.Scale.ImageSet[0].ImageSet.ImageIndex = i;\r\n    } else {\r\n      ch.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex = i;\r\n    }\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeScaleX(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord()\r\n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\r\n    ch.json.Scale.Coordinates.X = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  function changeScaleY(val: number) {\r\n    const ch = {...clockHand};\r\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord()\r\n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\r\n    ch.json.Scale.Coordinates.Y = val;\r\n    onUpdate(ch);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={clockHand.enabled}\r\n              onChange={toggleClockHand}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {clockHand.enabled ? (\r\n        <Card.Body>\r\n          {!onCopyFromNormal ? '' : <div style={{ clear: 'both' }}><button className='btn btn-sm btn-secondary mb-1' style={{ float: 'right' }} onClick={onCopyFromNormal}>Copy from normal screen</button></div>}\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default ClockHandComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\nimport { WatchImageCoords } from \"../../model/watchFace.model\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  imageCoords: WatchImageCoords;\r\n  onUpdate(imageCoords: WatchImageCoords): void;\r\n}\r\n\r\nconst ImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Image', type: BlockType.SelectFile, nvalue: imageCoords.json.ImageIndex, onChange: onChangeImageIndex },\r\n        { title: 'X', type: BlockType.Number, nvalue: imageCoords.json.Coordinates.X, onChange: onChangeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: imageCoords.json.Coordinates.Y, onChange: onChangeY },\r\n      ]\r\n    }\r\n  ], [imageCoords]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeImageIndex(index: number) {\r\n    const ip = { ...imageCoords };\r\n    ip.json.ImageIndex = index;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function onChangeX(val: number) {\r\n    const ip = { ...imageCoords };\r\n    ip.json.Coordinates.X = val;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function onChangeY(val: number) {\r\n    const ip = { ...imageCoords };\r\n    ip.json.Coordinates.Y = val;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={imageCoords.enabled}\r\n              onChange={() => {\r\n                const ic: WatchImageCoords = { ...imageCoords };\r\n                ic.enabled = !ic.enabled;\r\n                onUpdate(ic);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {imageCoords.enabled ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageCoordsComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { WatchImageProgress } from \"../../model/watchFace.model\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { Coordinates } from \"../../model/json.model\";\r\nimport { ImageProgressDisplayType } from \"../../model/types.model\";\r\n\r\ninterface IProps {\r\n  imageProgress: WatchImageProgress;\r\n  onUpdate(imageProgress: WatchImageProgress): void;\r\n}\r\n\r\nconst ImageProgressComponent: FC<IProps> = ({ imageProgress, onUpdate }) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Image', type: BlockType.SelectFile, nvalue: imageProgress.json?.ImageSet?.ImageIndex, onChange: changeImageIndex },\r\n        { title: 'Count', type: BlockType.Number, nvalue: imageProgress.json?.ImageSet?.ImagesCount, onChange: changeCount },\r\n        { title: 'Display type', type: BlockType.Checkbox, checked: imageProgress.json?.DisplayType !== ImageProgressDisplayType.Continuous.json, onChange: onChangeDisplayType },\r\n        { title: imageProgress.json?.DisplayType === ImageProgressDisplayType.Continuous.json ? 'continuous' : 'singe', type: BlockType.Empty}\r\n      ]\r\n    },\r\n    ], [imageProgress]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function toggle() {\r\n    const ip = { ...imageProgress };\r\n    ip.enabled = !ip.enabled;\r\n    if (ip.enabled) {\r\n      if (!ip.json.Coordinates || ip.json.Coordinates.length === 0) ip.json.Coordinates = [new Coordinates()]\r\n    } \r\n    onUpdate(ip);\r\n  }\r\n\r\n  function onChangeDisplayType(ch: boolean) {\r\n    let ip = { ...imageProgress };\r\n    ip.json.DisplayType = ch ? ImageProgressDisplayType.Single.json : ImageProgressDisplayType.Continuous.json;\r\n    onUpdate(ip);\r\n  }\r\n  function changeImageIndex(i: number) {\r\n    let ip = { ...imageProgress };\r\n    ip.json.ImageSet.ImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeCount(val: number) {\r\n    const d = { ...imageProgress };\r\n    d.json.ImageSet.ImagesCount = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeX(val: number, index: number) {\r\n    const d = {...imageProgress};\r\n    d.json.Coordinates[index].X = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeY(val: number, index: number) {\r\n    const d = {...imageProgress};\r\n    d.json.Coordinates[index].Y = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function addCoordinates() {\r\n    const d = {...imageProgress};\r\n    let coords = new Coordinates();\r\n    coords.X = d.json.Coordinates.length > 0 ? d.json.Coordinates[d.json.Coordinates.length-1].X : 0\r\n    coords.Y = d.json.Coordinates.length > 0 ? d.json.Coordinates[d.json.Coordinates.length-1].Y : 0\r\n    d.json.Coordinates.push(coords)\r\n    onUpdate(d)\r\n  }\r\n\r\n  function onDelete(index: number) {\r\n    const d = {...imageProgress};\r\n    d.json.Coordinates.splice(index, 1)\r\n    onUpdate(d)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">Image Progress</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={imageProgress.enabled}\r\n              onChange={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {imageProgress.enabled ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n          <Card className=\"mt-1\">\r\n            <Card.Header\r\n              className=\"input-group input-group-sm d-flex justify-content-between\">\r\n            <span>Coordinates</span>\r\n            <button className=\"btn btn-outline-success\" type=\"button\" title=\"add coordinates\" onClick={addCoordinates}>Add</button>\r\n            </Card.Header>\r\n          <BlocksArrayComponent ar={ \r\n            imageProgress.json.Coordinates.map((coords, index) => \r\n            ({\r\n              blocks: [\r\n                { title: `${index}`, type: BlockType.Empty },\r\n                { title: 'X', type: BlockType.Number, nvalue: coords.X ? coords.X : 0, onChange: (e) => changeX(e, index) },\r\n                { title: 'Y', type: BlockType.Number, nvalue: coords.Y ? coords.Y : 0, onChange: (e) => changeY(e, index) },\r\n              ],\r\n              onDelete: index > 0 ? () => onDelete(index) : null,\r\n              showDelete: true\r\n            }))\r\n          }\r\n          />\r\n          </Card> \r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageProgressComponent;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow, OptionsLineEndingCircle } from \"../../model/blocks.model\";\r\nimport { AngleSettings, ProgressBar } from \"../../model/json.model\";\r\nimport { WatchProgressBar } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\n\r\ninterface IProps {\r\n  progressBar: WatchProgressBar;\r\n  onUpdate(progressBar: WatchProgressBar): void;\r\n}\r\n\r\nconst ProgressbarCircleCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Center', type: BlockType.Empty },\r\n        { title: 'X', type: BlockType.Number, nvalue: progressBar.jsonObj?.AngleSettings?.X ? progressBar.jsonObj.AngleSettings.X : 0, onChange: changeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: progressBar.jsonObj?.AngleSettings?.Y ? progressBar.jsonObj.AngleSettings.Y : 0, onChange: changeY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Radius', type: BlockType.Number, nvalue: progressBar.jsonObj?.AngleSettings?.Radius ? progressBar.jsonObj.AngleSettings.Radius : 0, onChange: changeRadius },\r\n        { title: 'Width', type: BlockType.Number, nvalue: progressBar.jsonObj?.Width ? progressBar.jsonObj.Width : 0, onChange: changeWidth, min: 0, max: 100 },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Start angle', type: BlockType.Number, nvalue: progressBar.jsonObj?.AngleSettings?.StartAngle ? progressBar.jsonObj.AngleSettings.StartAngle : 0, onChange: changeStartAngle },\r\n        { title: 'End angle', type: BlockType.Number, nvalue: progressBar.jsonObj?.AngleSettings?.EndAngle ? progressBar.jsonObj.AngleSettings.EndAngle : 0, onChange: changeEndAngle },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Foreground', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.ForegroundImageIndex, onChange: changeForegroundImageIndex },\r\n        { title: 'Color', type: BlockType.Color, svalue: Color.colorRead(progressBar.jsonObj?.Color), onChange: changeColor },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Line ending', type: BlockType.Select, svalue: progressBar.jsonObj?.Flatness ? progressBar.jsonObj.Flatness.toString() : '0', onChange: changeLineEnding, selectOptions: OptionsLineEndingCircle },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Pointer', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.PointerImageIndex, onChange: changePointerImageIndex },\r\n        { title: 'Background image', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.BackgroundImageIndex, onChange: changeBackgroundImageIndex },\r\n      ]\r\n    },\r\n   ], [progressBar]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function changeLineEnding(val: string) {\r\n    const pBar = { ...progressBar };\r\n    pBar.jsonObj.Flatness = parseInt(val)\r\n    onUpdate(pBar);\r\n  }\r\n\r\n  function toggle() {\r\n    const pb = { ...progressBar };\r\n    pb.enabledCircle = !pb.enabledCircle;\r\n    if (!pb.jsonObj)\r\n      pb.jsonObj = new ProgressBar();\r\n    if (!pb.jsonObj.AngleSettings)\r\n      pb.jsonObj.AngleSettings = new AngleSettings();\r\n    onUpdate(pb);\r\n  }\r\n\r\n  function changeX(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.AngleSettings.X = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeY(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.AngleSettings.Y = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeRadius(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.AngleSettings.Radius = Math.abs(val);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeWidth(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.Width = Math.max(0, Math.min(val, 100));\r\n    onUpdate(d)\r\n  }\r\n\r\n  function changeStartAngle(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.AngleSettings.StartAngle = val;\r\n    onUpdate(d)\r\n  }\r\n\r\n  function changeEndAngle(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.AngleSettings.EndAngle = val;\r\n    onUpdate(d)\r\n  }\r\n\r\n  function changeForegroundImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.ForegroundImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeColor(color: string) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.Color = Color.colorWrite(color);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changePointerImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.PointerImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeBackgroundImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.BackgroundImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">Progress circle</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={progressBar.enabledCircle}\r\n              onChange={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {progressBar.enabledCircle ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProgressbarCircleCodmponent;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Color from \"../../shared/color\";\r\nimport { LinearSettings, ProgressBar } from \"../../model/json.model\";\r\nimport { WatchProgressBar } from \"../../model/watchFace.model\";\r\nimport { BlockType, IRow, OptionsLineEndingLine } from \"../../model/blocks.model\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\n\r\ninterface IProps {\r\n  progressBar: WatchProgressBar;\r\n  onUpdate(progressBar: WatchProgressBar): void;\r\n}\r\n\r\nconst ProgressbarLinearCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'X', type: BlockType.Number, nvalue: progressBar.jsonObj?.LinearSettings?.StartX ? progressBar.jsonObj.LinearSettings.StartX : 0, onChange: changeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: progressBar.jsonObj?.LinearSettings?.StartY ? progressBar.jsonObj.LinearSettings.StartY : 0, onChange: changeY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Length', type: BlockType.Number, nvalue: progressBar.jsonObj?.LinearSettings?.EndX ? (progressBar.jsonObj.LinearSettings.EndX - progressBar.jsonObj.LinearSettings.StartX) : 0, onChange: changeLength },\r\n        { title: 'Width', type: BlockType.Number, nvalue: progressBar.jsonObj?.Width ? progressBar.jsonObj.Width : 0, onChange: changeWidth, min: 0 },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Foreground', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.ForegroundImageIndex, onChange: changeForegroundImageIndex },\r\n        { title: 'Color', type: BlockType.Color, svalue: progressBar.jsonObj?.Color ? Color.colorRead(progressBar.jsonObj.Color) : Color.DEFAULT_COLOR, onChange: changeColor },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Line ending', type: BlockType.Select, svalue: progressBar.jsonObj?.Flatness ? progressBar.jsonObj.Flatness.toString() : '0', onChange: changeLineEnding, selectOptions: OptionsLineEndingLine },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Pointer', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.PointerImageIndex, onChange: changePointerImageIndex },\r\n        { title: 'Background image', type: BlockType.SelectFile, nvalue: progressBar.jsonObj?.BackgroundImageIndex, onChange: changeBackgroundImageIndex },\r\n      ]\r\n    },\r\n   ], [progressBar]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  \r\n   function toggle() {\r\n    const pb = { ...progressBar };\r\n    pb.enabledLinear = !pb.enabledLinear;\r\n    if (!pb.jsonObj)\r\n      pb.jsonObj = new ProgressBar();\r\n    if (!pb.jsonObj.LinearSettings)\r\n      pb.jsonObj.LinearSettings = new LinearSettings();\r\n    onUpdate(pb);\r\n  }\r\n\r\n  function changeX(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.LinearSettings.StartX = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeY(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.LinearSettings.StartY = val;\r\n    d.jsonObj.LinearSettings.EndY = val;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeLength(val: number) {\r\n    const d = { ...progressBar };\r\n    let start = d.jsonObj?.LinearSettings?.StartX ? d.jsonObj.LinearSettings.StartX : 0\r\n    d.jsonObj.LinearSettings.EndX = start + Math.abs(val);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changeWidth(val: number) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.Width = Math.max(0, val);\r\n    onUpdate(d)\r\n  }\r\n\r\n  function changeForegroundImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.ForegroundImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeColor(color: string) {\r\n    const d = { ...progressBar };\r\n    d.jsonObj.Color = Color.colorWrite(color);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function changePointerImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.PointerImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeBackgroundImageIndex(i: number) {\r\n    const ip = { ...progressBar };\r\n    ip.jsonObj.BackgroundImageIndex = i;\r\n    onUpdate(ip);\r\n  }\r\n\r\n\r\n  function changeLineEnding(val: string) {\r\n    const pBar = { ...progressBar };\r\n    const value = parseInt(val);\r\n    if (!isNaN(value)) pBar.jsonObj.Flatness = value;\r\n    else pBar.jsonObj.Flatness = 0;\r\n    onUpdate(pBar);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">Progress linear</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={progressBar.enabledLinear}\r\n              onChange={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {progressBar.enabledLinear ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProgressbarLinearCodmponent;\r\n","import { FC } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { ActivityType } from \"../../model/types.model\";\r\nimport { WatchActivity, WatchCommonDigit } from \"../../model/watchFace.model\";\r\nimport ActivityDigitComponent from \"./activityDigit.component\";\r\nimport ClockHandComponent from \"./clockHand.component\";\r\nimport ImageCoordsComponent from \"./imageCoords.component\";\r\nimport ImageProgressComponent from \"./imageProgress.component\";\r\nimport ProgressbarCircleCodmponent from \"./progressbarCircle.component\";\r\nimport ProgressbarLinearCodmponent from \"./progressbarLinear.component\";\r\n\r\n\r\ninterface IProps {\r\n  activity: WatchActivity;\r\n  title: string;\r\n  onUpdateActivity(activity: WatchActivity): void;\r\n  onDelete(e): void;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  showNoData?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  showProgress?: boolean;\r\n  onCopy?(): void;\r\n  titleDefault?: string;\r\n  titleMin?: string;\r\n  titleMax?: string;\r\n}\r\n\r\nconst ActivityComponent: FC<IProps> = ({\r\n  activity,\r\n  title,\r\n  onUpdateActivity,\r\n  showDecimalPointer,\r\n  showDelimiter,\r\n  showNoData,\r\n  paddingZeroFix,\r\n  showProgress,\r\n  onCopy,\r\n  onDelete,\r\n  titleDefault,\r\n  titleMin,\r\n  titleMax,\r\n}) => {\r\n\r\n  function onUpdateDigit(d: WatchCommonDigit) {\r\n    let a = { ...activity }\r\n    a.digit = d\r\n    activity.digit = d\r\n    onUpdateActivity(a)\r\n  }\r\n\r\n  function onUpdateDigitMin(d: WatchCommonDigit) {\r\n    let a = { ...activity }\r\n    a.digitMin = d\r\n    activity.digitMin = d\r\n    onUpdateActivity(a)\r\n  }\r\n\r\n  function onUpdateDigitMax(d: WatchCommonDigit) {\r\n    let a = { ...activity }\r\n    a.digitMax = d\r\n    activity.digitMax = d\r\n    onUpdateActivity(a)\r\n  }\r\n\r\n  return (\r\n    <Card className=\"activity w-100\">\r\n      <Card.Header\r\n        className=\"d-flex justify-content-between align-items-center\"\r\n        onClick={() => {\r\n          let a = { ...activity };\r\n          a.collapsed = !a.collapsed;\r\n          onUpdateActivity(a);\r\n        }}>\r\n        <span className=\"input-group-text\">{title}</span>\r\n        <button className=\"btn btn-outline-danger\" type=\"button\" onClick={(e) => { e.stopPropagation(); onDelete(e); }}>Delete</button>\r\n      </Card.Header>\r\n      {!activity.collapsed ? (\r\n        <Card.Body>\r\n          {!onCopy ? '' : <button className='btn btn-outline-secondary btn-sm' onClick={onCopy}>Copy from normal screen</button>}\r\n\r\n          {activity.type === ActivityType.Weather ?\r\n            <div className=\"alert alert-info\" role=\"alert\">\r\n              In order to center the temperature correctly under the weather Icon \r\n              (only if weather icon as ImageProgress is enabled), weather icon should \r\n              be defined in separated activity and placed before \r\n              activity with temperature.\r\n            </div> : ''}\r\n          <ActivityDigitComponent\r\n            digit={{...activity.digit}}\r\n            title={titleDefault ? titleDefault : title}\r\n            onUpdate={onUpdateDigit}\r\n            showDecimalPointer={showDecimalPointer}\r\n            showDelimiter={showDelimiter}\r\n            showNoData={showNoData}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n\r\n          {titleMin ?\r\n            <ActivityDigitComponent\r\n              digit={{...activity.digitMin}}\r\n              title={titleMin}\r\n              onUpdate={onUpdateDigitMin}\r\n              showDecimalPointer={showDecimalPointer}\r\n              showDelimiter={showDelimiter}\r\n              showNoData={showNoData}\r\n              paddingZeroFix={paddingZeroFix}\r\n            /> : ''}\r\n\r\n          {titleMax ?\r\n            <ActivityDigitComponent\r\n              digit={{...activity.digitMax}}\r\n              title={titleMax}\r\n              onUpdate={onUpdateDigitMax}\r\n              showDecimalPointer={showDecimalPointer}\r\n              showDelimiter={showDelimiter}\r\n              showNoData={showNoData}\r\n              paddingZeroFix={paddingZeroFix}\r\n            /> : ''}\r\n\r\n          {showProgress === undefined || showProgress === true ?\r\n            <>\r\n              <ImageProgressComponent\r\n                imageProgress={{...activity.imageProgress}}\r\n                onUpdate={(d) => {\r\n                  const a = { ...activity };\r\n                  a.imageProgress = {...d};\r\n                  onUpdateActivity(a);\r\n                }}\r\n              />\r\n              <ProgressbarCircleCodmponent\r\n                progressBar={{...activity.progressBar}}\r\n                onUpdate={(d) => {\r\n                  const a = { ...activity };\r\n                  a.progressBar = {...d};\r\n                  onUpdateActivity(a);\r\n                }}\r\n              />\r\n              <ProgressbarLinearCodmponent\r\n                progressBar={{...activity.progressBar}}\r\n                onUpdate={(d) => {\r\n                  const a = { ...activity };\r\n                  a.progressBar = {...d};\r\n                  onUpdateActivity(a);\r\n                }}\r\n              />\r\n              <ClockHandComponent\r\n                title=\"Pointer Progress\"\r\n                clockHand={{...activity.pointerProgress}}\r\n                onUpdate={(ch) => {\r\n                  const a = { ...activity };\r\n                  a.pointerProgress = {...ch};\r\n                  onUpdateActivity(a);\r\n                }}\r\n                showAngle={true}\r\n              />\r\n            </> : \"\"}\r\n          {activity.icon ? (\r\n            <ImageCoordsComponent\r\n              title=\"Icon\"\r\n              imageCoords={{...activity.icon}}\r\n              onUpdate={(ip) => {\r\n                const a = { ...activity };\r\n                a.icon = {...ip};\r\n                onUpdateActivity(a);\r\n              }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActivityComponent;\r\n","import { FC, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { ActivityType, JsonType } from \"../../model/types.model\";\r\nimport { getActivityFromJson, WatchActivity } from \"../../model/watchFace.model\";\r\nimport DnDListComponent, { IDNDItem } from \"../../shared/draganddroplist.component\";\r\nimport ActivityComponent from \"./activity.component\";\r\n\r\n\r\ninterface IProps {\r\n  activitys: WatchActivity[];\r\n  onUpdate(activitys: WatchActivity[]): void;\r\n  collapsed: boolean;\r\n  setCollapsed(collapsed: boolean): void\r\n}\r\n\r\nconst ActivityListComponent: FC<IProps> = ({\r\n  activitys, onUpdate, collapsed, setCollapsed}) => {\r\n\r\n  const [activityToAdd, setActivityToAdd] = useState<number>(ActivityType.Battery.index);\r\n\r\n  function updateOrder(list: IDNDItem<WatchActivity>[]) {\r\n    let al = list.map((value) => value.item)\r\n    onUpdate(al)\r\n  }\r\n\r\n  function updateActivity(i: number, a: WatchActivity) {\r\n    let al = [...activitys].map((item, index) => index === i ? a : item);\r\n    onUpdate(al)\r\n  }\r\n\r\n  function addActivity(e) {\r\n    e.stopPropagation()\r\n    if (activityToAdd) {\r\n      let _a = getActivityFromJson(null, ActivityType.findByIndex(activityToAdd) )\r\n      if (_a) {\r\n        let al = [...activitys, _a]\r\n        onUpdate(al)\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteActivity(e, index: number) {\r\n    e.stopPropagation()\r\n    if ( window.confirm(`would you delete this \"${activitys[index].digit.con.title}\" activity?`)) {\r\n      let al = [...activitys]\r\n      al.splice(index, 1)\r\n      onUpdate(al)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\r\n        title='Click to open / close'\r\n        onClick={() => {\r\n          setCollapsed(!collapsed)\r\n        }}\r\n      >\r\n        Activity [{activitys?.length}]\r\n        <span className=\"d-flex flex-nowrap\">\r\n          <select className=\"form-select\" \r\n            onChange={(e) => setActivityToAdd(parseInt(e.target.value))}\r\n            onClick={(e) => e.stopPropagation()}\r\n            value={activityToAdd}\r\n            >\r\n              {\r\n                Object.keys(ActivityType).map((key) => \r\n                  ActivityType[key] instanceof JsonType ?\r\n                    <option key={ActivityType[key].index} value={ActivityType[key].index}>{ActivityType[key].json}</option>\r\n                    : ''\r\n                )\r\n              }\r\n          </select>\r\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addActivity}>Add</button>\r\n        </span>\r\n      </Card.Header>\r\n      { !collapsed  ? (\r\n        <Card.Body>\r\n          {activitys?.length > 0 ? \r\n              <DnDListComponent\r\n              _list={activitys.map((item, index) => ( { item: item, reactItem:\r\n                <ActivityComponent\r\n                  key={item.key}\r\n                  activity={{...item}}\r\n                  onUpdateActivity={(a) => updateActivity(index, a)}\r\n                  onDelete={(e) => deleteActivity(e, index)}\r\n                  showNoData={true}\r\n                  showDecimalPointer={item.type === ActivityType.Distance || item.type === ActivityType.Sunrise}\r\n                  showProgress={item.type !== ActivityType.Distance}\r\n                  showDelimiter={item.type === ActivityType.Weather}\r\n                  title={item.digit ? item.digit.con.title : null}\r\n                  titleDefault={item.digit ? item.digit.con.titleDefault : null}\r\n                  titleMin={item.digitMin ? item.digitMin.con.titleMin : null}\r\n                  titleMax={item.digitMax ? item.digitMax.con.titleMax : null}\r\n                />})\r\n              )}\r\n              updateOrder={updateOrder}\r\n              />\r\n          : 'no activitys addes'}\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActivityListComponent;\r\n","import React, { FC, useContext, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\n\r\nconst BackgroundComponent: FC = () => {\r\n  const { watchface, setWatchface } = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Preview', type: BlockType.SelectFile, nvalue: watchface.background.previewIndex, onChange: onChangeBackgroundPreviewImage },\r\n        { title: 'Background', type: BlockType.SelectFile, nvalue: watchface.background.imageIndex, onChange: onChangeBackgroundImageIndex },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Color', type: BlockType.Color, svalue: watchface.background.color, onChange: onChangeBackgroundColor },\r\n      ]\r\n    }\r\n  ], [watchface])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeBackgroundPreviewImage(index: number) {\r\n    let w = {...watchface}\r\n    w.background.previewIndex = index\r\n    setWatchface(w)\r\n  }\r\n\r\n  function onChangeBackgroundImageIndex(index: number) {\r\n    let w = {...watchface}\r\n    w.background.imageIndex = index\r\n    setWatchface(w)\r\n  }\r\n\r\n  function onChangeBackgroundColor(value: string) {\r\n    let w = {...watchface}\r\n    w.background.color = value\r\n    setWatchface(w)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        className=\"clickable\"\r\n        onClick={() => {\r\n          let w = { ...watchface };\r\n          w.background.collapsed = !w.background.collapsed;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Background\r\n      </Card.Header>\r\n      {!watchface.background.collapsed ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundComponent;\r\n","import { FC, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { ElementOrderItem, WatchCommonDigit, WatchDate } from \"../../model/watchFace.model\";\r\nimport DnDListComponent, { IDNDItem } from \"../../shared/draganddroplist.component\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\ninterface IProps {\r\n  date: WatchDate,\r\n  onUpdate(date: WatchDate): void,\r\n}\r\n\r\nconst DateComponent: FC<IProps> = ({ date, onUpdate }) => {\r\n\r\n  const [collapsedOrderElement, setCollapsedOrderelement] = useState<boolean>(true)\r\n\r\n  function updateDay(d: WatchCommonDigit) {\r\n    const _date = { ...date };\r\n    _date.day = d;\r\n    onUpdate(_date);\r\n  }\r\n  function updateMonth(d: WatchCommonDigit) {\r\n    const _date = { ...date };\r\n    _date.month = d;\r\n    onUpdate(_date);\r\n  }\r\n  function updateMonthAsWord(d: WatchCommonDigit) {\r\n    const _date = { ...date };\r\n    _date.monthAsWord = d;\r\n    onUpdate(_date);\r\n  }\r\n  function updateYear(d: WatchCommonDigit) {\r\n    const _date = { ...date };\r\n    _date.year = d;\r\n    onUpdate(_date);\r\n  }\r\n  function updateWeekday(d: WatchCommonDigit) {\r\n    const _date = { ...date };\r\n    _date.weekDay = d;\r\n    onUpdate(_date);\r\n  }\r\n\r\n  function ononUpdateOrder(list: IDNDItem<ElementOrderItem>[]) {\r\n    const _date = { ...date };\r\n    _date.orderElements = list.map((item) => item.item)\r\n    onUpdate(_date)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header\r\n          onClick={() => {\r\n            let d = {...date};\r\n            d.collapsed = !d.collapsed;\r\n            onUpdate(d);\r\n          }}\r\n        >\r\n          Date\r\n        </Card.Header>\r\n        <Card.Body className={`${date.collapsed ? \"collapse\" : \"\"}`}>\r\n\r\n          <Card className='mb-1'>\r\n            <Card.Header\r\n                      onClick={() => {\r\n                        setCollapsedOrderelement(!collapsedOrderElement);\r\n                      }}>\r\n              Order of date elements\r\n            </Card.Header>\r\n              { !collapsedOrderElement ? \r\n            <Card.Body>\r\n              <DnDListComponent\r\n                _list={date.orderElements.map((value) => ({ item: value, reactItem: value.title }))}\r\n                updateOrder={ononUpdateOrder} />\r\n            </Card.Body>\r\n               : '' }\r\n          </Card>\r\n\r\n          <ImageDigitComponent\r\n            title=\"Day Digit\"\r\n            digit={{...date.day}}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Day Systemfont Rotated\"\r\n            digit={{...date.day}}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Day Systemfont Circle\"\r\n            digit={{...date.day}}\r\n            onUpdate={updateDay}\r\n          />\r\n\r\n          <ImageDigitComponent\r\n            title=\"Month\"\r\n            digit={{...date.month}}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Month Systemfont Rotated\"\r\n            digit={{...date.month}}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={{...date.month}}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month as word\"\r\n            digit={{...date.monthAsWord}}\r\n            onUpdate={updateMonthAsWord}\r\n            paddingZeroFix={true}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Year\"\r\n            digit={{...date.year}}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Year Systemfont Rotated\"\r\n            digit={{...date.year}}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Year Systemfont Circle\"\r\n            digit={{...date.year}}\r\n            onUpdate={updateYear}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Weekday\"\r\n            digit={{...date.weekDay}}\r\n            onUpdate={updateWeekday}\r\n            paddingZeroFix={true}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateComponent;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchStatus } from \"../../model/watchFace.model\";\r\nimport ImageCoordsComponent from \"./imageCoords.component\";\r\n\r\nconst StatusComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function updateStatus(status: WatchStatus) {\r\n    setWatchface({ ...watchface, status: status });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Status\r\n      </Card.Header>\r\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n        <ImageCoordsComponent\r\n          title=\"Bluetooth\"\r\n          imageCoords={{...watchface.status.bluetooth}}\r\n          onUpdate={(ic) => {\r\n            const status: WatchStatus = {...watchface.status, bluetooth: ic}\r\n            updateStatus(status)\r\n          }}\r\n        />\r\n        <ImageCoordsComponent\r\n          title=\"Do Not Disturb\"\r\n          imageCoords={{...watchface.status.dnd}}\r\n          onUpdate={(ic) => {\r\n            const status: WatchStatus = {...watchface.status, dnd: ic}\r\n            updateStatus(status)\r\n          }}\r\n        />\r\n        <ImageCoordsComponent\r\n          title=\"Alarm\"\r\n          imageCoords={{...watchface.status.alarm}}\r\n          onUpdate={(ic) => {\r\n            const status: WatchStatus = {...watchface.status, alarm: ic}\r\n            updateStatus(status)\r\n          }}\r\n        />\r\n        <ImageCoordsComponent\r\n          title=\"Lock\"\r\n          imageCoords={{...watchface.status.lock}}\r\n          onUpdate={(ic) => {\r\n            const status: WatchStatus = {...watchface.status, lock: ic}\r\n            updateStatus(status)\r\n          }}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default StatusComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport ClockHandComponent from \"./clockHand.component\";\r\n\r\nconst TimeAnalogComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          let w = {...watchface};\r\n          w.dialFace.collapsedAnalog = !w.dialFace.collapsedAnalog;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Time Analog\r\n      </Card.Header>\r\n      <Card.Body className={`${watchface.dialFace.collapsedAnalog ? \"collapse\" : \"\"}`}>\r\n        <ClockHandComponent\r\n          title=\"Hours\"\r\n          clockHand={{...watchface.dialFace.hoursClockhand}}\r\n          showAngle={false}\r\n          onUpdate={(ch) => {\r\n            const w = { ...watchface };\r\n            w.dialFace.hoursClockhand = ch;\r\n            setWatchface(w);\r\n          }}\r\n        />\r\n\r\n        <ClockHandComponent\r\n          title=\"Minutes\"\r\n          clockHand={{...watchface.dialFace.minutesClockhand}}\r\n          onUpdate={(ch) => {\r\n            const d = { ...watchface };\r\n            d.dialFace.minutesClockhand = ch;\r\n            setWatchface(d);\r\n          }}\r\n          showAngle={false}\r\n        />\r\n\r\n        <ClockHandComponent\r\n          title=\"Seconds\"\r\n          clockHand={{...watchface.dialFace.secondsClockhand}}\r\n          onUpdate={(ch) => {\r\n            const w = { ...watchface };\r\n            w.dialFace.secondsClockhand = ch;\r\n            setWatchface(w);\r\n          }}\r\n          showAngle={false}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TimeAnalogComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\nimport { Coordinates, MultilangImage } from \"../../model/json.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\nimport { WatchMultilangImageCoords } from \"../../model/watchFace.model\";\r\n\r\n\r\ninterface IProps {\r\n  title: string;\r\n  imageCoords: WatchMultilangImageCoords;\r\n  onUpdate(imageCoords: WatchMultilangImageCoords): void;\r\n}\r\n\r\nconst MultilangImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\r\n\r\n  const imageSetIndex = useMemo<number>(() => findImageIndex(imageCoords.json.ImageSet), [imageCoords])\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Image', type: BlockType.SelectFile, nvalue: imageCoords.json?.ImageSet[imageSetIndex]?.ImageSet.ImageIndex, onChange: changeImageIndex },\r\n        { title: 'X', type: BlockType.Number, nvalue: imageCoords.json.Coordinates?.X ? imageCoords.json.Coordinates?.X : 0, onChange: changeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: imageCoords.json.Coordinates?.Y ? imageCoords.json.Coordinates?.Y : 0, onChange: changeY },\r\n      ]\r\n    },\r\n  ], [imageCoords]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }\r\n\r\n  function toggle() {\r\n    const d = { ...imageCoords };\r\n    d.enabled = !d.enabled;\r\n    if ( !d.json.ImageSet) {\r\n      d.json.ImageSet = []\r\n      let digitimage = new MultilangImage()\r\n      digitimage.ImageSet.ImagesCount = d.count\r\n      d.json.ImageSet[0] = digitimage\r\n    }\r\n    onUpdate(d)\r\n  }\r\n\r\n  function changeImageIndex(ix: number) {\r\n    const ip = { ...imageCoords };\r\n    ip.json.ImageSet[imageSetIndex].ImageSet.ImageIndex = ix;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeX(val: number) {\r\n    const ip = { ...imageCoords };\r\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\r\n    ip.json.Coordinates.X = val;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  function changeY(val: number) {\r\n    const ip = { ...imageCoords };\r\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\r\n    ip.json.Coordinates.Y = val;\r\n    onUpdate(ip);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={imageCoords.enabled}\r\n              onChange={toggle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {imageCoords.enabled ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MultilangImageCoordsComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst TimeDigitalComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateSecondsDigit(s: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.secondsDigital = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, dialFace: wdf });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          let w = {...watchface};\r\n          w.dialFace.collapsedDigital = !w.dialFace.collapsedDigital;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${watchface.dialFace.collapsedDigital ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours Digits\"\r\n          digit={{...watchface.dialFace.hoursDigital}}\r\n          onUpdate={updateHoursDigit}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={{...watchface.dialFace.hoursDigital}}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={{...watchface.dialFace.hoursDigital}}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={{...watchface.dialFace.minutesDigital}}\r\n          onUpdate={updateMinutesDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={{...watchface.dialFace.minutesDigital}}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={{...watchface.dialFace.minutesDigital}}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Seconds\"\r\n          digit={{...watchface.dialFace.secondsDigital}}\r\n          onUpdate={updateSecondsDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Seconds Systemfont Rotated\"\r\n            digit={{...watchface.dialFace.secondsDigital}}\r\n            onUpdate={updateSecondsDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Seconds Systemfont Circle\"\r\n            digit={{...watchface.dialFace.secondsDigital}}\r\n            onUpdate={updateSecondsDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={{...watchface.dialFace.am}}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={{...watchface.dialFace.pm}}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"../watchface/activitylist.component\";\r\nimport BackgroundComponent from \"../watchface/background.component\";\r\nimport DateComponent from \"../watchface/date.component\";\r\nimport StatusComponent from \"../watchface/status.component\";\r\nimport TimeAnalogComponent from \"../watchface/timeAnalog.component\";\r\nimport TimeDigitalComponent from \"../watchface/timeDigital.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchActivity, WatchDate } from \"../../model/watchFace.model\";\r\n\r\nconst ScreenNormalcomponent: FC = () => {\r\n\r\n  const { watchface, setWatchface } = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateDate(d: WatchDate) {\r\n    let w = { ...watchface }\r\n    w.date = d\r\n    setWatchface(w)\r\n  }\r\n\r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = { ...watchface }\r\n    w.activity = al\r\n    w.activitylistCollapsed = false;\r\n    setWatchface(w)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackgroundComponent/>\r\n      <TimeDigitalComponent/>\r\n      <TimeAnalogComponent/>\r\n      <DateComponent\r\n        date={{...watchface.date}}\r\n        onUpdate={updateDate}\r\n      />\r\n      <ActivityListComponent\r\n        activitys={[...watchface.activity]}\r\n        onUpdate={updateActivitys}\r\n        collapsed={{...watchface}.activitylistCollapsed}\r\n        setCollapsed={(collapsed) => {\r\n          let w = { ...watchface };\r\n          w.activitylistCollapsed = collapsed;\r\n          setWatchface(w);\r\n        }}\r\n      />\r\n      <StatusComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreenNormalcomponent;\r\n","export class WeatherStates {\r\n public static ar: string[] = [\r\n    'Cloudy',\r\n    'Chance of rain',\r\n    'Chance of snow',\r\n    'Sunny',\r\n    'Overcast',\r\n    'Light rain',\r\n    'Light snow',\r\n    'Moderate rain',\r\n    'Moderate snow',\r\n    'Heavy snowfall',\r\n    'Heavy rain',\r\n    'Sandstorm',\r\n    'Sleet',\r\n    'Fog',\r\n    'Haze',\r\n    'Thunderstorm',\r\n    'Snowstorm',\r\n    'Dusty',\r\n    'Extreme rain',\r\n    'Rain with hail',\r\n    'Heavy rain with hail',\r\n    'Rainstorm',\r\n    'Dust storm',\r\n    'Severe sandstorm',\r\n    'Torrential rain',\r\n    'Unknown weather',\r\n    'Cloudy night',\r\n    'Rainy night',\r\n    'Clear night'\r\n ]\r\n}","import React, { FC, useContext, useEffect, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WeatherStates } from \"../../model/weather.states\";\r\n\r\nconst PreviewStatesComponent: FC = () => {\r\n  const { watchface, watchState, setWatchState } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  useEffect(() => {\r\n    const ws = { ...watchState };\r\n    if ( watchface.widgets?.widgets && watchface.widgets.widgets.length > 0 ) {\r\n      if ( watchState.widgets.length > watchface.widgets.widgets.length) {\r\n        ws.widgets.splice(watchface.widgets.widgets.length-1)\r\n        setWatchState(ws)\r\n      } else if ( watchState.widgets.length < watchface.widgets.widgets.length) {\r\n        for(let i = watchState.widgets.length; i < watchface.widgets.widgets.length; i++) {\r\n          ws.widgets.push(0)\r\n        }\r\n        setWatchState(ws)\r\n      }\r\n    } else {\r\n      ws.widgets = []\r\n      setWatchState(ws)\r\n    }\r\n  }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const date = useMemo(\r\n    () =>\r\n      `${watchState.year.toString().padStart(4, \"0\")}-${watchState.month\r\n        .toString()\r\n        .padStart(2, \"0\")}-${watchState.day.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  const time = useMemo(\r\n    () =>\r\n      `${watchState.hours.toString().padStart(2, \"0\")}:${watchState.minutes\r\n        .toString()\r\n        .padStart(2, \"0\")}:${watchState.seconds.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  function updateDate(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let date = new Date(e.target.value);\r\n    const ws = { ...watchState };\r\n    ws.year = date.getFullYear();\r\n    ws.month = date.getMonth() + 1;\r\n    ws.monthasword = date.getMonth();\r\n    ws.day = date.getDate();\r\n    ws.weekday = date.getDay() > 0 ? date.getDay() - 1 : 6;\r\n    setWatchState(ws);\r\n  }\r\n\r\n  function updateTime(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let [h, m, s] = e.target.value.split(\":\");\r\n    const ws = { ...watchState };\r\n    if (!isNaN(parseInt(h))) ws.hours = parseInt(h);\r\n    if (!isNaN(parseInt(m))) ws.minutes = parseInt(m);\r\n    if (!isNaN(parseInt(s))) ws.seconds = parseInt(s);\r\n    setWatchState(ws);\r\n  }\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Date</span>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control form-control-sm\"\r\n            value={date}\r\n            onChange={updateDate}\r\n          />\r\n          <span className=\"input-group-text\">Time</span>\r\n          <input\r\n            type=\"time\"\r\n            className=\"form-control form-control-sm\"\r\n            step=\"1\"\r\n            value={time}\r\n            onChange={updateTime}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Battery</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.battery}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.battery = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Calories</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.calories}\r\n            onChange={(e) => {\r\n              let ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.calories = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Steps</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.steps}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.steps = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Steps Goal</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.stepsGoal}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stepsGoal = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Hearthrate</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.hearthrateGoal}\r\n            value={watchState.hearthrate}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.hearthrate = !isNaN(v) ? Math.min(v, watchState.hearthrateGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Distance</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"9999\"\r\n            value={watchState.distance}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.distance = !isNaN(v) ? Math.min(v, 9999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">PAI</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.paiGoal}\r\n            value={watchState.pai}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.pai = !isNaN(v) ? Math.min(v, watchState.paiGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">StandUp</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.standupGoal}\r\n            value={watchState.standup}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.standup = !isNaN(v) ? Math.min(v, watchState.standupGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Stress</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.stress}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stress = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Fat Burning</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99\"\r\n            value={watchState.fatBurning}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.fatBurning = !isNaN(v) ? Math.min(v, 99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Weather Icon</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"28\"\r\n            value={watchState.weatherIcon}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.weatherIcon = !isNaN(v) ? Math.min(v, 28) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">{WeatherStates.ar[watchState.weatherIcon]}</span>\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Current</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperature}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperature = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Min</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMin}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMin = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Max</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMax}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMax = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">UV Index</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"11\"\r\n            value={watchState.uvIndex}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.uvIndex = !isNaN(v) ? Math.min(v, 11) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Quality</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"500\"\r\n            value={watchState.airQuality}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airQuality = !isNaN(v) ? Math.min(v, 500) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Humidity</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.humidity}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.humidity = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Windforce</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"12\"\r\n            value={watchState.windForce}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.windForce = !isNaN(v) ? Math.min(v, 12) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Pressure</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.airPressureGoal}\r\n            value={watchState.airPressure}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airPressure = !isNaN(v) ? Math.min(v, watchState.airPressureGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Blutooth\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.bluetooth}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.bluetooth = !ws.bluetooth;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            DnD\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.dnd}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.dnd = !ws.dnd;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Alarm\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.alarm}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.alarm = !ws.alarm;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Lock\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.lock}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.lock = !ws.lock;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <Card className='mt-3'>\r\n          <Card.Header>\r\n            <h3>Preview of widgets element</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            { watchState.widgets?.length > 0 ? \r\n              <div className=\"input-group input-group-sm mb-1\">\r\n              <span className=\"input-group-text\">Active widget</span>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-control-sm\"\r\n                value={watchState.activeWidget + 1}\r\n                min={1}\r\n                max={watchface.widgets?.widgets.length}\r\n                onChange={(e) => {\r\n                  const ws = { ...watchState };\r\n                  const v = parseInt(e.target.value);\r\n                  ws.activeWidget = !isNaN(v) ? Math.max(0, v-1) : 0;\r\n                  setWatchState(ws);\r\n                }}\r\n              />\r\n            </div>\r\n             : '' }\r\n            { watchState.widgets?.length > 0 ? watchState.widgets.map((w, index) =>\r\n            <div key={index} className=\"input-group input-group-sm mb-1\">\r\n              <span className=\"input-group-text\">Widget {index+1}. Element for preview </span>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-control-sm\"\r\n                value={w+1}\r\n                min={1}\r\n                max={watchface.widgets?.widgets[index]?.widgetElements?.length}\r\n                onChange={(e) => {\r\n                  const ws = { ...watchState };\r\n                  const v = parseInt(e.target.value);\r\n                  ws.widgets[index] = !isNaN(v) ? Math.max(0, v-1) : 0;\r\n                  setWatchState(ws);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : 'no widgets in watchface' }\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewStatesComponent;\r\n","import React, { FC, useContext, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\n\r\nconst BackgroundAODComponent: FC = () => {\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'Background', type: BlockType.SelectFile, nvalue: watchface.aod.backgroundImageIndex, onChange: onChangeBackgroundImageIndex },\r\n      ]\r\n    },\r\n  ], [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeBackgroundImageIndex(index: number) {\r\n    setWatchface({\r\n      ...watchface,\r\n      aod: { ...watchface.aod, backgroundImageIndex: index },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        className=\"clickable\"\r\n        onClick={() => {\r\n          let w = {...watchface};\r\n          w.aod.backgroundCollapsed = !w.aod.backgroundCollapsed;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Background\r\n      </Card.Header>\r\n      {!watchface.aod.backgroundCollapsed ? (\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BackgroundAODComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport ClockHandComponent from \"./clockHand.component\";\r\n\r\nconst TimeAnalogAODComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function copyHoursFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.hoursClockhand = {...watchface.dialFace.hoursClockhand}\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\r\n  }\r\n  function copyMinutesFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.minutesClockhand = {...watchface.dialFace.minutesClockhand}\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          let w = {...watchface};\r\n          w.aod.dialFace.collapsedAnalog = !w.aod.dialFace.collapsedAnalog;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Time Analog\r\n      </Card.Header>\r\n      <Card.Body className={`${watchface.aod.dialFace.collapsedAnalog ? \"collapse\" : \"\"}`}>\r\n        <ClockHandComponent\r\n          title=\"Hours\"\r\n          clockHand={{...watchface.aod.dialFace.hoursClockhand}}\r\n          showAngle={false}\r\n          onUpdate={(ch) => {\r\n            const w = { ...watchface };\r\n            w.aod.dialFace.hoursClockhand = ch;\r\n            setWatchface(w);\r\n          }}\r\n          onCopyFromNormal={copyHoursFromNormal}\r\n        />\r\n\r\n        <ClockHandComponent\r\n          title=\"Minutes\"\r\n          clockHand={{...watchface.aod.dialFace.minutesClockhand}}\r\n          onUpdate={(ch) => {\r\n            const w = { ...watchface };\r\n            w.aod.dialFace.minutesClockhand = ch;\r\n            setWatchface(w);\r\n          }}\r\n          showAngle={false}\r\n          onCopyFromNormal={copyMinutesFromNormal}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TimeAnalogAODComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\nconst TimeDigitalAODComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n\r\n  function copyHoursFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.hoursDigital = {...watchface.dialFace.hoursDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n  function copyMinutesFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.minutesDigital = {...watchface.dialFace.minutesDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: wdf} });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          let w = {...watchface};\r\n          w.aod.dialFace.collapsedDigital = !w.aod.dialFace.collapsedDigital;\r\n          setWatchface(w);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${watchface.aod.dialFace.collapsedDigital ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours\"\r\n          digit={{...watchface.aod.dialFace.hoursDigital}}\r\n          onUpdate={updateHoursDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={false}\r\n          onCopyFromNormal={copyHoursFromNormal}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={{...watchface.aod.dialFace.hoursDigital}}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={{...watchface.aod.dialFace.hoursDigital}}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={{...watchface.aod.dialFace.minutesDigital}}\r\n          onUpdate={updateMinutesDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={true}\r\n          onCopyFromNormal={copyMinutesFromNormal}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={{...watchface.aod.dialFace.minutesDigital}}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={{...watchface.aod.dialFace.minutesDigital}}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={{...watchface.aod.dialFace.am}}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={{...watchface.aod.dialFace.pm}}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalAODComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"./activitylist.component\";\r\nimport BackgroundAODComponent from \"./backgroundaod.component\";\r\nimport TimeAnalogAODComponent from \"./timeAnalogAOD.component\";\r\nimport TimeDigitalAODComponent from \"./timeDigitalAOD.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchActivity, WatchDate } from \"../../model/watchFace.model\";\r\nimport DateComponent from \"./date.component\";\r\n\r\nconst AodComponent: FC = () => {\r\n\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateDate(d: WatchDate) {\r\n    let w = {...watchface}\r\n    w.aod.date = d\r\n    setWatchface(w)\r\n  }\r\n  \r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = {...watchface}\r\n    w.aod.activitylist = al\r\n    w.aod.activitylistCollapsed = false;\r\n    setWatchface(w)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <BackgroundAODComponent />\r\n      <TimeDigitalAODComponent/>\r\n      <TimeAnalogAODComponent/>\r\n      <DateComponent\r\n        date={{...watchface.aod.date}}\r\n        onUpdate={updateDate}\r\n      />\r\n      <ActivityListComponent\r\n        activitys={[...watchface.aod.activitylist]}\r\n        onUpdate={updateActivitys}\r\n        collapsed={{...watchface.aod}.activitylistCollapsed}\r\n        setCollapsed={(collapsed) => {\r\n          let s = {...watchface};\r\n          s.aod.activitylistCollapsed = collapsed;\r\n          setWatchface(s)\r\n        }}\r\n       />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AodComponent;\r\n","import React, { FC } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport BlocksArrayComponent from '../../blocks/blocksArray.component';\r\nimport { BlockType } from '../../model/blocks.model';\r\nimport { WatchDate, WatchWidgetElement } from '../../model/watchFace.model';\r\nimport ActivityListComponent from './activitylist.component';\r\nimport DateComponent from './date.component';\r\n\r\ninterface IProps {\r\n    index: number,\r\n    element: WatchWidgetElement,\r\n    onDelete(e): void,\r\n    onUpdate(element: WatchWidgetElement)\r\n    defaultCount: number,\r\n}\r\n\r\nconst WidgetElementComponent: FC<IProps> = ({index, element, onDelete, onUpdate, defaultCount}) => {\r\n\r\n  function onChangePreviewImageIndex(index: number) {\r\n      const _we = { ...element };\r\n      _we.previewImageIndex = index;\r\n      onUpdate(_we);\r\n  }\r\n  \r\n  function updateDate(d: WatchDate) {\r\n    let _we = { ...element }\r\n    _we.date = d\r\n    onUpdate(_we)\r\n  }\r\n\r\n  return (\r\n      <Card className=\"w-100\">\r\n          <Card.Header \r\n              className=\"d-flex justify-content-between align-items-center\"\r\n              onClick={() => {\r\n                let we = {...element};\r\n                we.collapsed = !we.collapsed;\r\n                onUpdate(we);\r\n              }}>\r\n              <span className=\"input-group-text\">Element {index+1}</span>\r\n              <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete}>Delete</button>\r\n          </Card.Header>\r\n          { !element.collapsed ? \r\n          <Card.Body>\r\n            <BlocksArrayComponent ar={\r\n              [\r\n                { blocks: [\r\n                  { title: 'Preview', type: BlockType.SelectFile, nvalue: element.previewImageIndex, onChange: onChangePreviewImageIndex },\r\n                ]}\r\n              ]\r\n            } />\r\n          <DateComponent\r\n              date={{...element.date}}\r\n              onUpdate={updateDate}\r\n           />\r\n          <ActivityListComponent\r\n              activitys={[...element.activitys]}\r\n              onUpdate={(al) => {\r\n                let we = {...element};\r\n                we.activitys = al;\r\n                we.activitylistCollapsed = false;\r\n                onUpdate(we);\r\n              }}\r\n              collapsed={{...element}.activitylistCollapsed}\r\n              setCollapsed={(collapsed) => {\r\n                let we = {...element};\r\n                we.activitylistCollapsed = collapsed;\r\n                onUpdate(we);\r\n              }}\r\n          />\r\n          </Card.Body> \r\n          : '' }\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default WidgetElementComponent;","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType, IRow } from \"../../model/blocks.model\";\r\nimport { WatchWidget, WatchWidgetElement } from \"../../model/watchFace.model\";\r\nimport DnDListComponent, { IDNDItem } from \"../../shared/draganddroplist.component\";\r\nimport ImageCoordsComponent from \"./imageCoords.component\";\r\nimport WidgetElementComponent from \"./widgetElement.component\";\r\n\r\n\r\ninterface IProps {\r\n  title: string;\r\n  widget: WatchWidget;\r\n  onUpdate(widget: WatchWidget): void;\r\n  onDelete(e): void;\r\n}\r\n\r\nconst WidgetComponent: FC<IProps> = ({ title, widget, onUpdate, onDelete }) => {\r\n\r\n  const ar = useMemo<IRow[]>(() => [\r\n    {\r\n      blocks: [\r\n        { title: 'X', type: BlockType.Number, nvalue: widget?.x ? widget.x : 0, onChange: onChangeX },\r\n        { title: 'Y', type: BlockType.Number, nvalue: widget?.y ? widget.y : 0, onChange: onChangeY },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Width', type: BlockType.Number, nvalue: widget?.width ? widget.width : 0, onChange: onChangeWidth },\r\n        { title: 'Height', type: BlockType.Number, nvalue: widget?.height ? widget.height : 0, onChange: onChangeHeight },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Frame activ', type: BlockType.SelectFile, nvalue: widget.borderActivImageIndex ? widget.borderActivImageIndex : null, onChange: onChangeBorderActiv },\r\n        { title: 'Frame inactiv', type: BlockType.SelectFile, nvalue: widget.borderInactivImageIndex ? widget.borderInactivImageIndex : null, onChange: onChangeBorderInactiv },\r\n      ]\r\n    },\r\n    {\r\n      blocks: [\r\n        { title: 'Description width', type: BlockType.Number, nvalue: widget?.descriptionWidthCheck ? widget.descriptionWidthCheck : 0, onChange: onChangeDescriptionWidth },\r\n      ]\r\n    },\r\n  ], [widget]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function onChangeX(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.x = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeY(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.y = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeWidth(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.width = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeHeight(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.height = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeBorderActiv(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.borderActivImageIndex = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeBorderInactiv(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.borderInactivImageIndex = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function onChangeDescriptionWidth(val: number) {\r\n    const _wi = { ...widget };\r\n    _wi.descriptionWidthCheck = val;\r\n    onUpdate(_wi);\r\n  }\r\n\r\n  function addElement(e) {\r\n    e.stopPropagation()\r\n    let _wi = {...widget}\r\n    if (!_wi.widgetElements) _wi.widgetElements = []\r\n    let _we = new WatchWidgetElement()\r\n    _wi.widgetElements.push(_we)\r\n    _wi.widgetElementsCollapsed = false\r\n    onUpdate(_wi)\r\n  }\r\n\r\n  function deleteElement(e, index: number) {\r\n    e.stopPropagation();\r\n    if ( window.confirm(`would you delete this element of widget?`)) {\r\n      let _wi = {...widget};\r\n      _wi.widgetElements.splice(index, 1);\r\n      onUpdate(_wi);\r\n    }\r\n  }\r\n\r\n  function updateElement(index: number, element: WatchWidgetElement) {\r\n    let _wi = {...widget}\r\n    _wi.widgetElements[index] = {...element}\r\n    onUpdate(_wi)\r\n  }\r\n\r\n  function updateWidgetElementsOrder(list: IDNDItem<WatchWidgetElement>[]) {\r\n    let _wi = {...widget}\r\n    _wi.widgetElements = list.map((value) => value.item)\r\n    onUpdate(_wi)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header \r\n      className=\"d-flex justify-content-between align-items-center\"\r\n      onClick={() => {\r\n        let wi = {...widget};\r\n        wi.collapsed = !wi.collapsed;\r\n        onUpdate(wi)\r\n      }}>\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete}>Delete</button>\r\n      </Card.Header>\r\n      {!widget.collapsed ? \r\n      <Card.Body>\r\n          <BlocksArrayComponent ar={ar} />\r\n          <div className=\"input-group input-group-sm pt-1\">\r\n            <ImageCoordsComponent\r\n              title='Description background'\r\n              imageCoords={widget.descriptionImageBackground}\r\n              onUpdate={(ic) => {\r\n                let wi = {...widget};\r\n                wi.descriptionImageBackground = ic\r\n                onUpdate(wi)\r\n              }\r\n\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <Card className=\"mt-1\">\r\n            <Card.Header className=\"d-flex justify-content-between align-items-center\"\r\n              onClick={() => {\r\n                let wi = {...widget};\r\n                wi.widgetElementsCollapsed = !wi.widgetElementsCollapsed;\r\n                onUpdate(wi);\r\n              }}>\r\n              Elements [{widget.widgetElements?.length}]\r\n              <button className=\"btn btn-outline-success\" type=\"button\" onClick={addElement}>Add</button>\r\n            </Card.Header>\r\n            { !widget.widgetElementsCollapsed ? \r\n            <Card.Body>\r\n              { widget.widgetElements?.length > 0 ?\r\n              <DnDListComponent\r\n               _list={\r\n              widget.widgetElements?.map(\r\n                (element, index) => ({item: element, reactItem:\r\n                <WidgetElementComponent\r\n                  key={index}\r\n                  index={index}\r\n                  element={{...element}}\r\n                  defaultCount={1}\r\n                  onDelete={(e) => deleteElement(e, index)}\r\n                  onUpdate={(element) => updateElement(index, element)}\r\n                />})) }\r\n                updateOrder={updateWidgetElementsOrder}\r\n              /> : 'no elements added' }\r\n            </Card.Body>\r\n            : ''}\r\n          </Card>\r\n        </Card.Body>\r\n         : '' }\r\n     </Card>\r\n    );\r\n};\r\n\r\nexport default WidgetComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport WidgetComponent from \"../watchface/widget.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { WatchWidget, WatchWidgets } from \"../../model/watchFace.model\";\r\nimport BlocksArrayComponent from \"../../blocks/blocksArray.component\";\r\nimport { BlockType } from \"../../model/blocks.model\";\r\n\r\nconst WidgetsComponent: FC = () => {\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n \r\n  function updateWidgets(widgets: WatchWidgets) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets = {...widgets}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function updateWidget(index: number, wi: WatchWidget) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets.widgets[index] = {...wi}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function addWidget(e) {\r\n    e.stopPropagation()\r\n    let _wi = new WatchWidget()\r\n    let _wf = {...watchface}\r\n    if (!_wf.widgets) {\r\n      _wf.widgets = new WatchWidgets()\r\n    }\r\n    _wf.widgets.enabled = true;\r\n    _wf.widgets.widgets.push(_wi)\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function deleteWidget(e, index: number) {\r\n    e.stopPropagation()\r\n    if ( window.confirm(`would you delete this widget?`)) {\r\n      let _wf = {...watchface}\r\n      _wf.widgets.widgets.splice(index, 1)\r\n      setWatchface(_wf)\r\n    }\r\n  }\r\n\r\n  function onChangeTopMask(index: number) {\r\n    const ws = { ...watchface.widgets };\r\n    ws.enabled = true;\r\n    ws.topMaskImageIndex = index;\r\n    updateWidgets(ws);\r\n  }\r\n\r\n  function onChangeBottomMask(index: number) {\r\n    const ws = { ...watchface.widgets };\r\n    ws.enabled = true;\r\n    ws.underMaskImageIndex = index;\r\n    updateWidgets(ws);\r\n  }  \r\n\r\n  function onChangeShowtime(checked: boolean) {\r\n    const ws = { ...watchface.widgets };\r\n    ws.showTimeOnEditScreen = checked ? 1 : 0;\r\n    updateWidgets(ws);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>\r\n          Common Preferences\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <BlocksArrayComponent ar={\r\n            [\r\n                { blocks: [\r\n                  { title: 'Top mask', type: BlockType.SelectFile, nvalue: watchface.widgets?.topMaskImageIndex, onChange: onChangeTopMask },\r\n                  { title: 'Bottom mask', type: BlockType.SelectFile, nvalue: watchface.widgets?.underMaskImageIndex, onChange: onChangeBottomMask },\r\n                ]},\r\n                { blocks: [\r\n                  { title: 'show time on Edit screen', type: BlockType.Checkbox, checked: watchface.widgets?.showTimeOnEditScreen > 0, onChange: onChangeShowtime },\r\n                ]}\r\n            ]\r\n          } />\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\r\n        onClick={() => {\r\n          let wf = {...watchface};\r\n          wf.widgets.collapsed = !wf.widgets.collapsed;\r\n          setWatchface(wf);\r\n        }}\r\n      >\r\n        Widgets [{watchface.widgets?.widgets?.length}]\r\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addWidget}>Add</button>\r\n      </Card.Header>\r\n      <Card.Body>\r\n          {watchface.widgets?.widgets?.length > 0 ? \r\n          <>\r\n            { watchface.widgets.widgets.map((item, index) => {\r\n              return (\r\n                <WidgetComponent\r\n                  key={index}\r\n                  title={`Widget ${index+1}`}\r\n                  widget={{...item}}\r\n                  onUpdate={(widget) => updateWidget(index, widget)}\r\n                  onDelete={(e) => deleteWidget(e, index)}\r\n                />\r\n              )\r\n            }) }\r\n          </> : 'no widgets added'}\r\n      </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WidgetsComponent;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport { WatchfaceContext } from \"../../context\";\r\nimport ScreenNormalcomponent from \"../watchface/screennormal.component\";\r\nimport PreviewStatesComponent from \"./previewstates.component\";\r\nimport AodComponent from \"../watchface/aod.component\";\r\nimport WidgetsComponent from \"../watchface/widgets.component\";\r\nimport { Constant } from \"../../shared/constant\";\r\n\r\nconst tabs = [\r\n  {\r\n    id: 0, name: \"Screen normal\", el: <div className=\"mt-3 blocks\">\r\n      <ScreenNormalcomponent />\r\n    </div>\r\n  },\r\n  {\r\n    id: 1, name: \"AOD\", el: <div className=\"mt-3 blocks\">\r\n      <AodComponent />\r\n    </div>\r\n  },\r\n  {\r\n    id: 2, name: \"Widgets\", el: <div className=\"mt-3 blocks\">\r\n      <WidgetsComponent />\r\n    </div>\r\n  },\r\n  {\r\n    id: 3, name: \"Preview State\", el: <div className=\"mt-3\">\r\n      <PreviewStatesComponent />\r\n    </div>\r\n  },\r\n];\r\n\r\nconst LeftSideComponent: FC = () => {\r\n\r\n  const { setPreviewScreenNormal } = useContext(WatchfaceContext)\r\n\r\n  const [selectedTab, setSelectedTab] = useState<number>(0);\r\n\r\n  function onclick(tabid: number) {\r\n    setSelectedTab(tabid)\r\n    if (tabid === 0) setPreviewScreenNormal(true)\r\n    if (tabid === 1) setPreviewScreenNormal(false)\r\n    if (tabid === 2) setPreviewScreenNormal(true)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n      <span className=\"navbar-brand mb-0 h1\">\r\n        {Constant.DEVICE}\r\n      </span>\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${selectedTab === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => onclick(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {tabs[selectedTab].el}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideComponent;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { Activity, DigitalDigit, Shortcut, WatchJson, Widget, Widgets } from \"../../model/json.model\";\r\nimport { WidgetElement } from \"../../model/json.model\";\r\nimport { DateType, LangCodeType } from \"../../model/types.model\";\r\nimport WatchFace, { WatchActivity, WatchAOD, WatchClockHand, WatchCommonDigit, WatchDate, WatchImageCoords, WatchImageProgress, WatchProgressBar, WatchWidget, WatchWidgetElement, WatchWidgets } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport cl from './JsonComponent.module.css';\r\n\r\nconst JsonComponent: FC = () => {\r\n\r\n    const {watchface, jsonName } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n    const [json, setJson] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        let json = generateJson(watchface)\r\n        setJson(json)\r\n        saveJson(json)\r\n    }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function generateJson(w: WatchFace): string {\r\n        let timeDigitalEnabled = w.dialFace.hoursDigital.enabled || w.dialFace.minutesDigital.enabled || w.dialFace.secondsDigital.enabled || w.dialFace.am.enabled || w.dialFace.pm.enabled\r\n        let timeDigitalAodEnabled = w.aod.dialFace.hoursDigital.enabled || w.aod.dialFace.minutesDigital.enabled || w.aod.dialFace.am.enabled || w.aod.dialFace.pm.enabled\r\n        let timeClockHandEnabled = w.dialFace.hoursClockhand.enabled || w.dialFace.minutesClockhand.enabled || w.dialFace.secondsClockhand.enabled\r\n        let timeClockHandAodEnabled = w.aod.dialFace.hoursClockhand.enabled || w.aod.dialFace.minutesClockhand.enabled\r\n\r\n        let dateEnabled = w.date.day.enabled || w.date.month.enabled || w.date.monthAsWord.enabled || w.date.weekDay.enabled || w.date.year.enabled\r\n        let dateAodEnabled = w.aod.date.day.enabled || w.aod.date.month.enabled || w.aod.date.monthAsWord.enabled || w.aod.date.weekDay.enabled || w.aod.date.year.enabled\r\n        let statusEnabled = w.status.alarm.enabled || w.status.bluetooth.enabled || w.status.lock.enabled || w.status.dnd.enabled\r\n\r\n        let dialFaceEnabled = timeDigitalEnabled || timeClockHandEnabled\r\n        let dialFaceAodEnabled = timeDigitalAodEnabled || timeClockHandAodEnabled\r\n\r\n        let timeDigits = getTimeDigital(watchface)\r\n        let timeDigitsAod = getTimeDigital(watchface.aod)\r\n\r\n        let dateDigits = getDate(watchface.date)\r\n        let dateDigitsAod = getDate(watchface.aod.date)\r\n        \r\n        let activitys = activitysToJson(watchface.activity)\r\n        let activitysAod = activitysToJson(watchface.aod.activitylist)\r\n\r\n        let j: WatchJson = {\r\n            Info: {\r\n                DeviceId: Constant.deviceId\r\n            },\r\n            Background: w.background.imageIndex || w.background.color || w.background.previewIndex  ? {\r\n                Preview: w.background.previewIndex ? [\r\n                    {\r\n                        LangCode: LangCodeType.All.json,\r\n                        ImageSet: {\r\n                            ImageIndex: w.background.previewIndex ,\r\n                            ImagesCount: 1\r\n                        }\r\n                    }\r\n                ] : null,\r\n                BackgroundImageIndex: w.background.imageIndex ,\r\n                Color: !w.background.imageIndex && w.background.color ? Color.colorBackgroundWrite(w.background.color) : null\r\n            } : null\r\n            ,\r\n            DialFace: dialFaceEnabled ? {\r\n                DigitalDialFace:  timeDigitalEnabled ? {\r\n                    Digits: timeDigits.length > 0 ? timeDigits : null,\r\n                    AM: w.dialFace.am.enabled ? w.dialFace.am.json : null,\r\n                    PM: w.dialFace.pm.enabled ? w.dialFace.pm.json : null,\r\n                } : null,\r\n                AnalogDialFace: timeClockHandEnabled ? {\r\n                    Hours: w.dialFace.hoursClockhand.enabled ? w.dialFace.hoursClockhand.json : null,\r\n                    Minutes:  w.dialFace.minutesClockhand.enabled ? w.dialFace.minutesClockhand.json : null,\r\n                    Seconds:  w.dialFace.secondsClockhand.enabled ? w.dialFace.secondsClockhand.json : null\r\n                } : null,\r\n                ProgressDialFace: null\r\n            } : null,\r\n            System: dateEnabled || activitys.length > 0 || statusEnabled ? {\r\n                Status: statusEnabled ? {\r\n                    Bluetooth: w.status.bluetooth.enabled ? w.status.bluetooth.json: null,\r\n                    DoNotDisturb: w.status.dnd.enabled ? w.status.dnd.json : null,\r\n                    Lock: w.status.lock.enabled ? w.status.lock.json: null,\r\n                    Alarm: w.status.alarm.enabled ? w.status.alarm.json : null\r\n                }: null,\r\n                Date: dateEnabled ? {\r\n                    DateDigits: dateDigits.length > 0 ? dateDigits : null,\r\n                    WeeksDigits: w.date.weekDay.enabled ? w.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitys.length > 0 ? activitys : null\r\n            } : null,\r\n            Widgets: w.widgets.enabled ? getWidgets(w.widgets) : null,\r\n            ScreenIdle: w.aod.backgroundImageIndex || dialFaceAodEnabled || dateAodEnabled || activitysAod.length > 0 ? {\r\n                BackgroundImageIndex: w.aod.backgroundImageIndex ? w.aod.backgroundImageIndex : null,\r\n                DialFace: dialFaceAodEnabled ? {\r\n                    DigitalDialFace:  timeDigitalAodEnabled ? {\r\n                        Digits: timeDigitsAod.length > 0 ? timeDigitsAod : null,\r\n                        AM: w.aod.dialFace.am.enabled ? w.aod.dialFace.am.json : null,\r\n                        PM: w.aod.dialFace.pm.enabled ? w.aod.dialFace.pm.json : null,\r\n                    } : null,\r\n                    AnalogDialFace: timeClockHandAodEnabled ? {\r\n                        Hours: w.aod.dialFace.hoursClockhand.enabled ? w.aod.dialFace.hoursClockhand.json : null,\r\n                        Minutes:  w.aod.dialFace.minutesClockhand.enabled ? w.aod.dialFace.minutesClockhand.json : null,\r\n                        Seconds: null\r\n                    } : null,\r\n                    ProgressDialFace: null \r\n                } : null,\r\n                Date: dateAodEnabled ? {\r\n                    DateDigits: dateDigitsAod.length > 0 ? dateDigitsAod : null,\r\n                    WeeksDigits: w.aod.date.weekDay.enabled ? w.aod.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitysAod.length > 0 ? activitysAod : null,\r\n            } : null\r\n        }\r\n        return JSON.stringify(j, (key, value) => {\r\n            if (value !== null && value !== undefined) return value\r\n          }, \"  \")\r\n    }\r\n    \r\n    function saveJson(json: string) {\r\n        if (json.length > 0) {\r\n            var a = document.getElementById(\"saveJson\") as HTMLAnchorElement;\r\n            if (a) {\r\n                var file = new Blob([json], {type: 'text/plain'});\r\n                let filename = jsonName ? jsonName : 'watchface.json'\r\n                a.href = URL.createObjectURL(file);\r\n                a.download = filename;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card className={cl.json}>\r\n            <pre>\r\n                {json}\r\n            </pre>\r\n        </Card>\r\n        <br/>\r\n        <a href=\"a\" id=\"saveJson\">download json file</a>\r\n        </>\r\n    )\r\n    \r\n};\r\n\r\nexport default JsonComponent;\r\n\r\nexport function activitysToJson(alist: WatchActivity[]): Activity[] {\r\n    let activitys: Activity[] = []\r\n    if (!alist) return activitys\r\n    alist.forEach(item => {\r\n        let digits: WatchCommonDigit[] = []\r\n        let enabled = false\r\n        let imageProgress: WatchImageProgress = null\r\n        let pointerProgress: WatchClockHand = null\r\n        let icon: WatchImageCoords = null\r\n        let progressBar: WatchProgressBar = null\r\n        let shortcut: Shortcut = null\r\n\r\n        if (item) {\r\n            if (item.digit.enabled) {enabled = true; digits.push(item.digit)}\r\n            if (item.digitMin.enabled) {enabled = true; digits.push(item.digitMin)}\r\n            if (item.digitMax.enabled) {enabled = true; digits.push(item.digitMax)}\r\n            if (item.imageProgress.enabled) {\r\n                enabled = true\r\n                imageProgress = item.imageProgress\r\n            }\r\n            if (item.pointerProgress.enabled) {\r\n                enabled = true\r\n                pointerProgress = item.pointerProgress\r\n            }\r\n            if (item.progressBar.enabledLinear || item.progressBar.enabledCircle) {\r\n                enabled = true\r\n                progressBar = item.progressBar\r\n                if (progressBar.jsonObj.ForegroundImageIndex) {\r\n                    progressBar.jsonObj.Color = null\r\n                }\r\n                if (!item.progressBar.enabledCircle) {\r\n                    progressBar.jsonObj.AngleSettings = null\r\n                }\r\n                if (!item.progressBar.enabledLinear) {\r\n                    progressBar.jsonObj.LinearSettings = null\r\n                }\r\n            }\r\n            if (item.icon.enabled) {\r\n                enabled = true\r\n                icon = item.icon\r\n            }\r\n            if (item.shortcut) {\r\n                enabled = true\r\n                shortcut = item.shortcut\r\n            }\r\n        }\r\n\r\n        if (enabled) {\r\n            activitys.push({\r\n                Type: item.type.json,\r\n                PointerProgress: pointerProgress ? pointerProgress.json : null,\r\n                ProgressBar: progressBar ? progressBar.jsonObj : null,\r\n                ImageProgress: imageProgress?.enabled ? imageProgress.json : null,\r\n                Digits: digits.length > 0 ? digits.map(d => d.json) : null,\r\n                Shortcut: shortcut ? shortcut : null,\r\n                Icon: icon?.enabled ? icon.json : null\r\n            })\r\n        }\r\n    })\r\n    return activitys\r\n}\r\n\r\nfunction getTimeDigital(w: WatchFace | WatchAOD): DigitalDigit[] {\r\n    let timeDigits: DigitalDigit[] = []\r\n\r\n    if (w.dialFace.hoursDigital?.enabled) timeDigits.push(w.dialFace.hoursDigital.json)\r\n    if (w.dialFace.minutesDigital?.enabled) timeDigits.push(w.dialFace.minutesDigital.json)\r\n    if (w.dialFace.secondsDigital?.enabled) timeDigits.push(w.dialFace.secondsDigital.json)\r\n    \r\n    return timeDigits\r\n}\r\n\r\nfunction getDate(_date: WatchDate): DigitalDigit[] {\r\n    let dateDigits: DigitalDigit[] = []\r\n    _date.orderElements.forEach(item => {\r\n        let digit: WatchCommonDigit = null\r\n        let enabled = false\r\n        if ( item.type === DateType.Year.index) {\r\n            if (_date.year.enabled) enabled = true\r\n                digit = _date.year\r\n        } else if ( item.type === DateType.Month.index) {\r\n            if (_date.month.enabled ) { enabled = true;  digit = _date.month}\r\n            else if (_date.monthAsWord.enabled ) { enabled = true;  digit = _date.monthAsWord}\r\n        } else  if ( item.type === DateType.Day.index) {\r\n            if (_date.day.enabled) enabled = true\r\n            digit = _date.day\r\n        }\r\n        if (enabled) dateDigits.push(digit.json)\r\n    })\r\n    return dateDigits\r\n}\r\n\r\nfunction getWidgets(widgets: WatchWidgets): Widgets | null {\r\n    let result: Widgets = null\r\n    if (widgets) {\r\n        result = {\r\n            TopMaskImageIndex: widgets.topMaskImageIndex,\r\n            UnderMaskImageIndex: widgets.underMaskImageIndex,\r\n            Unknown4: widgets.showTimeOnEditScreen,\r\n            Widget: widgets.widgets?.length > 0 ? widgets.widgets.map((item) => getWidget(item)) : null\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getWidget(widget: WatchWidget): Widget | null {\r\n    return ({\r\n        X: widget.x,\r\n        Y: widget.y,\r\n        Width: widget.width,\r\n        Height: widget.height,\r\n        BorderActivImageIndex: widget.borderActivImageIndex,\r\n        BorderInactivImageIndex: widget.borderInactivImageIndex,\r\n        DescriptionImageBackground: widget.descriptionImageBackground.json,\r\n        DescriptionWidthCheck: widget.descriptionWidthCheck,\r\n        WidgetElement: widget.widgetElements?.length ? widget.widgetElements.map( (we) => getWidgetElement(we)) : null\r\n    })\r\n}\r\n\r\nfunction getWidgetElement(we: WatchWidgetElement): WidgetElement {\r\n    let activitys = activitysToJson(we.activitys)\r\n\r\n    let dateEnabled = we.date.day.enabled || we.date.month.enabled || we.date.monthAsWord.enabled || \r\n                      we.date.weekDay.enabled || we.date.year.enabled\r\n    let dateDigits = getDate(we.date)\r\n\r\n    return {\r\n        Preview: [\r\n            {\r\n                LangCode: LangCodeType.All.json,\r\n                ImageSet: {\r\n                    ImageIndex: we.previewImageIndex,\r\n                    ImagesCount: 1\r\n                }\r\n            }\r\n        ],\r\n        Date: dateEnabled ? {\r\n            DateDigits: dateDigits.length > 0 ? dateDigits : null,\r\n            WeeksDigits: we.date.weekDay.enabled ? we.date.weekDay.json : null,\r\n            DateProgressBar: null,\r\n            DateClockHand: null\r\n        } : null,\r\n        Activity: activitys?.length > 0 ? activitys : null\r\n    }\r\n}\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n  const { draw, className, ...rest } = props;\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const render = () => {\r\n      draw(canvas, context);\r\n    };\r\n    render();\r\n  }, [draw]);\r\n\r\n  return <canvas className={className} ref={canvasRef} {...rest} />;\r\n};\r\n\r\nexport default Canvas;\r\n","import { IImage } from \"../model/image.model\"\r\n\r\n\r\nexport function findImageById(id: number, images: IImage[]): HTMLImageElement | null {\r\n    if ( id === null || id === undefined ) return null\r\n    const i = images.find((item) => item.id === id)\r\n    if (i) {\r\n        return i.image\r\n    } else {\r\n        console.error('Image with Index  ' + id + ' not found')\r\n        return null\r\n    }\r\n}","import { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { ImageCoord } from \"../model/json.model\";\r\n\r\nexport default function drawImageCoords(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[], \r\n    imageCoord: ImageCoord) {\r\n        if (imageCoord.ImageIndex) {\r\n            let x = imageCoord.Coordinates?.X ? imageCoord.Coordinates.X : 0\r\n            let y = imageCoord.Coordinates?.Y ? imageCoord.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}","import { findImageById } from \"../shared/helper\"\r\nimport { IImage } from \"../model/image.model\"\r\nimport { AlignmentType, LangCodeType } from \"../model/types.model\"\r\nimport { MultilangImage } from \"../model/json.model\"\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\"\r\nimport drawSeparator from './imageCoords.element'\r\n\r\nexport default function drawDigitImage(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean,\r\n    weatherIconCenterX?: number\r\n    ): [number, number] | null  {\r\n    const x = followXY ? followXY[0] : ( digit.json?.Digit?.Image?.X ? digit.json?.Digit?.Image?.X : 0 )\r\n    const y = followXY ? followXY[1] : ( digit.json?.Digit?.Image?.Y ? digit.json?.Digit?.Image?.Y : 0 )\r\n    const imageSetIndex = findImageIndex(digit.json.Digit?.Image?.MultilangImage);\r\n    const unitImageSetIndex =findImageIndex(digit.json.Digit?.Image?.MultilangImageUnit);\r\n\r\n    //console.log(number, x, y, imageSetIndex, digit.json.Digit.Image.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex);\r\n    \r\n\r\n    if (digit.json.Digit?.Image?.MultilangImage &&\r\n        digit.json.Digit.Image.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n            let strNumber = number.toString()\r\n            if (number < 0) strNumber = (-number).toString()\r\n            if ( !digit.json.Digit.DisplayFormAnalog && (digit.json.Digit.PaddingZero || paddingZeroFix)) {\r\n                strNumber = strNumber.padStart(digit.con.numberLenght, '0' )\r\n            }\r\n            let ar: HTMLImageElement[] = []\r\n            if (digit.json.Digit.Image.DelimiterImageIndex) {\r\n                if (number < 0){\r\n                    const img = findImageById(digit.json.Digit.Image.DelimiterImageIndex, images)\r\n                    if (img) ar.push(img)\r\n                }\r\n            }\r\n\r\n            if (digit.json.Digit.DisplayFormAnalog) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex + number, images)\r\n                if (img) ar.push(img)\r\n            } else {\r\n                ar = ar.concat(getImages(images, strNumber, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImagesCount,\r\n                    digit.json.Digit.Image.DecimalPointImageIndex ))\r\n            }\r\n\r\n            let widthZero = 0\r\n            const img = findImageById(digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex, images)\r\n            if (img) { widthZero = img.width }\r\n\r\n            let widthDelimiter = 0\r\n            if (digit.json.Digit.Image.DelimiterImageIndex) {\r\n                const img = findImageById(digit.json.Digit.Image.DelimiterImageIndex, images)\r\n                widthDelimiter = img.width\r\n            }\r\n            let widthUnit = 0\r\n            if (digit.json.Digit.Image.MultilangImageUnit && digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex]) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) {\r\n                    ar.push(img)\r\n                    widthUnit = img.width\r\n                }\r\n            }\r\n\r\n            const followXY = drawImages(ctx, ar, x, y, digit.json.Digit.Spacing, \r\n                digit.json.Digit.Alignment, digit.con.numberLenght, strNumber.length, \r\n                drawBorder, weatherIconCenterX, widthUnit, widthZero, widthDelimiter)\r\n\r\n            if ( digit.json.Separator) {\r\n                drawSeparator(ctx, images, digit.json.Separator)\r\n            }\r\n            return followXY\r\n        }\r\n        return followXY;\r\n    }\r\n\r\nfunction getImages(\r\n    images: IImage[], \r\n    strNumber: string, \r\n    startImageIndex: number, \r\n    count: number, decimalPointer: number): HTMLImageElement[] {\r\n    const ar: HTMLImageElement[] = []\r\n    for (let i = 0; i < strNumber.length; i++) {\r\n        if (decimalPointer && i === strNumber.length - 2) {\r\n            const img = findImageById(decimalPointer, images)\r\n            if (img) { ar.push(img) }\r\n        }\r\n        var chr = strNumber.charAt(i);\r\n        var n = parseInt(chr)\r\n        if (!isNaN(n) && n < count) {\r\n            const img = findImageById(startImageIndex + n, images)\r\n            if (img) { ar.push(img) }\r\n        } else {\r\n            alert('cant parse number string: ' + strNumber + ' at index ' + i)\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction drawImages(\r\n    ctx: CanvasRenderingContext2D,\r\n    ar: HTMLImageElement[], \r\n    startx: number, \r\n    starty: number, \r\n    spacing: number, \r\n    alignment: string, \r\n    numberLenght: number, \r\n    strLenght: number, \r\n    drawborder: boolean,\r\n    weatherIconCenterX?: number,\r\n    widthUnit?: number,\r\n    widthZero?: number,\r\n    widthDelimiter?: number): [number, number] | null  {\r\n    if ( ar.length === 0) return\r\n    \r\n    if (!spacing) spacing = 0\r\n    \r\n    let imageWidth: number = 0\r\n    //let maxWidth: number = 0\r\n    ar.forEach(img => {\r\n        imageWidth += img.width\r\n        imageWidth += spacing\r\n        //maxWidth += img.width\r\n        //maxWidth += spacing > 0 ? spacing : 0\r\n    })\r\n    imageWidth -= spacing\r\n    //maxWidth -= spacing > 0 ? spacing : 0\r\n\r\n    //if (paddingLenght > 0) {\r\n        //maxWidth +=  widthZero * paddingLenght + 1\r\n        //if (spacing > 0) maxWidth += Math.abs(spacing) * (paddingLenght - 1)\r\n    //}\r\n\r\n    //if (widthUnit) imageWidth = imageWidth - widthUnit\r\n\r\n    //console.log(numberLenght, strLenght, widthUnit);\r\n    \r\n    let maxWidth: number = widthZero * strLenght + widthZero * (numberLenght - strLenght)\r\n    if (spacing > 0 ) maxWidth += spacing * (ar.length + numberLenght - strLenght - 1)\r\n    if (widthUnit) maxWidth = maxWidth + widthUnit\r\n    if (widthDelimiter) maxWidth = maxWidth + widthDelimiter\r\n\r\n    if ( imageWidth > maxWidth ) maxWidth = imageWidth;\r\n\r\n    let x = startx\r\n    let y = starty\r\n    if (alignment === AlignmentType.Right.json) { // right\r\n        x = x + maxWidth - (imageWidth)\r\n    } else if (alignment === AlignmentType.Center.json) { // center\r\n        if (weatherIconCenterX) {\r\n            x = weatherIconCenterX - (imageWidth - widthUnit) / 2\r\n        } else {\r\n            x = x + maxWidth / 2 - (imageWidth) / 2\r\n        }\r\n    }\r\n    \r\n\r\n    let height = 0\r\n\r\n    ar.forEach(img => {\r\n        ctx.drawImage(img, x, y);\r\n        height = Math.max(img.height, height)\r\n        x += img.width\r\n        if ( spacing ) x += spacing\r\n    })\r\n    if ( drawborder) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = 'gray'\r\n        ctx.rect(startx, starty, maxWidth, height);\r\n        ctx.stroke();\r\n    }\r\n\r\n    return [x, y]\r\n}\r\n\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let resultIndex = 0\r\n    ar.forEach((item, index) => {\r\n        if ( item.LangCode === LangCodeType.All.json) {\r\n            resultIndex = index\r\n        }\r\n    })\r\n   \r\n    return resultIndex\r\n  }","\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\n\r\nexport function drawSystemFont(\r\n    ctx: CanvasRenderingContext2D,\r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize: number = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let spacing: number = digit.json.Digit.Spacing\r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    ctx.save();\r\n    var tx = systemFont.Coordinates?.X ? systemFont.Coordinates.X : 0;\r\n    var ty = systemFont.Coordinates?.Y ? systemFont.Coordinates.Y : 0;\r\n    let radians = Math.PI / 180 * (systemFont.Angle)\r\n    ctx.translate(tx, ty);\r\n    ctx.rotate(radians);\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    let x = 0;\r\n    for (var i = 0; i < text.length; i++) {\r\n        ctx.fillText(text[i], x, 0);\r\n        x = x + ctx.measureText(text[i]).width + spacing\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function drawSystemFontFontRotated(\r\n    ctx: CanvasRenderingContext2D, \r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    \r\n        if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let radius = systemFont.FontRotate.Radius\r\n    let spacing: number = digit.json.Digit.Spacing\r\n   \r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    var tx = systemFont.FontRotate?.X ? systemFont.FontRotate.X : 0;\r\n    var ty = systemFont.FontRotate?.Y ? systemFont.FontRotate.Y : 0;\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    \r\n    ctx.save();\r\n    ctx.translate(tx, ty);\r\n    if ( systemFont.FontRotate.RotateDirection !== 1) {\r\n        ctx.rotate(Math.PI / 180 * systemFont.Angle);\r\n        for (var i = 0; i < text.length; i++) {\r\n            let width = ctx.measureText(text[i]).width\r\n            ctx.fillText(text[i], 0, - systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * spacingAngle );\r\n        }\r\n    } else {\r\n        ctx.rotate(Math.PI / 180 * (180 - systemFont.Angle) );\r\n        for (var j = 0; j < text.length; j++) {\r\n            let width = ctx.measureText(text[j]).width\r\n            ctx.fillText(text[j], 0, + systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * -spacingAngle );\r\n        }\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function addUnitsAndSeparator(text: string, digit: WatchCommonDigit, forceSeparator?: boolean): string {\r\n    let systemFont = digit.json.Digit?.SystemFont\r\n    let result = text\r\n    if ( !systemFont) return result\r\n   \r\n    if (systemFont.ShowUnitCheck === -1 || ( systemFont.ShowUnitCheck !== 0 && forceSeparator) ) {\r\n        result = result + digit.con.unit[0]\r\n    } else if (systemFont.ShowUnitCheck === 1 ) {\r\n        result = result + digit.con.unit[1]\r\n    } else if ( systemFont.ShowUnitCheck === 2) {\r\n        result = result + digit.con.unit[2]\r\n    } \r\n    if (digit.json.Separator) {\r\n        result = result + digit.con.separator\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSystemFontText(digit: WatchCommonDigit, value: number): string {\r\n    let systemFontText = value.toString()\r\n    \r\n    if (digit.json.Digit.PaddingZero) {\r\n        systemFontText = systemFontText.padStart(digit.con.numberLenght, '0')\r\n    }\r\n    if (digit.con.decimalDelimiter) {\r\n        if ( systemFontText.length > 3)\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-2) + '.' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n        else if ( systemFontText.length > 1 )\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-1) + '.' + systemFontText.substring(systemFontText.length-1, systemFontText.length)\r\n    }\r\n    if (digit.con.timeDelimiter && systemFontText.length > 2 )\r\n        systemFontText = systemFontText.substring(0, systemFontText.length-2) + ':' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n    systemFontText = addUnitsAndSeparator(systemFontText, digit)\r\n    return systemFontText\r\n}\r\n\r\n\r\n","import { IImage } from \"../model/image.model\"\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\"\r\nimport drawDigitImage from \"./digitImage.element\"\r\nimport {drawSystemFont, drawSystemFontFontRotated} from \"./systemfont.element\"\r\n\r\nexport default function drawDigit(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean,\r\n    systemFontText?: string,\r\n    weatherIconCenterX?: number\r\n    ): [number, number] | null  {\r\n        if (!digit) return\r\n        if (digit.enabledImage) \r\n            return drawDigitImage(ctx, images, digit, number, followXY, drawBorder, paddingZeroFix, weatherIconCenterX)\r\n        if (digit.enabledSystemFont || digit.enabledSystemFontCircle) {\r\n            if (!systemFontText) return followXY\r\n            if (digit.enabledSystemFontCircle)\r\n                return drawSystemFontFontRotated(ctx, digit, systemFontText)\r\n            else\r\n                return drawSystemFont(ctx, digit, systemFontText)\r\n        }\r\n        return followXY\r\n}\r\n\r\n","import Color from \"../shared/color\";\r\nimport { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport {  WatchProgressBar } from \"../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarCircle(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if ( progressBar.jsonObj?.AngleSettings) {\r\n\r\n            let width = progressBar.jsonObj.Width ? progressBar.jsonObj.Width : 0\r\n\r\n            let angleSettings = progressBar.jsonObj.AngleSettings\r\n            let ax = angleSettings.X ? angleSettings.X : 0\r\n            let ay = angleSettings.Y ? angleSettings.Y : 0\r\n            if (value > total) value = total\r\n            let startAngle = angleSettings.StartAngle ? angleSettings.StartAngle : 0\r\n            let endAngle = angleSettings.EndAngle ? angleSettings.EndAngle : 360\r\n            let sector_angle = startAngle + (value * (endAngle - startAngle ) / total)\r\n            let radius = angleSettings.Radius  \r\n            \r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n\r\n                    let dX = (ax - radius - (width / 2))\r\n                    let dY = (ay - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    drawArcPath(ctx, progressBar.jsonObj.Flatness, \r\n                        ax, ay, startAngle, sector_angle, radius, width)\r\n                    \r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n\r\n                    /// draw the image\r\n                    ctx.drawImage(img, ax - img.width/2, ay - img.height/2);\r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n\r\n                    let dX = (ax - radius - (width / 2))\r\n                    let dY = (ay - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    // begin by calling ctx.beginPath\r\n                    ctx.beginPath();\r\n\r\n                    let radianStart = (Math.PI/180) * (startAngle-90)\r\n                    let radianEnd = (Math.PI/180) * (sector_angle-90)\r\n                    let clockwise = radianStart < radianEnd;\r\n                    \r\n                    // calling canvas src with all arguments\r\n                    ctx.arc(ax, ay,\r\n                        radius, radianStart, radianEnd, !clockwise);\r\n                    // set stroke and fill style\r\n                    ctx.strokeStyle = color;\r\n                    ctx.lineWidth = width;\r\n                    // fill, and stroke\r\n                    ctx.stroke();\r\n                    drawColorEndings(ctx, color, progressBar.jsonObj.Flatness, \r\n                        ax, ay, startAngle, sector_angle, radius, width)\r\n                    ctx.lineWidth = 1;\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                if (img) {\r\n                    let _x = ax + (radius) * Math.cos(Math.PI * (sector_angle - 90) / 180)\r\n                    let _y = ay + (radius) * Math.sin(Math.PI * (sector_angle - 90) / 180)\r\n                    ctx.drawImage(img, _x, _y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\nfunction drawArcPath(ctx: CanvasRenderingContext2D, flatness: number, x: number, y: number, \r\n    startAngle: number, endAngle: number, radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        let xc1 = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let yc1 = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let xc2 = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let yc2 = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc1, yc1, width/2, radianStart - Math.PI, radianStart, !clockwise)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc2, yc2, width/2, radianEnd , radianEnd + Math.PI, !clockwise)\r\n\r\n    } else if (flatness === 90) {\r\n        // spike\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        let x2 = x + (radius) * Math.cos(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        let y2 = y + (radius) * Math.sin(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        \r\n        let x3 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y3 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x4 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y4 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let x5 = x + (radius) * Math.cos(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y5 = y + (radius) * Math.sin(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        \r\n        let x6 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y6 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        \r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        \r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x5, y5);\r\n        ctx.lineTo(x6, y6);\r\n\r\n    } else {\r\n        // flat\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x3 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y3 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let x4 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y4 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.moveTo(x1, y1)\r\n        ctx.lineTo(x2, y2)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x4, y4)\r\n    }\r\n}\r\n\r\nfunction drawColorEndings(ctx: CanvasRenderingContext2D, color: string, \r\n    flatness: number, x: number, y: number, startAngle: number, endAngle: number, \r\n    radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        let _x = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let _y = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n\r\n        _x = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        _y = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2* Math.PI)\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n    } else if (flatness === 90) {\r\n        // spike\r\n        let x1 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x3 = x + (radius) * Math.cos(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y3 = y + (radius) * Math.sin(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        x1 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y1 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x2 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y2 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x3 = x + (radius) * Math.cos(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        y3 = y + (radius) * Math.sin(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import Color from \"../shared/color\";\r\nimport { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport {  WatchProgressBar } from \"../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarLinear(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if (value > total) value = total\r\n        if ( progressBar.jsonObj?.LinearSettings) {\r\n            let lineB = progressBar.jsonObj.LinearSettings\r\n            if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let endy = lineB.EndY ? lineB.EndY : y + img.height\r\n                    let width = Math.min(endx - x, img.width)\r\n                    let height = Math.min(endy - y, img.height)\r\n                    ctx.drawImage(img, x, y, width, height);\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let width = value * (endx - x) / total\r\n                    width = Math.min(width, img.width)\r\n                    let height = progressBar.jsonObj.Width\r\n                    height = Math.min(height, img.height)\r\n                    \r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    drawArcPath(ctx, progressBar.jsonObj.Flatness, x, y, width, height)\r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n                    \r\n                    /// draw the image\r\n                    ctx.drawImage(img, x, y);\r\n                    \r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n                    ctx.fillStyle = color\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let height = progressBar.jsonObj.Width\r\n                    let width = value * (endx - x) / total\r\n                    ctx.fillRect(x, y, width, height)\r\n                    drawColorEndings(ctx, color, progressBar.jsonObj.Flatness, x, y, width, height)\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                \r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let width = value * (endx - x) / total - img.width\r\n                    if ( width >= 0)\r\n                        ctx.drawImage(img, x + width, y);\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\n\r\nfunction drawArcPath(ctx: CanvasRenderingContext2D,  \r\n    flatness: number, x: number, y: number, width: number, height: number) {\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        let xc1 = x \r\n        let y1 = y \r\n        \r\n        let xc2 = x + width - height / 2\r\n        let y2 = y + height\r\n\r\n        ctx.arc(xc1, y + height/2, height/2, 0.5*Math.PI, 1.5*Math.PI );\r\n        ctx.lineTo(xc2, y1)\r\n        ctx.arc(xc2, y + height/2, height/2, 1.5*Math.PI, 0.5*Math.PI );\r\n        ctx.lineTo(xc1, y2)\r\n    } else {\r\n        ctx.rect(x, y, width, height)\r\n    }\r\n}\r\n\r\nfunction drawColorEndings(ctx: CanvasRenderingContext2D, color: string, \r\n    flatness: number, x: number, y: number, width: number, height: number) {\r\n    if (width < 3) return\r\n    \r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(x, y+height/2, height/2-1, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n\r\n        let x2 = x + width\r\n\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(x2, y+height/2, height/2-1, 0, 2* Math.PI)\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n    } \r\n}","import { findImageById } from \"../shared/helper\";\r\nimport { Constant } from \"../shared/constant\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { MultilangImage } from \"../model/json.model\";\r\nimport { WatchClockHand } from \"../model/watchFace.model\";\r\nimport { LangCodeType } from \"../model/types.model\";\r\n\r\nexport default function drawclockhand(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    clockHand: WatchClockHand, \r\n    value: number, \r\n    total: number) {\r\n        if (total === null) return\r\n        if (clockHand.json.Scale) {\r\n            const scaleImageSetIndex = findImageIndex(clockHand.json.Scale?.ImageSet);\r\n            if (clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex >= 0) {\r\n                let x = clockHand.json.Scale.Coordinates?.X ? clockHand.json.Scale.Coordinates?.X : 0\r\n                let y = clockHand.json.Scale.Coordinates?.Y ? clockHand.json.Scale.Coordinates?.Y : 0\r\n                let img = findImageById(clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n            }\r\n        }\r\n        if (clockHand.json.Pointer?.ImageIndex >= 0) {\r\n            let x = clockHand.json.X ? clockHand.json.X : 0\r\n            let y = clockHand.json.Y ? clockHand.json.Y : 0\r\n            if ( ! (clockHand.json.X > 0) && ! (clockHand.json.Y > 0)) {\r\n                x = clockHand.json.X ? clockHand.json.X : Constant.width / 2\r\n                y = clockHand.json.Y ? clockHand.json.Y : Constant.height / 2\r\n            }\r\n            let img = findImageById(clockHand.json.Pointer?.ImageIndex, images)\r\n            if (img) {\r\n                let offsetX = clockHand.json.Pointer.Coordinates?.X ? clockHand.json.Pointer.Coordinates?.X : 0\r\n                let offsetY = clockHand.json.Pointer.Coordinates?.Y ? clockHand.json.Pointer.Coordinates?.Y : 0\r\n                \r\n                let _startAngle = clockHand.json.StartAngle ? clockHand.json.StartAngle: 0\r\n                let _endAngle = clockHand.json.EndAngle ? clockHand.json.EndAngle: 360\r\n                if (value > total) value = total\r\n                let angle = _startAngle + (value * (_endAngle - _startAngle ) / total)\r\n                //angle = Math.min(angle, _endAngle)\r\n                //angle = Math.max(angle, _startAngle)\r\n                let radians = (Math.PI/180) * angle\r\n                \r\n                ctx.save(); // save current state\r\n                ctx.translate(x, y); // change origin to center of rotation\r\n                ctx.rotate(radians); // rotate\r\n                ctx.drawImage(img, -offsetX, -offsetY, img.width, img.height);\r\n                ctx.restore(); // restore original states (no rotation etc)\r\n            }\r\n        }\r\n        if (clockHand.json.Cover?.ImageIndex >= 0) {\r\n            let x = clockHand.json.Cover?.Coordinates?.X ? clockHand.json.Cover.Coordinates.X : 0\r\n            let y = clockHand.json.Cover?.Coordinates?.Y ? clockHand.json.Cover.Coordinates?.Y : 0\r\n            let img = findImageById(clockHand.json.Cover.ImageIndex, images)\r\n            if ( img ) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }","import { IImage } from \"../model/image.model\";\r\nimport { ActivityType, FollowType } from \"../model/types.model\";\r\nimport { WatchActivity } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\nimport drawImageProgress from \"./imageProgress.element\";\r\nimport drawProgressBarCircle from \"./progressBarCircle.element\";\r\nimport drawProgressBarLinear from \"./progressBarLinear.element\";\r\nimport drawclockhand from \"./clockHand.element\";\r\nimport { getSystemFontText } from \"./systemfont.element\";\r\nimport { oneCoordinates } from \"../model/json.model\";\r\nimport { findImageById } from \"../shared/helper\";\r\n\r\ninterface IDigitDraw {\r\n    cur: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    min: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    max: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    imageProgress: {\r\n        value: number,\r\n        total: number\r\n    }\r\n}\r\n\r\nexport default function drawActivityList(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    activitys: WatchActivity[],\r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    mainScreen: boolean = false\r\n    ) {\r\n        let val = 0\r\n        let total = 0\r\n        if (!activitys) return\r\n\r\n        let weatherIconCenterX = 0\r\n        let weatherTemperatureActivityIndex: number;\r\n        if ( mainScreen) {\r\n            activitys.forEach((activity, index) => {\r\n                if (activity.type === ActivityType.Weather) {\r\n                    if (activity.digit.enabledImage) {\r\n                        weatherTemperatureActivityIndex = index\r\n                    }\r\n                    if (activity.imageProgress.enabled && activity.imageProgress.json?.ImageSet?.ImageIndex &&\r\n                        activity.imageProgress.json?.Coordinates && oneCoordinates(activity.imageProgress.json.Coordinates)\r\n                        ) {\r\n\r\n                        let imageIndexWeather = activity.imageProgress.json.ImageSet.ImageIndex;\r\n                        let _image_x = activity.imageProgress.json.Coordinates[0].X;\r\n                        let img = findImageById(imageIndexWeather, images);\r\n                        if (img) {\r\n                            weatherIconCenterX = _image_x + img.width / 2;\r\n                            if ( weatherTemperatureActivityIndex && index >= weatherTemperatureActivityIndex) weatherIconCenterX = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }) \r\n        }\r\n\r\n        activitys.forEach((activity) => {\r\n            switch (activity.type) {\r\n                case ActivityType.Battery:\r\n                    val = watchState.battery\r\n                    total = watchState.batteryGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Steps:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Calories:\r\n                    val = watchState.calories\r\n                    total = watchState.caloriesGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.HeartRate:\r\n                    val = watchState.hearthrate\r\n                    total = watchState.hearthrateGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Pai:\r\n                    val = watchState.pai\r\n                    total = watchState.paiGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Distance:\r\n                    val = watchState.distance\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null,\r\n                        max: null, \r\n                        imageProgress: null}, digitBorder)\r\n                    break;\r\n                case ActivityType.StandUp:\r\n                    val = watchState.standup\r\n                    total = watchState.standupGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total },\r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Weather:\r\n                    drawActivity(ctx, images, activity, {\r\n                        cur: { value: watchState.temperature, total: null },\r\n                        min: { value: watchState.temperatureMin, total: null }, \r\n                        max: { value: watchState.temperatureMax, total: null }, \r\n                        imageProgress: { value: watchState.weatherIcon, total: 29}},\r\n                        digitBorder, weatherIconCenterX)\r\n                        break;\r\n                case ActivityType.UVindex:\r\n                    val = watchState.uvIndex\r\n                    total = watchState.uvIndexGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null },\r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirQuality:\r\n                    val = watchState.airQuality\r\n                    total = watchState.airQualityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Humidity:\r\n                    val = watchState.humidity\r\n                    total = watchState.humidityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null,\r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Sunrise:\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: watchState.sunrise, total: null }, \r\n                        min: { value: watchState.sunrise, total: null }, \r\n                        max: { value: watchState.sunset, total: null }, \r\n                        imageProgress: { value: 1, total: 2}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.WindForce:\r\n                    val = watchState.windForce\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: null}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirPressure:\r\n                    val = watchState.airPressure\r\n                    total = watchState.airPressureGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Stress:\r\n                    val = watchState.stress\r\n                    total = watchState.stressGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.ActivityGoal:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.FatBurning:\r\n                    val = watchState.fatBurning\r\n                    total = watchState.fatBurningGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n}\r\n\r\nfunction drawActivity(\r\n    ctx: CanvasRenderingContext2D, images: IImage[], a: WatchActivity, \r\n    values: IDigitDraw, digitBorder: boolean, weatherIconCenterX?: number) {\r\n    let followXY = null\r\n\r\n    if (a.imageProgress.enabled) {\r\n        drawImageProgress(ctx, images, a.imageProgress, values.imageProgress.value, values.imageProgress.total)\r\n    }\r\n    if (a.progressBar.enabledLinear) {\r\n        drawProgressBarLinear(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.progressBar.enabledCircle) {\r\n        drawProgressBarCircle(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.pointerProgress.enabled) {\r\n        drawclockhand(ctx, images, a.pointerProgress, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.icon.enabled) {\r\n        drawImageCoords(ctx, images, a.icon.json)\r\n    }\r\n    if (a.digit?.enabled) {\r\n        followXY = drawDigit(ctx, images, a.digit, values.cur.value, \r\n            followXY, digitBorder, \r\n            false, getSystemFontText(a.digit, values.cur.value), weatherIconCenterX)\r\n    }\r\n    if (a.digitMin?.enabled && values.min) {\r\n        followXY = drawDigit(ctx, images, a.digitMin, values.min.value, \r\n            a.digitMin.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, \r\n            false, getSystemFontText(a.digitMin, values.min.value))\r\n    }\r\n    if (a.digitMax?.enabled && values.max) {\r\n        drawDigit(ctx, images, a.digitMax, values.max.value, \r\n            a.digitMax.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, \r\n            false, \r\n            getSystemFontText(a.digitMax, values.max.value))\r\n    }\r\n}\r\n","import { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { WatchImageProgress } from \"../model/watchFace.model\";\r\nimport { ImageProgressDisplayType } from \"../model/types.model\";\r\n\r\nexport default function drawImageProgress(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    imageProgress: WatchImageProgress,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if (imageProgress.enabled && imageProgress.json.ImageSet?.ImageIndex) {\r\n            if ( imageProgress.json.Coordinates) {\r\n\r\n                let count = imageProgress.json.ImageSet.ImagesCount-1\r\n                let coors = imageProgress.json.Coordinates\r\n\r\n                let s = Math.ceil(value / (total / count))\r\n                if (s > count) s = count\r\n\r\n                if (value > total) value = total\r\n\r\n                let initial = 0\r\n                if (imageProgress.json.DisplayType !== ImageProgressDisplayType.Continuous.json)\r\n                    initial = s\r\n\r\n                for (let i = initial; i <= s; i++) {\r\n                    let x = i < coors?.length ? (coors[i]?.X ? coors[i].X : 0) : (coors[coors.length-1]?.X ? coors[coors.length-1].X : 0)\r\n                    let y = i < coors?.length ? (coors[i]?.Y ? coors[i].Y : 0) : (coors[coors.length-1]?.Y ? coors[coors.length-1].Y : 0)\r\n                    let imageIndex = imageProgress.json.ImageSet.ImageIndex + i\r\n                    const img = findImageById(imageIndex, images)\r\n                    if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}","import { IImage } from \"../model/image.model\";\r\nimport { FollowType } from \"../model/types.model\";\r\nimport { ElementOrderItem, WatchDate } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function drawDate(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    date: WatchDate,\r\n    orderElementsDate: ElementOrderItem[],\r\n    watchState: WatchState,\r\n    drawborder: boolean\r\n    ) {\r\n        let followXY = null\r\n\r\n        let s: string[] = []\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            s[i] = ''\r\n        }\r\n       \r\n        for (let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            let _temp = null\r\n            let _follow = false\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        _follow = date.year.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.year.toString().padStart(date.year.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.year)\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        _follow = date.month.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.month.toString().padStart(date.month.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.month)\r\n                    } \r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        _follow = date.day.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.day.toString().padStart(date.day.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.day)\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (_temp) {\r\n                for(let j = i+1; j < orderElementsDate.length ; j++) {\r\n                    s[j] = s[j] + _temp\r\n                }\r\n                if (!_follow) {\r\n                    s[i] = s[i] + _temp\r\n                } else {\r\n                    if ( s[i-1] !== '')\r\n                        s[i-1] = s[i-1] + _temp\r\n                    else \r\n                        s[i-2] = s[i-2] + _temp\r\n                    s[i] = ''\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.year, watchState.year, date.year.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.month, watchState.month, date.month.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    } else if (date.monthAsWord.enabled) {\r\n                        drawDigit(ctx, images, date.monthAsWord, watchState.monthasword)\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.day, watchState.day, date.day.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (date.weekDay.enabled) {\r\n            drawDigit(ctx, images, date.weekDay, watchState.weekday)\r\n        }\r\n}\r\n","import { IImage } from \"../model/image.model\";\r\nimport { WatchDialFace } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport drawClockHand from \"./clockHand.element\";\r\n\r\n    export default function drawTimeAnalog(ctx: CanvasRenderingContext2D, \r\n        images: IImage[],\r\n        dialFace: WatchDialFace,\r\n        watchState: WatchState\r\n        ) {\r\n        if ( dialFace.hoursClockhand?.enabled) {\r\n            if ( watchState.hours < 12)\r\n                drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours, 12 )\r\n            else \r\n            drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours-12, 12 )\r\n        }\r\n        if ( dialFace.minutesClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.minutesClockhand, watchState.minutes, 60 )\r\n        }\r\n        if ( dialFace.secondsClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.secondsClockhand, watchState.seconds, 60 )\r\n        }\r\n    }\r\n","import { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport {  MultilangImage } from \"../model/json.model\";\r\nimport { WatchMultilangImageCoords } from \"../model/watchFace.model\";\r\nimport { LangCodeType } from \"../model/types.model\";\r\n\r\nexport default function drawMultilangImageCoords(ctx: CanvasRenderingContext2D, images: IImage[], \r\n    imageCoord: WatchMultilangImageCoords) {\r\n\r\n        const imageSetIndex = findImageIndex(imageCoord.json?.ImageSet);\r\n    \r\n        if (imageCoord.json.ImageSet &&\r\n            imageCoord.json.ImageSet[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n\r\n            let x = imageCoord.json.Coordinates?.X ? imageCoord.json.Coordinates.X : 0\r\n            let y = imageCoord.json.Coordinates?.Y ? imageCoord.json.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.json.ImageSet[imageSetIndex].ImageSet.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }","import { IImage } from \"../model/image.model\";\r\nimport { FollowType } from \"../model/types.model\";\r\nimport { WatchDialFace } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawMultilangImageCoords from \"./multiLangImageCoords.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function drawTimeDigital(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    timeDigital: WatchDialFace,\r\n    watchState: WatchState,\r\n    digitBorder: boolean\r\n    ) {\r\n    let followXY = null\r\n\r\n    let s_hours = ''\r\n    let s_minutes = ''\r\n    let s_seconds = ''\r\n   \r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        s_seconds = watchState.seconds.toString().padStart(timeDigital.secondsDigital.con.numberLenght, '0')\r\n        s_seconds = addUnitsAndSeparator(s_seconds, timeDigital.secondsDigital)\r\n    }\r\n    \r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        s_minutes = watchState.minutes.toString().padStart(timeDigital.minutesDigital.con.numberLenght, '0')\r\n        s_minutes = addUnitsAndSeparator(s_minutes, timeDigital.minutesDigital, timeDigital.minutesDigital.json.CombingMode !== FollowType.Single.json)\r\n        if (timeDigital.secondsDigital?.enabled ) {\r\n            if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Single.json) {\r\n                s_minutes = s_minutes + s_seconds\r\n                s_seconds = ''\r\n            } else {\r\n                s_seconds = s_minutes + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        s_hours = watchState.hours.toString()\r\n        if (timeDigital.hoursDigital.json.Digit.PaddingZero) s_hours = s_hours.padStart(timeDigital.hoursDigital.con.numberLenght, '0')\r\n        s_hours = addUnitsAndSeparator(s_hours, timeDigital.hoursDigital)\r\n        if (timeDigital.minutesDigital.json.CombingMode !== FollowType.Single.json) {\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Single.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n            s_hours = s_hours + s_minutes\r\n            s_minutes = ''\r\n        } else {\r\n            s_minutes = s_hours + s_minutes\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Single.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.hoursDigital, watchState.hours,\r\n            timeDigital.hoursDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, s_hours)\r\n    }\r\n\r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.minutesDigital, watchState.minutes, \r\n            timeDigital.minutesDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_minutes)\r\n    }\r\n\r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        drawDigit(ctx, images, timeDigital.secondsDigital, watchState.seconds, \r\n            timeDigital.secondsDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_seconds)\r\n    }\r\n    \r\n    if (timeDigital.am && timeDigital.am.enabled && watchState.hours < 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.am)\r\n    }\r\n    if (timeDigital.pm && timeDigital.pm.enabled && watchState.hours >= 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.pm)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IImage } from \"../model/image.model\";\r\nimport { WatchWidget, WatchWidgets } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport { findImageById } from \"../shared/helper\";\r\nimport drawActivityList from \"./activity.element\";\r\nimport drawDate from \"./date.element\";\r\n\r\nexport default function drawWidgets(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[],\r\n    widgets: WatchWidgets,\r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    ) {\r\n    if (widgets) {\r\n        widgets.widgets.forEach((widget, index) => {\r\n            drawWidget(ctx, images, index, widget, watchState, digitBorder, borderWidget, showWidgetPreview, widgets.topMaskImageIndex, widgets.underMaskImageIndex)\r\n        });\r\n    }\r\n}\r\n\r\nfunction drawWidget(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    index: number,\r\n    widget: WatchWidget, \r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    topMask: number,\r\n    bottomMask: number,\r\n    ) {\r\n    if (widget) {\r\n        if (widget.widgetElements && widget.widgetElements.length > 0) {\r\n            let previewIndex = watchState.widgets && index < watchState.widgets.length ? watchState.widgets[index] : 0\r\n            if (showWidgetPreview && widget.widgetElements[previewIndex].previewImageIndex) {\r\n                // show only previews of widgets\r\n                const imgBack = findImageById(bottomMask, images)\r\n                if (imgBack) ctx.drawImage(imgBack, 0, 0)\r\n                \r\n                const imgTop = findImageById(topMask, images)\r\n                if (imgTop) ctx.drawImage(imgTop, 0, 0)\r\n                \r\n                let previewImageIndex = widget.widgetElements[previewIndex].previewImageIndex;\r\n                const img = findImageById(previewImageIndex, images)\r\n                if (img) ctx.drawImage(img, widget.x, widget.y)\r\n                const imgFrame: HTMLImageElement = (watchState.activeWidget === index) ?\r\n                    findImageById(widget.borderActivImageIndex, images) :\r\n                    findImageById(widget.borderInactivImageIndex, images)\r\n                if (imgFrame) ctx.drawImage(imgFrame, widget.x, widget.y)\r\n            } else {\r\n                // show all activities\r\n                let ar = widget.widgetElements[previewIndex].activitys;\r\n                if ( ar ) drawActivityList(ctx, images, ar, watchState, digitBorder);\r\n                if (widget.widgetElements[previewIndex].date) {\r\n                    drawDate(\r\n                      ctx,\r\n                      images,\r\n                      widget.widgetElements[previewIndex].date,\r\n                      widget.widgetElements[previewIndex].date.orderElements,\r\n                      watchState,\r\n                      digitBorder\r\n                    );\r\n                  }\r\n            }\r\n        }\r\n        if (borderWidget) {\r\n            ctx.strokeStyle = 'white'\r\n            ctx.strokeRect(widget.x, widget.y, widget.width, widget.height)\r\n        } \r\n    }\r\n}\r\n\r\n\r\n","import { FC, useContext, useState } from \"react\";\r\n\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport Canvas from \"./canvas.function\";\r\nimport drawActivity from \"../../preview/activity.element\";\r\nimport drawBackground from \"../../preview/background.element\";\r\nimport drawAodBackground from \"../../preview/backgroundaod.element\";\r\nimport drawDate from \"../../preview/date.element\";\r\nimport drawStatus from \"../../preview/status.element\";\r\nimport drawTimeAnalog from \"../../preview/timeAnalog.element\";\r\nimport drawTimeDigital from \"../../preview/timeDigital.element\";\r\nimport drawWidgets from \"../../preview/widgets.element\";\r\nimport cl from \"./previewComponent.module.css\";\r\n\r\ninterface IProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst storage_items = {\r\n  preview_white_grid: \"preview_white_grid\",\r\n  preview_black_grid: \"preview_black_grid\",\r\n  preview_digit_border: \"preview_digit_border\",\r\n};\r\n\r\nconst PreviewComponent: FC<IProps> = ({ width, height }) => {\r\n  const { images, watchface, watchState, previewScreenNormal } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [borderWidget, setBorderWidget] = useState<boolean>(false)\r\n  const [showWidgetPreview, setShowWidgetPreview] = useState<boolean>(false)\r\n\r\n  const [x, setX] = useState<number>(0);\r\n  const [y, setY] = useState<number>(0);\r\n  const [whiteGrid, setWhiteGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_white_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_white_grid))\r\n      : false\r\n  );\r\n  const [blackGrid, setBlackGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_black_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_black_grid))\r\n      : false\r\n  );\r\n  const [digitBorder, setDigitBorder] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_digit_border)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_digit_border))\r\n      : false\r\n  );\r\n\r\n  function draw(canvas, ctx: CanvasRenderingContext2D) {\r\n    if (images && watchface) {\r\n      if (canvas) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (previewScreenNormal) drawNormal(canvas, ctx, images)\r\n        else drawAod(canvas, ctx, images)\r\n        drawGrid(ctx);\r\n      } else {\r\n        console.error(\"don't find canvas with id canvasPreview\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawNormal(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.background) drawBackground(canvas, ctx, images, watchface.background);\r\n    if (watchface.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.date,\r\n        watchface.date.orderElements,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.activity) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.activity,\r\n        watchState,\r\n        digitBorder,\r\n        true\r\n      );\r\n    }\r\n    if (watchface.status) {\r\n      drawStatus(ctx, images, watchface.status, watchState);\r\n    }\r\n    if (watchface.widgets.enabled) {\r\n      drawWidgets(ctx, images, watchface.widgets, watchState, digitBorder, borderWidget, showWidgetPreview)\r\n    }\r\n    if (watchface.dialFace) {\r\n      if ( !showWidgetPreview || watchface.widgets?.showTimeOnEditScreen || ( watchface.widgets?.widgets && watchface.widgets.widgets.length === 0 ) ) {\r\n        drawTimeDigital(\r\n          ctx,\r\n          images,\r\n          watchface.dialFace,\r\n          watchState,\r\n          digitBorder\r\n        );\r\n        drawTimeAnalog(ctx, images, watchface.dialFace, watchState);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function drawAod(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.aod) {\r\n      drawAodBackground(canvas, ctx, images, watchface.aod.backgroundImageIndex);\r\n    }\r\n    if (watchface.aod.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.aod.date,\r\n        watchface.aod.date.orderElements,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.activitylist) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.aod.activitylist,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.dialFace) {\r\n      drawTimeDigital(\r\n        ctx,\r\n        images,\r\n        watchface.aod.dialFace,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n      drawTimeAnalog(ctx, images, watchface.aod.dialFace, watchState);\r\n    }\r\n  }\r\n\r\n  function getCursorPosition(event) {\r\n    const canvas = document.getElementById(\r\n      \"canvasPreview\"\r\n    ) as HTMLCanvasElement;\r\n    const rect = canvas.getBoundingClientRect();\r\n    let x = event.clientX - rect.left;\r\n    let y = event.clientY - rect.top;\r\n    x = Math.min(width, Math.max(0, Math.round(x)));\r\n    y = Math.min(height, Math.max(0, Math.round(y)));\r\n    setX(x);\r\n    setY(y);\r\n  }\r\n\r\n  function onToggleWhiteGrid() {\r\n    const wg = !whiteGrid;\r\n    setWhiteGrid(wg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(wg));\r\n  }\r\n\r\n  function onToggleBlackGrid() {\r\n    const bg = !blackGrid;\r\n    setBlackGrid(bg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(bg));\r\n  }\r\n\r\n  function onToggleDigitBorder() {\r\n    const db = !digitBorder;\r\n    setDigitBorder(db);\r\n    localStorage.setItem(\r\n      storage_items.preview_digit_border,\r\n      JSON.stringify(db)\r\n    );\r\n  }\r\n\r\n  function drawGrid(ctx: CanvasRenderingContext2D) {\r\n    if (!whiteGrid && !blackGrid) return;\r\n    const stroke = whiteGrid ? \"white\" : \"black\";\r\n    const step = 20;\r\n    for (let i = width / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = width / 2; i < width; i += step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i < height; i += step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    drawLine(ctx, [width / 2 - 1, 0], [width / 2 - 1, height], stroke, 2);\r\n    drawLine(ctx, [0, height / 2 - 1], [width, height / 2 - 1], stroke, 2);\r\n  }\r\n\r\n  function drawLine(\r\n    ctx: CanvasRenderingContext2D,\r\n    begin: [number, number],\r\n    end: [number, number],\r\n    stroke = \"black\",\r\n    width = 1\r\n  ) {\r\n    if (stroke) {\r\n      ctx.strokeStyle = stroke;\r\n    }\r\n\r\n    if (width) {\r\n      ctx.lineWidth = width;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(begin[0], begin[1]);\r\n    ctx.lineTo(end[0], end[1]);\r\n    ctx.stroke();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={cl.canvasCcontainer}>\r\n        {previewScreenNormal? 'Screen Normal' : 'AOD'}\r\n        <div>\r\n          x: {x}, y: {y}\r\n        </div>\r\n        <Canvas\r\n          id='canvasPreview'\r\n          draw={draw}\r\n          className={cl.canvasPreview}\r\n          width={width}\r\n          height={height}\r\n          onClick={getCursorPosition}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <div>\r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            White grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={whiteGrid}\r\n              onChange={onToggleWhiteGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Black grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={blackGrid}\r\n              onChange={onToggleBlackGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on digit\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digitBorder}\r\n              onChange={onToggleDigitBorder}\r\n            />\r\n          </div>\r\n        </div>\r\n        { watchface.widgets?.widgets && watchface.widgets.widgets.length > 0 ? \r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={borderWidget}\r\n              onChange={() => setBorderWidget(!borderWidget)}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            show preview of widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={showWidgetPreview}\r\n              onChange={() => setShowWidgetPreview(!showWidgetPreview)}\r\n            />\r\n          </div>\r\n        </div> : '' }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewComponent;\r\n","import Color from \"../shared/color\";\r\nimport { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { Background } from \"../model/watchFace.model\";\r\n  \r\nexport default function draw(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], background: Background) {\r\n    if (background?.imageIndex !== undefined && background?.imageIndex !== null) {\r\n        const i = findImageById(background.imageIndex, images)\r\n        //images[Constant.getImageIndex(background.imageIndex, images.length)]\r\n        if (i) {\r\n            const img = i\r\n            ctx.drawImage(img, 0, 0, img.width, img.height);\r\n        }\r\n    } else if (background.color && Color.GFG_Fun(background.color)) {\r\n        ctx.fillStyle = background.color\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { IImage } from \"../model/image.model\";\r\nimport { WatchStatus } from \"../model/watchFace.model\";\r\nimport { WatchState } from \"../model/watchState\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\n\r\nexport default function draw(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    status: WatchStatus,\r\n    watchState: WatchState\r\n    ) {\r\n        if (status.bluetooth.enabled && !watchState.bluetooth) {\r\n            drawImageCoords(ctx, images, status.bluetooth.json)\r\n        }\r\n        if (status.dnd.enabled && watchState.dnd) {\r\n            drawImageCoords(ctx, images, status.dnd.json)\r\n        }\r\n        if (status.alarm.enabled && watchState.alarm) {\r\n            drawImageCoords(ctx, images, status.alarm.json)\r\n        }\r\n        if (status.lock.enabled && watchState.lock) {\r\n            drawImageCoords(ctx, images, status.lock.json)\r\n        }\r\n}\r\n","import { findImageById } from \"../shared/helper\";\r\nimport { IImage } from \"../model/image.model\";\r\n\r\nexport default function drawAodBackground(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], imageIndex: number) {\r\n    if (imageIndex !== undefined && imageIndex !== null) {\r\n            const img = findImageById(imageIndex, images)\r\n            if (img) {\r\n                ctx.drawImage(img, 0, 0, img.width, img.height);\r\n            }\r\n    } else {\r\n        ctx.fillStyle = 'black'\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { IWatchContext, WatchfaceContext } from \"../../context\";\r\n\r\n\r\nconst UploadedImagesomponent: FC = () => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center\">\r\n      { images.length > 0 ? \r\n      <div>\r\n        <h2>number of images: {images.length} </h2>\r\n        <ul className=\"list-group blocks\" style={{width: \"100%\"}}>\r\n          {images.map( (img) => \r\n              <li\r\n              key={img.id}\r\n              value={img.id}\r\n              className=\"list-group-item fileitem\"\r\n            >\r\n              {<img src={img.image.src} alt={img.name} width={30} />}\r\n              {img.name}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        </div>\r\n    : <div>\r\n      no uploaded images\r\n    </div>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadedImagesomponent;\r\n","import { FC, useState } from \"react\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport JsonComponent from \"./json.component\";\r\nimport PreviewComponent from \"./preview.component\";\r\nimport UploadedImagesomponent from \"./uploadedImages.component\";\r\n\r\nconst tabs = [\r\n  { id: 0, name: \"Preview\", el: <PreviewComponent width={Constant.width} height={Constant.height} /> },\r\n  { id: 1, name: \"Uploaded Images\", el:  <UploadedImagesomponent />},\r\n  { id: 2, name: \"Json\", el: <JsonComponent /> },\r\n];\r\n\r\nconst RightSideComponent: FC = () => {\r\n  const [selectedTab, setSelectedTab] = useState<number>(0);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${selectedTab === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => setSelectedTab(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      { tabs[selectedTab].el }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideComponent;\r\n","export class WatchState {\r\n  _date = new Date();\r\n  year = this._date.getFullYear();\r\n  month = this._date.getMonth() + 1;\r\n  monthasword = this._date.getMonth();\r\n  day = this._date.getDate();\r\n  hours = this._date.getHours();\r\n  minutes = this._date.getMinutes();\r\n  seconds = this._date.getSeconds();\r\n  weekday = this._date.getDay() > 0 ? this._date.getDay() - 1 : 6;\r\n  batteryGoal = 100;\r\n  battery = Math.round(Math.random() * this.batteryGoal);\r\n  stepsGoal = (Math.round(Math.random() * 5) + 5) * 1000;\r\n  steps = Math.round(Math.random() * this.stepsGoal);\r\n  caloriesGoal = 200;\r\n  calories = Math.round(Math.random() * this.caloriesGoal);\r\n  hearthrateGoal = 220\r\n  hearthrate = Math.round(Math.random() * 200);\r\n  distance = Math.round(Math.random() * 1000) + 1000;\r\n  paiGoal = 100;\r\n  pai = Math.round(Math.random() * this.paiGoal);\r\n  standupGoal = 12;\r\n  standup = Math.round(Math.random() * this.standupGoal);\r\n  bluetooth = true;\r\n  dnd = true;\r\n  lock = false;\r\n  alarm = true;\r\n  \r\n  temperature = Math.round(Math.random() * 10);\r\n  temperatureMin = this.temperature - Math.round(Math.random() * 10)\r\n  temperatureMax = this.temperature + Math.round(Math.random() * 10)\r\n  weatherIcon = Math.round(Math.random() * 29);\r\n  \r\n  uvIndexGoal = 11\r\n  uvIndex = Math.round(Math.random() * this.uvIndexGoal)\r\n  airQualityGoal = 500\r\n  airQuality = Math.round(Math.random() * this.airQualityGoal)\r\n  humidityGoal = 100\r\n  humidity = Math.round(Math.random() * this.humidityGoal)\r\n  \r\n  sunrise = 536\r\n  sunset = 1742\r\n\r\n  windForce = Math.round(Math.random() * 12)\r\n\r\n  airPressureGoal = 100\r\n  airPressure = Math.round(Math.random() * this.airPressureGoal)\r\n\r\n  stressGoal = 100\r\n  stress = Math.round(Math.random() * this.stressGoal)\r\n\r\n  fatBurningGoal = 30\r\n  fatBurning = Math.round(Math.random() * this.fatBurningGoal)\r\n\r\n  widgets: number[] = []\r\n  activeWidget: number = 0;\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FC, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport FileLoaderComponent from \"./app/components/main/fileLoader.component\";\r\nimport LeftSideComponent from \"./app/components/main/leftside.component\";\r\nimport RightSideComponent from \"./app/components/main/rightside.component\";\r\nimport { IImage } from \"./app/model/image.model\";\r\nimport WatchFace from \"./app/model/watchFace.model\";\r\nimport { WatchState } from \"./app/model/watchState\";\r\nimport { WatchfaceContext } from \"./app/context\";\r\n\r\nconst App: FC = () => {\r\n  const [images, setImages] = useState<IImage[]>([]);\r\n  const [watchface, setWatchface] = useState<WatchFace>(new WatchFace());\r\n  const [watchState, setWatchState] = useState<WatchState>(new WatchState());\r\n\r\n  const [jsonName, setJsonName] = useState<string>(null);\r\n  const [previewScreenNormal, setPreviewScreenNormal] = useState<boolean>(true);\r\n\r\n  return (\r\n    <WatchfaceContext.Provider\r\n      value={{\r\n        images,\r\n        setImages,\r\n        watchface,\r\n        setWatchface,\r\n        watchState,\r\n        setWatchState,\r\n        jsonName,\r\n        setJsonName,\r\n        previewScreenNormal,\r\n        setPreviewScreenNormal,\r\n      }}\r\n    >\r\n      <Container className=\"App d-flex flex-column min-vh-100 vh-100\">\r\n        <Row className=\"header\">\r\n          <FileLoaderComponent />\r\n        </Row>\r\n        <Row className=\"main\">\r\n          <Col xs={6} className=\"leftcol\">\r\n            <LeftSideComponent />\r\n          </Col>\r\n          <Col xs={6} className=\"rightcol\">\r\n            <RightSideComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </WatchfaceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}