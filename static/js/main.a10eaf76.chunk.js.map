{"version":3,"sources":["app/main/previewComponent.module.css","app/main/JsonComponent.module.css","app/context/index.ts","app/shared/color.tsx","app/model/types.model.ts","app/model/json.model.tsx","app/model/watchFace.model.tsx","app/main/fileLoader.component.tsx","app/shared/draganddroplist.component.tsx","app/shared/constant.tsx","app/shared/selectFileList.component.tsx","app/Blocks/imageDigit.component.tsx","app/Blocks/systemFont.component.tsx","app/Blocks/systemFontCircle.component.tsx","app/Blocks/activityDigit.component.tsx","app/Blocks/clockHand.component.tsx","app/Blocks/imageCoords.component.tsx","app/Blocks/imageProgress.component.tsx","app/Blocks/progressbarCircle.component.tsx","app/Blocks/progressbarLinear.component.tsx","app/Blocks/activity.component.tsx","app/Blocks/activitylist.component.tsx","app/Blocks/background.component.tsx","app/Blocks/date.component.tsx","app/Blocks/status.component.tsx","app/Blocks/timeAnalog.component.tsx","app/Blocks/multiLangImageCoords.component.tsx","app/Blocks/timeDigital.component.tsx","app/main/screennormal.component.tsx","app/model/weather.states.tsx","app/main/previewstates.component.tsx","app/Blocks/backgroundaod.component.tsx","app/Blocks/dateaod.component.tsx","app/Blocks/timeAnalogAOD.component.tsx","app/Blocks/timeDigitalAOD.component.tsx","app/main/aod.component.tsx","app/Blocks/widgetElement.component.tsx","app/Blocks/widget.component.tsx","app/main/widgets.component.tsx","app/main/leftside.component.tsx","app/main/elementOrder.component.tsx","app/main/json.component.tsx","app/main/canvas.function.tsx","app/shared/helper.tsx","app/main/preview/imageCoords.element.tsx","app/main/preview/digitImage.element.tsx","app/main/preview/systemfont.element.tsx","app/main/preview/digit.element.tsx","app/main/preview/pointer.element.tsx","app/main/preview/progressBarCircle.element.tsx","app/main/preview/progressBarLinear.element.tsx","app/main/preview/activity.element.tsx","app/main/preview/imageProgress.element.tsx","app/main/preview/date.element.tsx","app/main/preview/clockHand.element.tsx","app/main/preview/timeAnalog.element.tsx","app/main/preview/multiLangImageCoords.element.tsx","app/main/preview/timeDigital.element.tsx","app/main/preview/widgets.element.ts","app/main/preview.component.tsx","app/main/preview/background.element.ts","app/main/preview/status.element.tsx","app/main/preview/backgroundaod.element.ts","app/main/uploadedImages.component.tsx","app/main/rightside.component.tsx","app/model/watchState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","WatchfaceContext","createContext","colorRegex","Color","hex","result","exec","r","parseInt","g","b","toString","padStart","color","length","substring","firstByteS","secondByteS","firstByte","secondByte","this","rgbToHex","h","hexToRgb","toUpperCase","test","JsonType","index","json","LangCodeType","undefined","Zh","Object","values","find","val","ZhHant","All","AlignmentType","Left","Center","Right","FollowType","Follow","Single","CommonType","Default","Min","Max","ImageProgressDisplayType","Continuous","DateType","Year","Month","Day","TimeType","Hour","Minute","Second","ActivityType","Date","Battery","Steps","Calories","HeartRate","Pai","Distance","StandUp","Weather","UVindex","AirQuality","Humidity","Sunrise","WindForce","Altitude","AirPressure","Stress","ActivityGoal","FatBurning","TypeOfDigit","Coordinates","X","Y","ImageSetGTR2","ImageIndex","ImagesCount","ImageCoord","ImageIndex2","ImageIndex3","ImageProgress","ImageSet","DisplayType","ProgressBar","AngleSettings","LinearSettings","ForegroundImageIndex","Width","Flatness","PointerImageIndex","BackgroundImageIndex","StartX","StartY","EndX","EndY","Unknown5","StartAngle","EndAngle","Radius","ClockHand","Scale","Pointer","Cover","Unknown16","MultilangImageCoord","LangCode","Text","Image","SystemFont","Alignment","Spacing","PaddingZero","DisplayFormAnalog","NoDataImageIndex","MultilangImage","DecimalPointImageIndex","MultilangImageUnit","DelimiterImageIndex","MultilangImageUnitMile","FontRotate","Angle","Size","colorWrite","ShowUnitCheck","RotateDirection","DigitalDigit","Type","CombingMode","Digit","Separator","digitTypes","hour","type","count","numberLenght","displayAnalog","imageProgressTotal","unit","separator","timeDelimiter","title","min","sec","year","month","monthasword","day","weekday","battery","steps","titleMin","calories","heartRate","pai","distance","decimalDelimiter","standUp","uvIndex","airQuality","humidity","sunrise","titleDefault","titleMax","windForce","airPressure","stress","activityGoal","fatBurning","weather","Background","imageIndex","previewIndex","collapsed","WatchImageCoords","j","enabled","WatchMultilangImageCoords","WatchImageProgress","WatchCommonDigit","d","con","enabledImage","enabledSystemFont","enabledSystemFontCircle","DATE","toJson","TIME","COMMON","WatchClockHand","WatchDialFace","collapsedDigital","collapsedAnalog","hoursDigital","minutesDigital","secondsDigital","hoursClockhand","minutesClockhand","secondsClockhand","am","pm","WatchDate","monthAsWord","weekDay","WatchStatus","s","bluetooth","dnd","alarm","lock","Bluetooth","Lock","DoNotDisturb","Alarm","WatchProgressBar","enabledLinear","enabledCircle","jsonObj","WatchActivity","dt","key","digit","digitMin","digitMax","imageProgress","pointerProgress","progressBar","icon","shortcut","getTime","ElementOrderItem","jsonType","WatchAOD","dialFace","date","activitylistCollapsed","activitylist","backgroundImageIndex","backgroundCollapsed","orderElements","orderElementsDate","newOrderElementsTime","DialFace","DigitalDialFace","Digits","forEach","push","AM","PM","AnalogDialFace","Hours","Minutes","newOrderElementsDate","DateDigits","el","WeeksDigits","getActivityListFromJson","Activity","getActivityFromJson","a","atype","_activity","_dt","PointerProgress","Icon","Shortcut","ar","_a","findByJson","WatchWidgetElement","previewImageIndex","activitys","Preview","findIndex","item","WatchWidget","x","y","width","height","widgetElementsCollapsed","widgetElements","borderActivImageIndex","borderInactivImageIndex","descriptionImageBackground","descriptionWidthCheck","Height","WidgetElement","BorderActivImageIndex","BorderInactivImageIndex","DescriptionImageBackground","DescriptionWidthCheck","WatchWidgets","topMaskImageIndex","underMaskImageIndex","showTimeOnEditScreen","widgets","TopMaskImageIndex","UnderMaskImageIndex","Unknown4","Widget","map","wi","WatchFace","background","activity","status","aod","orderElementsActivity","colorBackgroundRead","ix","Seconds","System","Status","Widgets","ScreenIdle","FileLoaderComponent","useContext","images","setImages","setWatchface","setJsonName","onLoadJson","e","target","JSON","parse","w","getImages","files","clearInput","filename","name","base","lastIndexOf","id","isNaN","img","addEventListener","src","URL","createObjectURL","alt","image","document","getElementById","value","className","multiple","accept","onChange","event","file","fr","FileReader","onload","readAsText","Button","onClick","initialDnDState","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","DnDListComponent","_list","updateOrder","useState","dragAndDrop","setDragAndDrop","onDragStart","initialPosition","Number","currentTarget","dataset","position","dataTransfer","setData","onDragOver","preventDefault","newList","itemDragged","remainingItems","filter","slice","onDrop","onDragLeave","data-position","draggable","reactItem","Constant","max","resultIndex","startImageIndex","alert","NONE","deviceId","SelectFileListComponent","setSelectedFileIndex","setCollapsed","onFileSelected","options","i","disabled","ImageDigitComponent","onUpdate","showNoData","showDecimalPointer","showDelimiter","paddingZeroFix","followDisabled","onCopyFromNormal","imageSetIndex","useMemo","findImageIndex","unitImageSetIndex","Card","Header","checked","digitimage","Body","style","clear","float","fromJson","SystemFontComponent","colorRead","defaultValue","SystemFontCircleComponent","toFixed","ActivityDigitComponent","ClockHandComponent","clockHand","showAngle","scaleImageSetIndex","ch","ImageCoordsComponent","imageCoords","ic","ip","ImageProgressComponent","coords","changeX","changeY","ProgressbarCircleCodmponent","pb","v","Math","abs","pBar","selected","ProgressbarLinearCodmponent","ActivityComponent","onUpdateActivity","showProgress","onCopy","onDelete","stopPropagation","ActivityListComponent","activityToAdd","setActivityToAdd","keys","findByIndex","al","updateActivity","window","confirm","splice","deleteActivity","list","BackgroundComponent","watchface","DateComponent","updateDay","updateDate","updateMonth","updateYear","wdf","StatusComponent","updateStatus","TimeAnalogComponent","MultilangImageCoordsComponent","TimeDigitalComponent","updateHoursDigit","t","updateTimeDigital","updateMinutesDigit","m","updateSecondsDigit","ScreenNormalcomponent","c","wf","WeatherStates","PreviewStatesComponent","watchState","setWatchState","useEffect","ws","time","hours","minutes","seconds","getFullYear","getMonth","getDate","getDay","step","split","stepsGoal","hearthrateGoal","hearthrate","paiGoal","standupGoal","standup","weatherIcon","temperature","temperatureMin","temperatureMax","airPressureGoal","BackgroundAODComponent","DateAODComponent","copyDayFromNormal","copyMonthFromNormal","copyYearFromNormal","TimeAnalogAODComponent","TimeDigitalAODComponent","AodComponent","WidgetElementComponent","element","defaultCount","we","WidgetComponent","widget","updateElement","_wi","_we","deleteElement","WidgetsComponent","updateWidgets","_wf","updateWidget","deleteWidget","tabs","LeftSideComponent","setPreviewScreenNormal","tabLeft","setTabLeft","tab","tabid","ElementOrderComponent","JsonComponent","jsonName","setJson","timeDigitalEnabled","timeDigitalAodEnabled","timeClockHandEnabled","timeClockHandAodEnabled","dateEnabled","dateAodEnabled","statusEnabled","dialFaceEnabled","dialFaceAodEnabled","timeDigits","getTimeDigital","timeDigitsAod","dateDigits","dateDigitsAod","activitysToJson","activitysAod","Info","DeviceId","colorBackgroundWrite","ProgressDialFace","DateProgressBar","DateClockHand","getWidgets","stringify","generateJson","Blob","href","download","saveJson","cl","alist","digits","getWidgetElement","getWidget","Canvas","props","draw","rest","canvasRef","useRef","canvas","current","context","getContext","ref","findImageById","drawImageCoords","ctx","imageCoord","drawImage","drawDigitImage","number","followXY","drawBorder","strNumber","concat","decimalPointer","chr","charAt","n","startx","starty","spacing","alignment","paddingLenght","drawborder","imageWidth","maxWidth","beginPath","strokeStyle","rect","stroke","drawImages","drawSeparator","addUnitsAndSeparator","text","systemFont","getSystemFontText","systemFontText","console","log","drawDigit","fontSize","radius","font","tx","ty","fillStyle","save","translate","rotate","PI","measureText","fillText","spacingAngle","restore","drawSystemFontFontRotated","radians","drawSystemFont","drawPointer","total","withOffset","offsetX","offsetY","_startAngle","_endAngle","offsetAngle","angle","round","drawProgressBarCircle","angleSettings","ax","ay","startAngle","endAngle","sector_angle","dX","dY","backimg","flatness","radianStart","radianEnd","clockwise","x1","cos","y1","sin","x2","y2","x3","y3","x5","y5","x6","y6","arc","moveTo","lineTo","x4","y4","xc1","yc1","xc2","yc2","drawArcPath","clip","GFG_Fun","lineWidth","closePath","fill","_x","_y","drawColorEndings","drawProgressBarLinear","lineB","endx","endy","fillRect","drawActivityList","digitBorder","batteryGoal","drawActivity","cur","caloriesGoal","uvIndexGoal","airQualityGoal","humidityGoal","sunset","stressGoal","fatBurningGoal","coors","ceil","initial","drawImageProgress","_temp","_follow","drawclockhand","drawTimeAnalog","drawClockHand","drawMultilangImageCoords","drawTimeDigital","timeDigital","s_hours","s_minutes","s_seconds","drawWidgets","borderWidget","showWidgetPreview","topMask","bottomMask","imgBack","preview","imgTop","strokeRect","drawWidget","storage_items","PreviewComponent","previewScreenNormal","setBorderWidget","setShowWidgetPreview","setX","setY","localStorage","getItem","whiteGrid","setWhiteGrid","blackGrid","setBlackGrid","setDigitBorder","drawLine","begin","end","canvasCcontainer","clearRect","drawBackground","drawDate","drawStatus","drawNormal","drawAodBackground","drawAod","drawGrid","error","canvasPreview","getBoundingClientRect","clientX","left","clientY","top","wg","setItem","bg","db","UploadedImagesomponent","RightSideComponent","tabRight","setTabRight","WatchState","_date","getHours","getMinutes","getSeconds","random","App","Provider","Container","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a10eaf76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasCcontainer\":\"previewComponent_canvasCcontainer__228Bh\",\"canvasPreview\":\"previewComponent_canvasPreview__lXKup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"JsonComponent_json__2bCwY\"};","import {createContext} from 'react'\nimport { IImage } from '../model/image.model';\nimport WatchFace from '../model/watchFace.model';\nimport { WatchState } from '../model/watchState';\n\nexport const WatchfaceContext = createContext(null);\n\nexport interface IWatchContext {\n    images: IImage[],\n    setImages(images: IImage[]): void,\n    watchface: WatchFace,\n    setWatchface(watchface: WatchFace): void,\n    watchState: WatchState,\n    setWatchState(watchState: WatchState): void,\n    jsonName: string,\n    setJsonName(jsonName: string): void,\n    previewScreenNormal: boolean,\n    setPreviewScreenNormal(s: boolean): void,\n  }","const colorRegex: RegExp = /^#[0-9A-F]{6}$/i;\r\n\r\nexport default class Color {\r\n  static hexToRgb(hex: string) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  }\r\n\r\n  static rgbToHex(r: number, g: number, b: number) {\r\n    return (\r\n      \"#\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\")\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Read amazfit hex color from Json to HTML-HEX-String\r\n   */\r\n  static colorRead(color: string) {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(10, 18);\r\n    if (color.length === 10) color = \"#\" + color.substring(4);\r\n    //let old_color = this.hexToRgb(color);\r\n    //let new_color = this.rgbToHex(old_color.r, old_color.g, old_color.b);\r\n    return color;\r\n  }\r\n\r\n  /*\r\n        Read from json 16 bit background amazfit color to 32 bit\r\n    */\r\n  static colorBackgroundRead(color: string): string {\r\n    if (!color) return null;\r\n    if (color.length === 18)\r\n      color = color.substring(0, 2) + color.substring(8, 18);\r\n    let firstByteS = color.substring(8, 10);\r\n    let secondByteS = color.substring(10, 12);\r\n    let firstByte = parseInt(firstByteS, 16);\r\n    let secondByte = parseInt(secondByteS, 16);\r\n\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    r = ((firstByte >> 3) & 0x1f) << 3;\r\n    g = (((secondByte >> 5) & 0x7) | ((firstByte & 0x07) << 3)) << 2;\r\n    b = (secondByte & 0x1f) << 3;\r\n\r\n    let new_color = this.rgbToHex(r, g, b);\r\n   \r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html-hex 32 bit color to 16 bit amazfit color \r\n    */\r\n  static colorBackgroundWrite(hex: string): string {\r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let temp_b = (b >> 3) & 0x1f;\r\n    let temp_g = ((g >> 2) & 0x7) << 5;\r\n    let secondByte = temp_b | temp_g;\r\n\r\n    let temp_g2 = (g >> 5) & 0x07;\r\n    let temp_r = ((r >> 3) & 0x1f) << 3;\r\n    let firstByte = temp_g2 | temp_r;\r\n    let firstByteS = firstByte.toString(16).padStart(2, '0').toUpperCase();\r\n    let secondByteS = secondByte.toString(16).padStart(2, '0').toUpperCase();\r\n\r\n    let new_color = \"0xFFFF\" + firstByteS + secondByteS;\r\n    return new_color;\r\n  }\r\n\r\n  /*\r\n    from html hex 32 bit color to 32 bit amazfit json hex color\r\n  */\r\n  static colorWrite(hex: string): string {\r\n    let h = this.hexToRgb(hex);\r\n\r\n    let r = h.r;\r\n    let g = h.g;\r\n    let b = h.b;\r\n\r\n    let new_color =\r\n      \"0xFF\" +\r\n      r.toString(16).padStart(2, \"0\") +\r\n      g.toString(16).padStart(2, \"0\") +\r\n      b.toString(16).padStart(2, \"0\");\r\n    return new_color;\r\n  }\r\n\r\n  static GFG_Fun(color: any) {\r\n    return colorRegex.test(color);\r\n  }\r\n}\r\n","export class JsonType {\r\n    constructor(public index: number, public json: string) {}\r\n  }\r\n  \r\n  export class LangCodeType {\r\n    static Zh = new JsonType(0, \"Zh\");\r\n    static ZhHant = new JsonType(1, \"ZhHant\");\r\n    static All = new JsonType(2, \"All\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Zh.json;\r\n      return Object.values(LangCodeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Zh.index;\r\n      return Object.values(LangCodeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class AlignmentType {\r\n    static Left = new JsonType(0, \"Left\");\r\n    static Center = new JsonType(1, \"Center\");\r\n    static Right = new JsonType(2, \"Right\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Left.json;\r\n      return Object.values(AlignmentType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Left.index;\r\n      return Object.values(AlignmentType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class FollowType {\r\n    static Follow = new JsonType(0, \"Follow\");\r\n    static Single = new JsonType(1, \"Single\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Follow.json;\r\n      return Object.values(FollowType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Follow.index;\r\n      return Object.values(FollowType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class CommonType {\r\n    static Default = new JsonType(0, null);\r\n    static Min = new JsonType(1, \"Min\");\r\n    static Max = new JsonType(2, \"Max\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Default.json;\r\n      return Object.values(CommonType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Default.index;\r\n      return Object.values(CommonType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ImageProgressDisplayType {\r\n    static Single = new JsonType(0, \"Single\");\r\n    static Continuous = new JsonType(1, \"Continuous\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Single.json;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Single.index;\r\n      return Object.values(ImageProgressDisplayType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class DateType {\r\n    static Year = new JsonType(0, \"Year\");\r\n    static Month = new JsonType(1, \"Month\");\r\n    static Day = new JsonType(2, \"Day\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Year.json;\r\n      return Object.values(DateType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Year.index;\r\n      return Object.values(DateType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class TimeType {\r\n    static Hour = new JsonType(0, \"Hour\");\r\n    static Minute = new JsonType(1, \"Minute\");\r\n    static Second = new JsonType(2, \"Second\");\r\n  \r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Hour.json;\r\n      return Object.values(TimeType).find((val) => val.index === index).json;\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Hour.index;\r\n      return Object.values(TimeType).find((val) => val.json === json).index;\r\n    }\r\n  }\r\n  \r\n  export class ActivityType {\r\n    static Date = new JsonType(0, \"Date\");\r\n    static Battery = new JsonType(1, \"Battery\");\r\n    static Steps = new JsonType(2, \"Steps\");\r\n    static Calories = new JsonType(3, \"Calories\");\r\n    static HeartRate = new JsonType(4, \"HeartRate\");\r\n    static Pai = new JsonType(5, \"PAI\");\r\n    static Distance = new JsonType(6, \"Distance\");\r\n    static StandUp = new JsonType(7, \"StandUp\");\r\n    static Weather = new JsonType(8, \"Weather\");\r\n    static UVindex = new JsonType(9, \"UVindex\");\r\n    static AirQuality = new JsonType(10, \"AirQuality\");\r\n    static Humidity = new JsonType(11, \"Humidity\");\r\n    static Sunrise = new JsonType(12, \"Sunrise\");\r\n    static WindForce = new JsonType(13, \"WindForce\");\r\n    static Altitude = new JsonType(14, \"Altitude\");\r\n    static AirPressure = new JsonType(15, \"AirPressure\");\r\n    static Stress = new JsonType(16, \"Stress\");\r\n    static ActivityGoal = new JsonType(17, \"ActivityGoal\");\r\n    static FatBurning = new JsonType(18, \"FatBurning\");\r\n  \r\n    static findByIndex(index: number) {\r\n      if (index === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.index === index);\r\n    }\r\n    static toJson(index: number) {\r\n      if (index === undefined) return this.Date.json;\r\n      return Object.values(ActivityType).find((val) => val.index === index).json;\r\n    }\r\n    static findByJson(json: string) {\r\n      if (json === undefined) return this.Date;\r\n      return Object.values(ActivityType).find((val) => val.json === json);\r\n    }\r\n    static fromJson(json: string) {\r\n      if (json === undefined) return this.Date.index;\r\n      return Object.values(ActivityType).find((val) => val.json === json).index;\r\n    }\r\n  }","import Color from \"../shared/color\";\r\nimport { AlignmentType, ImageProgressDisplayType, LangCodeType } from \"./types.model\";\r\n\r\n\r\nexport class DeviceId {\r\n  DeviceId: number;\r\n}\r\n\r\nexport class Background {\r\n  Preview: MultilangImage[] = [];\r\n  BackgroundImageIndex: number;\r\n  Color: string;\r\n}\r\n\r\nexport class Coordinates {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n}\r\n\r\nexport class ImageSetGTR2 {\r\n  ImageIndex: number = null;\r\n  ImagesCount: number = 1;\r\n}\r\n\r\nexport class ScreenNormal {\r\n  DigitalDialFace: DigitalDialFace;\r\n  AnalogDialFace: AnalogDialFace;\r\n  ProgressDialFace: ProgressDialFace;\r\n}\r\n\r\nexport class System {\r\n  Status: Status;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Widgets {\r\n  Widget: Widget[];\r\n  TopMaskImageIndex: number;\r\n  UnderMaskImageIndex: number;\r\n  Unknown4: number = 0;\r\n}\r\n\r\nexport class ScreenIdle {\r\n  DialFace: ScreenNormal;\r\n  Date: Date;\r\n  Activity: Activity[];\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class ImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageIndex: number = null;\r\n  ImageIndex2: number = null;\r\n  ImageIndex3: number = null;\r\n}\r\n\r\nexport class Widget {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Width: number = 0;\r\n  Height: number = 0;\r\n  WidgetElement: WidgetElement[] = [];\r\n  BorderActivImageIndex: number;\r\n  BorderInactivImageIndex: number;\r\n  DescriptionImageBackground: ImageCoord = new ImageCoord();\r\n  DescriptionWidthCheck: number = 0;\r\n}\r\n\r\nexport class WidgetElement {\r\n  Preview: MultilangImage[] = [];\r\n  Date: Date;\r\n  Activity: Activity[];\r\n}\r\n\r\nexport class Date {\r\n  DateDigits: DigitalDigit[];\r\n  WeeksDigits: DigitalDigit;\r\n  DateClockHand: DateClockHand;\r\n  DateProgressBar: DateProgressBar;\r\n}\r\n\r\nexport class DateProgressBar {\r\n  MonthProgressBar: ProgressBar;\r\n  DayProgressBar: ProgressBar;\r\n  WeekDayProgressBar: ProgressBar;\r\n}\r\n\r\nexport class Status {\r\n  Bluetooth: ImageCoord;\r\n  DoNotDisturb: ImageCoord;\r\n  Lock: ImageCoord;\r\n  Alarm: ImageCoord;\r\n}\r\n\r\nexport class Activity {\r\n  Type: string;\r\n  PointerProgress: ClockHand;\r\n  ProgressBar: ProgressBar;\r\n  ImageProgress: ImageProgress;\r\n  Digits: DigitalDigit[];\r\n  Shortcut: Shortcut;\r\n  Icon: ImageCoord;\r\n}\r\n\r\nexport class Shortcut {\r\n  BoxElement: BoxElement;\r\n  ImageIndex: number;\r\n}\r\n\r\nexport class BoxElement {\r\n  TopLeftX: number;\r\n  TopLeftY: number;\r\n  Width: number;\r\n  Height: number;\r\n}\r\n\r\nexport class ImageProgress {\r\n  Coordinates: Coordinates[] = [];\r\n  ImageSet = new ImageSetGTR2();\r\n  DisplayType: string = ImageProgressDisplayType.Single.json;\r\n}\r\n\r\nexport class ProgressDialFace {\r\n  Hours: ProgressBar;\r\n  Minutes: ProgressBar;\r\n  Seconds: ProgressBar;\r\n}\r\n\r\nexport class ProgressBar {\r\n  AngleSettings: AngleSettings;\r\n  LinearSettings: LinearSettings;\r\n  ForegroundImageIndex: number;\r\n  Color: string;\r\n  Width: number;\r\n  Flatness: number;\r\n  PointerImageIndex: number;\r\n  BackgroundImageIndex: number;\r\n}\r\n\r\nexport class LinearSettings {\r\n  StartX: number = 0;\r\n  StartY: number = 0;\r\n  EndX: number = 0;\r\n  EndY: number = 0;\r\n  Unknown5: number;\r\n}\r\n\r\nexport class AngleSettings {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  StartAngle: number = 0;\r\n  EndAngle: number = 360;\r\n  Radius: number = 0;\r\n}\r\n\r\nexport class AnalogDialFace {\r\n  Hours: ClockHand;\r\n  Minutes: ClockHand;\r\n  Seconds: ClockHand;\r\n}\r\n\r\nexport class DateClockHand {\r\n  MonthClockHand: ClockHand;\r\n  DayClockHand: ClockHand;\r\n  WeekDayClockHand: ClockHand;\r\n}\r\n\r\nexport class ClockHand {\r\n  X: number;\r\n  Y: number;\r\n  Scale: MultilangImageCoord;\r\n  Pointer: ImageCoord;\r\n  Cover: ImageCoord;\r\n  StartAngle: number;\r\n  EndAngle: number;\r\n  Unknown16: number;\r\n}\r\n\r\nexport class DigitalDialFace {\r\n  Digits: DigitalDigit[];\r\n  AM: MultilangImageCoord;\r\n  PM: MultilangImageCoord;\r\n}\r\n\r\nexport class MultilangImageCoord {\r\n  Coordinates: Coordinates = new Coordinates();\r\n  ImageSet: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nexport class Text {\r\n  Image: Image;\r\n  SystemFont: SystemFont;\r\n  Alignment: string = AlignmentType.Left.json;\r\n  Spacing: number = 0;\r\n  PaddingZero: boolean = false;\r\n  DisplayFormAnalog: boolean = false;\r\n}\r\n\r\nexport class Image {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  NoDataImageIndex: number = null;\r\n  MultilangImage: MultilangImage[] = [\r\n    {\r\n      LangCode: LangCodeType.All.json,\r\n      ImageSet: {\r\n        ImageIndex: null,\r\n        ImagesCount: 1\r\n      }\r\n    }\r\n  ];\r\n  DecimalPointImageIndex: number = null;\r\n  MultilangImageUnit: MultilangImage[];\r\n  DelimiterImageIndex: number = null;\r\n  MultilangImageUnitMile: MultilangImage[];\r\n}\r\n\r\nexport class SystemFont {\r\n  FontRotate: FontRotate;\r\n  Coordinates: Coordinates;\r\n  Angle: number = 0;\r\n  Size: number = 20;\r\n  Color: string =  Color.colorWrite(\"#000000\");\r\n  ShowUnitCheck: number = -1;\r\n}\r\n\r\n\r\nexport class FontRotate {\r\n  X: number = 0;\r\n  Y: number = 0;\r\n  Radius: number = 0;\r\n  RotateDirection: number = 0;\r\n}\r\n\r\nexport class DigitalDigit {\r\n  Type: string;\r\n  TimeType: string;\r\n  DateType: string;\r\n  CombingMode: string;\r\n  Digit: Text = new Text();\r\n  Separator: ImageCoord;\r\n}\r\n\r\nexport class MultilangImage {\r\n  LangCode: string = LangCodeType.All.json;\r\n  ImageSet: ImageSetGTR2 = new ImageSetGTR2();\r\n}\r\n\r\nexport class WatchJson {\r\n  Info: DeviceId;\r\n  Background: Background;\r\n  DialFace: ScreenNormal;\r\n  System: System;\r\n  Widgets: Widgets;\r\n  ScreenIdle: ScreenIdle;\r\n}\r\n","import Color from \"../shared/color\";\r\nimport {\r\n  ClockHand, DigitalDigit, ImageCoord, ImageProgress, ProgressBar, ScreenIdle, Shortcut, Status, Text, WatchJson, Widgets, MultilangImageCoord, Activity, Widget, WidgetElement\r\n} from \"./json.model\";\r\nimport { TimeType, DateType, CommonType, ActivityType, JsonType, LangCodeType } from \"./types.model\";\r\n\r\n\r\ninterface IDigitConstructor {\r\n  type: number;\r\n  count: number;\r\n  numberLenght: number;\r\n  unit: string[];\r\n  separator: string;\r\n  title: string;\r\n  titleDefault?: string;\r\n  titleMin?: string;\r\n  titleMax?: string;\r\n  decimalDelimiter?: boolean;\r\n  timeDelimiter?: boolean;\r\n  displayFormAnalog?: boolean;\r\n  imageProgressTotal?: number;\r\n}\r\n\r\nconst digitTypes = {\r\n  hour: {\r\n    type: TimeType.Hour.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Hours',\r\n  },\r\n  min: {\r\n    type: TimeType.Minute.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Minutes',\r\n  },\r\n  sec: {\r\n    type: TimeType.Second.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', ':', ':'],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Seconds',\r\n  },\r\n  year: {\r\n    type: DateType.Year.index,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Year',\r\n  },\r\n  month: {\r\n    type: DateType.Month.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Month',\r\n  },\r\n  monthasword: {\r\n    type: DateType.Month.index,\r\n    count: 12,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Month as word',\r\n  },\r\n  day: {\r\n    type: DateType.Day.index,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '.', '/'],\r\n    separator: '/',\r\n    title: 'Day',\r\n  },\r\n  weekday: {\r\n    type: 0,\r\n    count: 7,\r\n    numberLenght: 1,\r\n    displayAnalog: true,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Weekday',\r\n  },\r\n  battery: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Battery',\r\n  },\r\n  steps: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'Steps', 'STEPS'],\r\n    separator: '/',\r\n    title: 'Steps',\r\n    titleMin: 'goal of steps'\r\n  },\r\n  calories: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kcal', 'Cal'],\r\n    separator: '/',\r\n    title: 'Calories',\r\n    titleMin: 'goal of calories'\r\n  },\r\n  heartRate: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 6,\r\n    unit: ['', 'bpm', 'BPM'],\r\n    separator: '/',\r\n    title: 'Heart rate'\r\n  },\r\n  pai: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'PAI',\r\n  },\r\n  distance: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'km', 'KM'],\r\n    separator: '/',\r\n    decimalDelimiter: true,\r\n    title: 'Distance',\r\n  },\r\n  standUp: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Standup',\r\n    titleMin: 'goal of stand up'\r\n  },\r\n  uvIndex: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'UVIndex',\r\n  },\r\n  airQuality: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air quality',\r\n  },\r\n  humidity: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 3,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['%', '%', '%'],\r\n    separator: '/',\r\n    title: 'Humidity',\r\n  },\r\n  sunrise: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 4,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    timeDelimiter: true,\r\n    title: 'Sunrise',\r\n    titleDefault: 'closest sunrise or sunset',\r\n    titleMin: 'sunrise',\r\n    titleMax: 'sunset',\r\n  },\r\n  windForce: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', 'kpa', 'KPA'],\r\n    separator: '/',\r\n    title: 'Wind force',\r\n  },\r\n  airPressure: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Air pressure',\r\n  },\r\n  stress: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'Stress',\r\n  },\r\n  activityGoal: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 5,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'ActivityGoal',\r\n    titleMin: 'goal of activity'\r\n  },\r\n  fatBurning: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: null,\r\n    unit: ['', '', ''],\r\n    separator: '/',\r\n    title: 'FatBurning',\r\n    titleMin: 'goal of FatBurning'\r\n  },\r\n  weather: {\r\n    type: 0,\r\n    count: 10,\r\n    numberLenght: 2,\r\n    displayAnalog: false,\r\n    imageProgressTotal: 29,\r\n    unit: ['°C', '°C', '°C'],\r\n    separator: '/',\r\n    title: 'Weather',\r\n    titleDefault: 'Current',\r\n    titleMin: 'Minimum',\r\n    titleMax: 'Maximum',\r\n  },\r\n\r\n};\r\nexport class Background {\r\n  imageIndex = null;\r\n  previewIndex = null;\r\n  color = null;\r\n  collapsed = true;\r\n}\r\n\r\nexport class Coords {\r\n  x: number = 0;\r\n  y: number = 0;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x ? x : 0;\r\n    this.y = y ? y : 0;\r\n  }\r\n}\r\n\r\nexport class WatchImageCoords {\r\n  json = new ImageCoord()\r\n  enabled = false;\r\n\r\n  constructor(j?: ImageCoord) {\r\n    if (j) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\nexport class WatchMultilangImageCoords {\r\n  json = new MultilangImageCoord()\r\n  enabled = false;\r\n  count = 1;\r\n\r\n  constructor(j?: MultilangImageCoord, count?: number) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n    if (count) {\r\n      this.count = count\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchImageProgress {\r\n  enabled = false;\r\n  json = new ImageProgress();\r\n\r\n  constructor(j?: ImageProgress) {\r\n    if (j != null && j !== undefined) {\r\n      this.enabled = true\r\n      this.json = j\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport enum TypeOfDigit {\r\n  TIME,\r\n  DATE,\r\n  COMMON\r\n}\r\nexport class WatchCommonDigit {\r\n  constructor(type: TypeOfDigit, d?: DigitalDigit, con?: IDigitConstructor) {\r\n    this.json = d;\r\n    if (d != null) {\r\n      this.enabled = true\r\n      if (d.Digit?.Image) this.enabledImage = true\r\n      if (d.Digit?.SystemFont) {\r\n        if (d.Digit?.SystemFont?.FontRotate) this.enabledSystemFontCircle = true\r\n        else this.enabledSystemFont = true\r\n      }\r\n    }\r\n    if (con != null) {\r\n      if (!d) {\r\n        this.json = new DigitalDigit()\r\n        this.json.Digit = new Text()\r\n      }\r\n      this.con = con\r\n    }\r\n    this.json.DateType = type === TypeOfDigit.DATE ? DateType.toJson(con.type) : null\r\n    this.json.TimeType = type === TypeOfDigit.TIME ? TimeType.toJson(con.type) : null\r\n    this.json.Type = type === TypeOfDigit.COMMON ? CommonType.toJson(con.type) : null\r\n  }\r\n  json: DigitalDigit = new DigitalDigit();\r\n  con: IDigitConstructor;\r\n  enabled = false;\r\n  enabledImage = false;\r\n  enabledSystemFont = false;\r\n  enabledSystemFontCircle = false;\r\n}\r\n\r\nexport class WatchClockHand {\r\n  enabled: boolean;\r\n\r\n  json: ClockHand = new ClockHand()\r\n\r\n  constructor(json?: ClockHand) {\r\n    this.json = json\r\n    if (json) this.enabled = true\r\n  }\r\n}\r\n\r\nexport class WatchDialFace {\r\n  collapsedDigital = true;\r\n  collapsedAnalog = true;\r\n  hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.hour);\r\n  minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.min);\r\n  secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, null, digitTypes.sec);\r\n  hoursClockhand = new WatchClockHand();\r\n  minutesClockhand = new WatchClockHand();\r\n  secondsClockhand = new WatchClockHand();\r\n  am = new WatchMultilangImageCoords()\r\n  pm = new WatchMultilangImageCoords()\r\n}\r\n\r\nexport class WatchDate {\r\n  collapsed = true;\r\n  year = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.year);\r\n  month = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.month);\r\n  day = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.day);\r\n  monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, null, digitTypes.monthasword);\r\n  weekDay = new WatchCommonDigit(TypeOfDigit.COMMON, null, digitTypes.weekday);\r\n}\r\n\r\nexport class WatchStatus {\r\n  collapsed = true;\r\n  constructor(s?: Status) {\r\n    if (s) {\r\n      if (s.Bluetooth?.ImageIndex) {\r\n        this.bluetooth = new WatchImageCoords(s.Bluetooth);\r\n        this.bluetooth.enabled = true;\r\n      }\r\n      if (s.Lock?.ImageIndex) {\r\n        this.lock = new WatchImageCoords(s.Lock);\r\n        this.lock.enabled = true;\r\n      }\r\n      if (s.DoNotDisturb?.ImageIndex) {\r\n        this.dnd = new WatchImageCoords(s.DoNotDisturb);\r\n        this.dnd.enabled = true;\r\n      }\r\n      if (s.Alarm?.ImageIndex) {\r\n        this.alarm = new WatchImageCoords(s.Alarm);\r\n        this.alarm.enabled = true;\r\n      }\r\n    }\r\n  }\r\n  bluetooth = new WatchImageCoords(null);\r\n  dnd = new WatchImageCoords(null);\r\n  alarm = new WatchImageCoords(null);\r\n  lock = new WatchImageCoords(null);\r\n}\r\n\r\nexport class WatchProgressBar {\r\n  enabledLinear: boolean;\r\n  enabledCircle: boolean;\r\n  jsonObj: ProgressBar;\r\n\r\n  constructor(json?: ProgressBar) {\r\n    this.jsonObj = json;\r\n    if (json) {\r\n      if (json.LinearSettings)\r\n        this.enabledLinear = true;\r\n      else if (json.AngleSettings)\r\n        this.enabledCircle = true;\r\n    }\r\n  }\r\n}\r\nexport class WatchActivity {\r\n  collapsed = true;\r\n  key: string;\r\n  type: JsonType;\r\n  dt: IDigitConstructor;\r\n  digit: WatchCommonDigit;\r\n  digitMin: WatchCommonDigit;\r\n  digitMax: WatchCommonDigit;\r\n  imageProgress = new WatchImageProgress();\r\n  pointerProgress = new WatchClockHand();\r\n  progressBar = new WatchProgressBar();\r\n  icon = new WatchImageCoords();\r\n  shortcut: Shortcut = null;\r\n\r\n  constructor(type: JsonType, dt: IDigitConstructor) {\r\n    this.key = type.index + '_' + new Date().getTime()\r\n    this.type = type;\r\n    this.dt = dt;\r\n    this.imageProgress.json.ImageSet.ImagesCount = dt.imageProgressTotal;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class ElementOrderItem {\r\n  public type: number;\r\n  public title: string;\r\n  constructor(jsonType: JsonType) {\r\n    this.type = jsonType.index;\r\n    this.title = jsonType.json;\r\n  }\r\n}\r\n\r\nexport class WatchAOD {\r\n  dialFace = new WatchDialFace();\r\n  date = new WatchDate();\r\n  activitylistCollapsed = true;\r\n  activitylist: WatchActivity[] = [];\r\n  backgroundImageIndex: number;\r\n  backgroundCollapsed = true;\r\n  json: ScreenIdle\r\n\r\n  orderElements = {\r\n    orderElementsDate: [\r\n      new ElementOrderItem(DateType.Year),\r\n      new ElementOrderItem(DateType.Month),\r\n      new ElementOrderItem(DateType.Day),\r\n    ]\r\n  };\r\n\r\n  constructor(j: ScreenIdle) {\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activitylist = [];\r\n    this.backgroundImageIndex = null;\r\n    this.json = j\r\n    if (j == null) return\r\n    this.backgroundImageIndex = j.BackgroundImageIndex\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    this.dialFace.secondsDigital = null\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = null\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.Date?.DateDigits) {\r\n      j.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.orderElements.orderElementsDate.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.orderElements.orderElementsDate = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.activitylist = getActivityListFromJson(j.Activity);\r\n  }\r\n}\r\n\r\nexport function getActivityFromJson(a: Activity, atype: JsonType): WatchActivity {\r\n  let _activity: WatchActivity = null;\r\n  let _dt: IDigitConstructor = null;\r\n  switch (atype) {\r\n    case ActivityType.Battery:\r\n      _dt = digitTypes.battery;\r\n      break;\r\n    case ActivityType.Steps:\r\n      _dt = digitTypes.steps;\r\n      break;\r\n    case ActivityType.Calories:\r\n      _dt = digitTypes.calories;\r\n      break;\r\n    case ActivityType.HeartRate:\r\n      _dt = digitTypes.heartRate;\r\n      break;\r\n    case ActivityType.Pai:\r\n      _dt = digitTypes.pai;\r\n      break;\r\n    case ActivityType.Distance:\r\n      _dt = digitTypes.distance;\r\n      break;\r\n    case ActivityType.StandUp:\r\n      _dt = digitTypes.standUp;\r\n      break;\r\n    case ActivityType.UVindex:\r\n      _dt = digitTypes.uvIndex;\r\n      break;\r\n    case ActivityType.AirQuality:\r\n      _dt = digitTypes.airQuality;\r\n      break;\r\n    case ActivityType.Humidity:\r\n      _dt = digitTypes.humidity;\r\n      break;\r\n    case ActivityType.Sunrise:\r\n      _dt = digitTypes.sunrise;\r\n      break;\r\n    case ActivityType.WindForce:\r\n      _dt = digitTypes.windForce;\r\n      break;\r\n    case ActivityType.AirPressure:\r\n      _dt = digitTypes.airPressure;\r\n      break;\r\n    case ActivityType.Weather:\r\n      _dt = digitTypes.weather;\r\n      break;\r\n    case ActivityType.ActivityGoal:\r\n      _dt = digitTypes.activityGoal;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (_dt){\r\n    _activity = new WatchActivity(atype, _dt);\r\n    _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, null, _dt);\r\n    _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Min.index});\r\n    _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, null, {..._dt, type: CommonType.Max.index});\r\n  } \r\n  if (_activity) {\r\n    if (a?.Digits) {\r\n      a.Digits.forEach((digit) => {\r\n        if ( digit.Type === CommonType.Min.json )\r\n          _activity.digitMin = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Min.index});\r\n        else if ( digit.Type === CommonType.Max.json )\r\n          _activity.digitMax = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Max.index});\r\n        else\r\n          _activity.digit = new WatchCommonDigit(TypeOfDigit.COMMON, digit, {..._dt, type: CommonType.Default.index});\r\n      })\r\n    }\r\n    _activity.imageProgress = new WatchImageProgress(a?.ImageProgress);\r\n    _activity.pointerProgress = new WatchClockHand(a?.PointerProgress);\r\n    _activity.progressBar = new WatchProgressBar(a?.ProgressBar);\r\n    _activity.icon = new WatchImageCoords(a?.Icon);\r\n    _activity.shortcut = a?.Shortcut;\r\n  }\r\n  return _activity\r\n}\r\n\r\nexport function getActivityListFromJson(ar: Activity[]): WatchActivity[] | null {\r\n  if (ar) {\r\n    let activitylist: WatchActivity[] = []\r\n    ar.forEach((a) => {\r\n      let _a = getActivityFromJson(a, ActivityType.findByJson(a.Type))\r\n      if (_a) activitylist.push(_a)\r\n    });\r\n    return activitylist;\r\n  } else {\r\n    return [];\r\n  }\r\n\r\n}\r\n\r\nexport class WatchWidgetElement {\r\n  collapsed = true;\r\n  previewImageIndex: number;\r\n  date: WatchDate;\r\n  activitylistCollapsed = true;\r\n  activitys: WatchActivity[] = [];\r\n\r\n  constructor(j?: WidgetElement) {\r\n    if (j) {\r\n\r\n      if (!j.Preview) return null\r\n      let index = j.Preview.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n      this.previewImageIndex = index >= 0 ? index : 0\r\n      this.activitys = getActivityListFromJson(j.Activity)\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchWidget {\r\n  collapsed = true;\r\n  x: number = 0;\r\n  y: number = 0;\r\n  width: number = 0;\r\n  height: number = 0;\r\n  widgetElementsCollapsed = true;\r\n  widgetElements: WatchWidgetElement[] = [];\r\n  borderActivImageIndex: number;\r\n  borderInactivImageIndex: number;\r\n  descriptionImageBackground: WatchImageCoords = new WatchImageCoords();\r\n  descriptionWidthCheck: number = 0;\r\n\r\n  constructor(j?: Widget) {\r\n    if ( j) {\r\n      this.x = j.X ? j.X : 0;\r\n      this.y = j.Y ? j.Y : 0;\r\n      this.width = j.Width;\r\n      this.height = j.Height;\r\n      this.widgetElements = []\r\n      if (j.WidgetElement) {\r\n        j.WidgetElement.forEach((item) => {\r\n          this.widgetElements.push(new WatchWidgetElement(item))\r\n        });\r\n      }\r\n      this.borderActivImageIndex = j.BorderActivImageIndex;\r\n      this.borderInactivImageIndex = j.BorderInactivImageIndex;\r\n      this.descriptionImageBackground = new WatchImageCoords(j.DescriptionImageBackground)\r\n      this.descriptionWidthCheck = j.DescriptionWidthCheck\r\n    }\r\n  }\r\n}\r\n\r\nexport class WatchWidgets {\r\n  enabled: boolean\r\n  collapsed = true;\r\n  topMaskImageIndex: number\r\n  underMaskImageIndex: number\r\n  showTimeOnEditScreen: number\r\n  widgets: WatchWidget[] = []\r\n\r\n  constructor(json?: Widgets) {\r\n    if (json) {\r\n      this.enabled = true\r\n      this.topMaskImageIndex = json.TopMaskImageIndex\r\n      this.underMaskImageIndex = json.UnderMaskImageIndex\r\n      this.showTimeOnEditScreen = json.Unknown4\r\n      this.widgets = []\r\n      if (json.Widget) {\r\n        this.widgets = json.Widget.map((wi) => new WatchWidget(wi))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default class WatchFace {\r\n  background: Background = new Background();\r\n  dialFace: WatchDialFace = new WatchDialFace();\r\n  date: WatchDate = new WatchDate();\r\n  activitylistCollapsed = true;\r\n  activity: WatchActivity[] = [];\r\n  status = new WatchStatus();\r\n  widgets = new WatchWidgets(null)\r\n  aod = new WatchAOD(null)\r\n\r\n  orderElements = {\r\n    orderElementsDate: [\r\n      new ElementOrderItem(DateType.Year),\r\n      new ElementOrderItem(DateType.Month),\r\n      new ElementOrderItem(DateType.Day),\r\n    ],\r\n    orderElementsActivity: [\r\n      new ElementOrderItem(ActivityType.Date),\r\n      new ElementOrderItem(ActivityType.Battery),\r\n      new ElementOrderItem(ActivityType.Steps),\r\n      new ElementOrderItem(ActivityType.Calories),\r\n      new ElementOrderItem(ActivityType.HeartRate),\r\n      new ElementOrderItem(ActivityType.Pai),\r\n      new ElementOrderItem(ActivityType.Distance),\r\n      new ElementOrderItem(ActivityType.StandUp),\r\n      new ElementOrderItem(ActivityType.Weather),\r\n    ],\r\n  };\r\n\r\n  constructor(j?: WatchJson) {\r\n    if (!j) return;\r\n\r\n    this.background = new Background();\r\n    this.dialFace = new WatchDialFace();\r\n    this.date = new WatchDate();\r\n    this.activity = [];\r\n    this.status = new WatchStatus();\r\n    this.aod = new WatchAOD(null)\r\n\r\n    this.background.color = Color.colorBackgroundRead(j.Background.Color);\r\n    this.background.imageIndex = j.Background.BackgroundImageIndex;\r\n    if (j.Background.Preview) {\r\n      let ix = 0;\r\n      j.Background?.Preview?.forEach((item, index) => {\r\n        if (item.LangCode === LangCodeType.All.json) {\r\n          ix = index;\r\n        }\r\n      });\r\n      this.background.previewIndex = j.Background.Preview[ix]?.ImageSet?.ImageIndex;\r\n    }\r\n\r\n    this.dialFace = new WatchDialFace();\r\n    let newOrderElementsTime: ElementOrderItem[] = [];\r\n    if (j.DialFace?.DigitalDialFace?.Digits) {\r\n      j.DialFace.DigitalDialFace.Digits.forEach((d) => {\r\n        switch (d.TimeType) {\r\n          case TimeType.Minute.json:\r\n            this.dialFace.minutesDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.min);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Minute));\r\n            break;\r\n          case TimeType.Second.json:\r\n            this.dialFace.secondsDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.sec);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Second));\r\n            break;\r\n          default:\r\n            this.dialFace.hoursDigital = new WatchCommonDigit(TypeOfDigit.TIME, d, digitTypes.hour);\r\n            newOrderElementsTime.push(new ElementOrderItem(TimeType.Hour));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.dialFace.am = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.AM)\r\n    this.dialFace.pm = new WatchMultilangImageCoords(j.DialFace?.DigitalDialFace?.PM)\r\n\r\n    this.dialFace.hoursClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Hours\r\n    );\r\n    this.dialFace.minutesClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Minutes\r\n    );\r\n    this.dialFace.secondsClockhand = new WatchClockHand(\r\n      j.DialFace?.AnalogDialFace?.Seconds\r\n    );\r\n\r\n    this.date = new WatchDate();\r\n    let newOrderElementsDate: ElementOrderItem[] = [];\r\n    if (j.System?.Date?.DateDigits) {\r\n      j.System.Date.DateDigits.forEach((d) => {\r\n        switch (d.DateType) {\r\n          case DateType.Month.json:\r\n            if (d.Digit.DisplayFormAnalog) {\r\n              this.date.monthAsWord = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.month);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            } else {\r\n              this.date.month = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.monthasword);\r\n              newOrderElementsDate.push(new ElementOrderItem(DateType.Month));\r\n            }\r\n            break;\r\n          case DateType.Day.json:\r\n            this.date.day = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.day);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Day));\r\n            break;\r\n          default:\r\n            this.date.year = new WatchCommonDigit(TypeOfDigit.DATE, d, digitTypes.year);\r\n            newOrderElementsDate.push(new ElementOrderItem(DateType.Year));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.orderElements.orderElementsDate.forEach((el) => {\r\n      if (!newOrderElementsDate.find((s) => s.type === el.type))\r\n        newOrderElementsDate.push(el);\r\n    });\r\n    this.orderElements.orderElementsDate = newOrderElementsDate;\r\n\r\n    this.date.weekDay = new WatchCommonDigit(TypeOfDigit.COMMON,\r\n      j.System?.Date?.WeeksDigits,\r\n      digitTypes.weekday\r\n    );\r\n\r\n    this.status = new WatchStatus(j.System?.Status);\r\n\r\n    this.activity = getActivityListFromJson(j.System?.Activity)\r\n\r\n    this.widgets = new WatchWidgets(j.Widgets)\r\n    this.aod = new WatchAOD(j.ScreenIdle)\r\n  }\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport { WatchJson } from \"../model/json.model\";\r\nimport WatchFace from \"../model/watchFace.model\";\r\n\r\nconst FileLoaderComponent: FC = () => {\r\n  const { images, setImages, setWatchface, setJsonName } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function onLoadJson(e: ProgressEvent<FileReader>) {\r\n    let json = e.target.result;\r\n    let j: WatchJson = JSON.parse(json.toString());\r\n    let w = new WatchFace(j);\r\n    setWatchface(w);\r\n  }\r\n\r\n  function uploadJsonFile(e) {\r\n    let file = e.target.files.item(0);\r\n    if (file) {\r\n      let fr = new FileReader();\r\n      fr.onload = onLoadJson;\r\n      fr.readAsText(file);\r\n      setJsonName(e.target.files.item(0).name);\r\n    }\r\n  }\r\n\r\n  function imagesUploadHandler(event: any) {\r\n    getImages(event.target.files, []);\r\n  }\r\n\r\n  function getImages(files: FileList, ar: IImage[], index = 0) {\r\n    clearInput()\r\n    setJsonName(null)\r\n    if (index < files.length) {\r\n      const filename = files[index].name;\r\n      let base = filename;\r\n      if (base.lastIndexOf(\".\") !== -1)\r\n        base = base.substring(0, base.lastIndexOf(\".\"));\r\n\r\n      const id = parseInt(base);\r\n      if ( /^\\d+$/.test(base) && !isNaN(id)) {\r\n        const img = new Image();\r\n        img.addEventListener(\"load\", () => {\r\n          index += 1;\r\n          if (index < files.length) \r\n            getImages(files, ar, index);\r\n          else {\r\n            setImages(ar);\r\n          }\r\n        });\r\n        img.src = URL.createObjectURL(files[index]);\r\n        img.alt = filename;\r\n        ar.push({\r\n          id: id,\r\n          name: filename,\r\n          image: img,\r\n        });\r\n      } else {\r\n        index += 1;\r\n        if (index < files.length) getImages(files, ar, index);\r\n        else setImages(ar);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearInput() {\r\n    if (document.getElementById(\"jsonLoad\")) (document.getElementById(\"jsonLoad\") as HTMLInputElement).value = null;\r\n    setWatchface(new WatchFace());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"input-group input-group-sm mb-3\">\r\n        <span className=\"input-group-text\">Load images</span>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          id=\"fileUpload\"\r\n          accept=\"image/*\"\r\n          onChange={imagesUploadHandler}\r\n        />\r\n        {images.length > 0 ? (\r\n          <>\r\n            <span className=\"input-group-text\">Load json file</span>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"application/json\"\r\n              id=\"jsonLoad\"\r\n              onChange={uploadJsonFile}\r\n            />\r\n            <Button onClick={clearInput}>clear</Button>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileLoaderComponent;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./draganddroplist.css\";\r\n\r\n\r\nexport interface IDNDItem<T> {\r\n  item: T,\r\n  reactItem: React.ReactChild\r\n}\r\n\r\ninterface IProps {\r\n  _list: IDNDItem<any>[];\r\n  updateOrder(list: IDNDItem<any>[]);\r\n}\r\n\r\nconst initialDnDState = {\r\n  draggedFrom: null,\r\n  draggedTo: null,\r\n  isDragging: false,\r\n  originalOrder: [],\r\n  updatedOrder: [],\r\n};\r\n\r\nconst DnDListComponent: FC<IProps> = ({ _list, updateOrder }) => {\r\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\r\n\r\n  // onDragStart fires when an element\r\n  // starts being dragged\r\n  function onDragStart(event) {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: _list,\r\n    });\r\n\r\n    // Note: this is only for Firefox.\r\n    // Without it, the DnD won't work.\r\n    // But we are not using it.\r\n    event.dataTransfer.setData(\"text/html\", \"\");\r\n  }\r\n\r\n  // onDragOver fires when an element being dragged\r\n  // enters a droppable area.\r\n  // In this case, any of the items on the list\r\n  function onDragOver(event) {\r\n    // in order for the onDrop\r\n    // event to fire, we have\r\n    // to cancel out this one\r\n    event.preventDefault();\r\n\r\n    let newList = dragAndDrop.originalOrder;\r\n\r\n    // index of the item being dragged\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n\r\n    // index of the droppable area being hovered\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n\r\n    const itemDragged = newList[draggedFrom];\r\n    const remainingItems = newList.filter(\r\n      (item, index) => index !== draggedFrom\r\n    );\r\n\r\n    newList = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo),\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newList,\r\n        draggedTo: draggedTo,\r\n      });\r\n      updateOrder(newList);\r\n    }\r\n  }\r\n\r\n  function onDrop(event) {\r\n    updateOrder(dragAndDrop.updatedOrder);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false,\r\n    });\r\n  }\r\n\r\n  function onDragLeave() {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list-group droplist\">\r\n        {_list.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              data-position={index}\r\n              draggable\r\n              onDragStart={onDragStart}\r\n              onDragOver={onDragOver}\r\n              onDrop={onDrop}\r\n              onDragLeave={onDragLeave}\r\n              className={`list-group-item ${\r\n                dragAndDrop && dragAndDrop.draggedTo === Number(index)\r\n                  ? \"dropArea\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n                {item.reactItem}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DnDListComponent;\r\n","export class Constant {\r\n  static readonly NONE = \"None\";\r\n  static readonly startImageIndex = 1;\r\n  static readonly width: number = 348;\r\n  static readonly height: number = 442;\r\n  static readonly deviceId: number = 65;\r\n\r\n  static getImageIndex(index: number, max: number) {\r\n    const resultIndex = index - Constant.startImageIndex;\r\n    if (resultIndex >= max) {\r\n      alert(\"Bad imageIndex: \" + resultIndex);\r\n      return 0;\r\n    }\r\n    return index;\r\n  }\r\n}\r\n","import React, { FC, ReactElement, useContext, useState } from \"react\";\r\nimport { Constant } from \"./constant\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport \"./selectFileList.css\";\r\ninterface IProps {\r\n  title: string,\r\n  imageIndex: number;\r\n  setSelectedFileIndex(id: number): void;\r\n}\r\n\r\nconst SelectFileListComponent: FC<IProps> = ({\r\n  title,\r\n  imageIndex,\r\n  setSelectedFileIndex,\r\n}) => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n  function onFileSelected(id: number) {\r\n    setSelectedFileIndex(id);\r\n    setCollapsed(true);\r\n  }\r\n\r\n  function onRemove() {\r\n    onFileSelected(null);\r\n  }\r\n\r\n  const options: ReactElement[] = [];\r\n\r\n  options.push(\r\n    <option key={\"None\"} value={\"None\"}>\r\n      {\" \"}\r\n    </option>\r\n  );\r\n\r\n  if (images) {\r\n    for (var i = 0; i < images.length; i++) {\r\n      let img = images[i];\r\n\r\n      options.push(\r\n        <li\r\n          key={img.id}\r\n          value={img.id}\r\n          className=\"list-group-item fileitem\"\r\n          onClick={() => onFileSelected(img.id)}\r\n        >\r\n          {<img src={img.image.src} alt={img.name} width={30} />}\r\n          {img.name}\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <span className=\"input-group-text\">{title}</span>\r\n      <div className=\"input-group-text dropdown\">\r\n        <div>\r\n          {imageIndex !== null &&\r\n          imageIndex !== undefined &&\r\n          images[imageIndex - Constant.startImageIndex]\r\n            ? images[imageIndex - Constant.startImageIndex].name\r\n            : \"None\"}\r\n        </div>\r\n        {collapsed ? (\r\n          \"\"\r\n        ) : (\r\n          <ul className=\"list-group dropdown-content\">{options}</ul>\r\n        )}\r\n      </div>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n        disabled={!images || images.length === 0}\r\n      >\r\n        + \r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-secondary\"\r\n        type=\"button\"\r\n        onClick={onRemove}\r\n        disabled={!imageIndex}\r\n      >\r\n        x\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectFileListComponent;\r\n","import { FC, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Image, MultilangImage } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType, LangCodeType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst ImageDigitComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  showNoData,\r\n  showDecimalPointer,\r\n  showDelimiter,\r\n  paddingZeroFix,\r\n  followDisabled,\r\n  onCopyFromNormal\r\n}) => {\r\n\r\n  const imageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImage), [digit])\r\n  const unitImageSetIndex = useMemo<number>(() => findImageIndex(digit.json?.Digit?.Image?.MultilangImageUnit), [digit])\r\n\r\n  function findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }\r\n\r\n  function onChangeImageIndex(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImage) {\r\n      d.json.Digit.Image.MultilangImage = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImage[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImage.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImage[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImage[length-1].ImageSet.ImagesCount = d.con.count;\r\n    } else {\r\n      d.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex = index;\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnit(index: number) {\r\n    const d = {...digit};\r\n    if (!d.json.Digit.Image.MultilangImageUnit) {\r\n      d.json.Digit.Image.MultilangImageUnit = []\r\n    }\r\n    if (!d.json.Digit.Image.MultilangImageUnit[imageSetIndex]) {\r\n      let length = d.json.Digit.Image.MultilangImageUnit.push(new MultilangImage())\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].LangCode = LangCodeType.All.json;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImageIndex = index;\r\n      d.json.Digit.Image.MultilangImageUnit[length-1].ImageSet.ImagesCount = 1;\r\n    } else {\r\n      d.json.Digit.Image.MultilangImageUnit[imageSetIndex].ImageSet.ImageIndex = index;\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeNoData(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.NoDataImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDelimiter(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DelimiterImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeDecimalPointer(index: number) {\r\n    const d = {...digit};\r\n    d.json.Digit.Image.DecimalPointImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator(index: number) {\r\n    const d = {...digit};\r\n    d.json.Separator.ImageIndex = index;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorX(e) {\r\n    const d = {...digit};\r\n    d.json.Separator.Coordinates.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparatorY(e) {\r\n    const d = {...digit};\r\n    d.json.Separator.Coordinates.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledImage}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledImage = !d.enabledImage;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont\r\n                if ( !d.json.Digit.Image) {\r\n                  d.json.Digit.Image = new Image()\r\n                  let digitimage = new MultilangImage()\r\n                  digitimage.ImageSet.ImagesCount = d.con.count\r\n                  d.json.Digit.Image.MultilangImage[0] = digitimage\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledImage ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1 \">\r\n            <SelectFileListComponent\r\n              title='ImageIndex'\r\n              setSelectedFileIndex={onChangeImageIndex}\r\n              imageIndex={digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex}\r\n            />\r\n            <span className=\"input-group-text\">count: {digit.json?.Digit?.Image?.MultilangImage[imageSetIndex]?.ImageSet?.ImagesCount}</span>\r\n            </div>\r\n            <div className=\"input-group input-group-sm mb-1 \">\r\n            <span className=\"input-group-text\" >\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.Image?.X ? digit.json.Digit.Image.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.Image?.Y ? digit.json.Digit.Image.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n          </div>\r\n          {!digit.json.Digit.DisplayFormAnalog ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Unit'\r\n                setSelectedFileIndex={onChangeUnit}\r\n                imageIndex={digit.json?.Digit?.Image?.MultilangImageUnit ? digit.json?.Digit?.Image?.MultilangImageUnit[unitImageSetIndex].ImageSet?.ImageIndex : null}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showNoData ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='NoData'\r\n                setSelectedFileIndex={onChangeNoData}\r\n                imageIndex={digit.json?.Digit?.Image?.NoDataImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showDelimiter ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Minus'\r\n                setSelectedFileIndex={onChangeDelimiter}\r\n                imageIndex={digit.json?.Digit?.Image?.DelimiterImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showDecimalPointer ? (\r\n            <div className=\"input-group input-group-sm\">\r\n              <SelectFileListComponent\r\n                title='Decimal pointer'\r\n                setSelectedFileIndex={onChangeDecimalPointer}\r\n                imageIndex={digit.json?.Digit?.Image?.DecimalPointImageIndex}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {!digit.json.Digit.DisplayFormAnalog ? (\r\n            <>\r\n              <div className=\"input-group input-group-sm mt-1\">\r\n                <span className=\"input-group-text\" >\r\n                  padding zero\r\n                </span>\r\n                <div className=\"input-group-text\">\r\n                  <input\r\n                    className=\"form-check-input form-check-input-sm\"\r\n                    type=\"checkbox\"\r\n                    disabled={paddingZeroFix}\r\n                    checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                    onChange={onChangePaddingZero}\r\n                  />\r\n                </div>\r\n                <span className=\"input-group-text\" >\r\n                  spacing\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n                  onChange={onChangeSpacing}\r\n                />\r\n              </div>\r\n              <div className=\"input-group input-group-sm mt-1\">\r\n                <span className=\"input-group-text\" >\r\n                  follow\r\n                </span>\r\n                <div className=\"input-group-text\">\r\n                  <input\r\n                    className=\"form-check-input form-check-input-sm\"\r\n                    type=\"checkbox\"\r\n                    checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                    onChange={onChangeFollow}\r\n                    disabled={followDisabled}\r\n                  />\r\n                </div>\r\n                <span className=\"input-group-text\" >\r\n                  alignment\r\n                </span>\r\n\r\n                <select\r\n                  value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                  className=\"form-select form-select-sm\"\r\n                  onChange={onChangeAlignment}\r\n                >\r\n                  <option value=\"0\">\r\n                    Left\r\n                  </option>\r\n                  <option value=\"1\">\r\n                    Center\r\n                  </option>\r\n                  <option value=\"2\">\r\n                    Right\r\n                  </option>\r\n                </select>\r\n\r\n              </div>\r\n\r\n              <div className=\"input-group input-group-sm mt-1\">\r\n                <SelectFileListComponent\r\n                  title='Separator'\r\n                  setSelectedFileIndex={onChangeSeparator}\r\n                  imageIndex={digit.json?.Separator?.ImageIndex}\r\n                />\r\n                <span className=\"input-group-text\" >\r\n                  X\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json.Separator?.Coordinates?.X ? digit.json.Separator.Coordinates.X : 0}\r\n                  onChange={onChangeSeparatorX}\r\n                />\r\n                <span className=\"input-group-text\" >\r\n                  Y\r\n                </span>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-sm\"\r\n                  value={digit.json.Separator?.Coordinates?.Y ? digit.json.Separator.Coordinates.Y : 0}\r\n                  onChange={onChangeSeparatorY}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageDigitComponent;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Coordinates, ImageCoord, SystemFont } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Coordinates.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFont}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFont = !d.enabledSystemFont;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont\r\n                if ( !d.json.Digit.SystemFont) {\r\n                  d.json.Digit.SystemFont = new SystemFont()\r\n                  d.json.Digit.SystemFont.Coordinates = new Coordinates()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFont ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Coordinates?.X ? digit.json.Digit.SystemFont.Coordinates.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Coordinates?.Y ? digit.json.Digit.SystemFont.Coordinates.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n            <span className=\"input-group-text\">Color</span>\r\n            <input\r\n              type=\"color\"\r\n              className=\"form-control form-control-sm\"\r\n              style={{ width: 40 }}\r\n              value={digit.json.Digit.SystemFont.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color): '#000000'}\r\n              onChange={(e) => {\r\n                const d = { ...digit };\r\n                d.json.Digit.SystemFont.Color = Color.colorWrite(e.target.value);\r\n                onUpdate(d);\r\n              }}\r\n              defaultValue=\"#000000\"\r\n              title=\"Choose font color\"\r\n            />\r\n\r\n\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              size\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"100\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0}\r\n              onChange={onChangeSize}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              angle\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0}\r\n              onChange={onChangeAngle}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              padding zero\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                disabled={paddingZeroFix}\r\n                checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                onChange={onChangePaddingZero}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" >\r\n              spacing\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n              onChange={onChangeSpacing}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              follow\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                onChange={onChangeFollow}\r\n                disabled={followDisabled}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" >\r\n              alignment\r\n            </span>\r\n            <select\r\n                value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeAlignment}\r\n              >\r\n                <option value=\"0\">\r\n                  Left\r\n                </option>\r\n                <option value=\"1\">\r\n                  Center\r\n                </option>\r\n                <option value=\"2\">\r\n                  Right\r\n                </option>\r\n              </select>\r\n          </div>\r\n\r\n          <div className=\"input-group input-group-sm\">\r\n            <span className=\"input-group-text\">Unit</span>\r\n\r\n            <select\r\n              value={digit.json?.Digit?.SystemFont.ShowUnitCheck}\r\n              className=\"form-select form-select-sm\"\r\n              onChange={onChangeUnitCheck}\r\n            >\r\n              <option value=\"-1\">\r\n                None\r\n              </option>\r\n              <option value=\"1\">\r\n                small\r\n              </option>\r\n              <option value=\"2\">\r\n                big\r\n              </option>\r\n            </select>\r\n\r\n            <span className=\"input-group-text\">Separator</span>\r\n            <div className=\"input-group-text\">\r\n            <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.Separator != null}\r\n                onChange={onChangeSeparator}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontComponent;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { FontRotate, ImageCoord, SystemFont } from \"../model/json.model\";\r\nimport { AlignmentType, FollowType } from \"../model/types.model\";\r\nimport { WatchCommonDigit } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  digit: WatchCommonDigit;\r\n  onUpdate(digit: WatchCommonDigit): void;\r\n  showNoData?: boolean;\r\n  showDecimalPointer?: boolean;\r\n  showDelimiter?: boolean;\r\n  paddingZeroFix?: boolean;\r\n  followDisabled?: boolean;\r\n  onCopyFromNormal?(): void\r\n}\r\n\r\nconst SystemFontCircleComponent: FC<IProps> = ({\r\n  title,\r\n  digit,\r\n  onUpdate,\r\n  paddingZeroFix,\r\n  onCopyFromNormal,\r\n  followDisabled\r\n}) => {\r\n\r\n  function onChangeX(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.X = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeY(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Y = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangePaddingZero(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.PaddingZero = !d.json.Digit.PaddingZero;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAlignment(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Alignment = AlignmentType.toJson(parseInt(e.target.value));\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeFollow(e) {\r\n    const d = {...digit};\r\n    d.json.CombingMode = d.json.CombingMode !== FollowType.Single.json ? FollowType.Single.json : FollowType.Follow.json;\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSpacing(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.Spacing = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSize(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Size = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeRadius(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.Radius = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeAngle(e) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.Angle = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeSeparator() {\r\n    const d = {...digit};\r\n    if ( d.json.Separator) \r\n      d.json.Separator = null\r\n    else {\r\n      d.json.Separator = new ImageCoord()\r\n      d.json.Separator.Coordinates.X = -1\r\n      d.json.Separator.Coordinates.Y = -1\r\n    }\r\n    onUpdate(d);\r\n  }\r\n\r\n  function onChangeUnitCheck(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.ShowUnitCheck = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n  function onChangeDirection(e: ChangeEvent<HTMLSelectElement>) {\r\n    const d = {...digit};\r\n    d.json.Digit.SystemFont.FontRotate.RotateDirection = parseInt(e.target.value);\r\n    onUpdate(d);\r\n  }\r\n \r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\">{title}</span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digit.enabledSystemFontCircle}\r\n              onChange={() => {\r\n                const d = { ...digit };\r\n                d.enabledSystemFontCircle = !d.enabledSystemFontCircle;\r\n                d.enabled = d.enabledImage || d.enabledSystemFont || d.enabledSystemFontCircle\r\n                if ( !d.json.Digit.SystemFont) d.json.Digit.SystemFont = new SystemFont()\r\n                if ( !d.json.Digit.SystemFont.FontRotate) {\r\n                  d.json.Digit.SystemFont.FontRotate = new FontRotate()\r\n                }\r\n                onUpdate(d);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card.Header>\r\n      {digit.enabledSystemFontCircle ? (\r\n        <Card.Body>\r\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              X\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.X ? digit.json.Digit.SystemFont.FontRotate.X : 0}\r\n              onChange={onChangeX}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              Y\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.Y ? digit.json.Digit.SystemFont.FontRotate.Y : 0}\r\n              onChange={onChangeY}\r\n            />\r\n            <span className=\"input-group-text\">Color</span>\r\n            <input\r\n              type=\"color\"\r\n              className=\"form-control form-control-sm\"\r\n              style={{ width: 40 }}\r\n              value={digit.json.Digit.SystemFont.Color ? Color.colorRead(digit.json.Digit.SystemFont.Color): '#000000'}\r\n              onChange={(e) => {\r\n                const d = { ...digit };\r\n                d.json.Digit.SystemFont.Color = Color.colorWrite(e.target.value);\r\n                onUpdate(d);\r\n              }}\r\n              title=\"Choose font color\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              size\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"100\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Size ? digit.json.Digit.SystemFont.Size : 0}\r\n              onChange={onChangeSize}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              radius\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\" max=\"400\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.FontRotate?.Radius ? digit.json.Digit.SystemFont.FontRotate.Radius : 0}\r\n              onChange={onChangeRadius}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              angle\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json.Digit?.SystemFont?.Angle ? digit.json.Digit.SystemFont.Angle : 0}\r\n              onChange={onChangeAngle}\r\n            />\r\n            <span className=\"input-group-text\" >\r\n              direction\r\n            </span>\r\n\r\n            <select\r\n                value={ digit.json?.Digit?.SystemFont?.FontRotate?.RotateDirection ? digit.json?.Digit?.SystemFont?.FontRotate?.RotateDirection.toFixed(0) : 0 }\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeDirection}\r\n              >\r\n                <option value=\"0\">\r\n                  Clockwise\r\n                </option>\r\n                <option value=\"1\">\r\n                  Counterlock\r\n                </option>\r\n              </select>\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              padding zero\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                disabled={paddingZeroFix}\r\n                checked={digit.json?.Digit?.PaddingZero || paddingZeroFix}\r\n                onChange={onChangePaddingZero}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" >\r\n              spacing\r\n            </span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control form-control-sm\"\r\n              value={digit.json?.Digit?.Spacing ? digit.json.Digit.Spacing : 0}\r\n              onChange={onChangeSpacing}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm mb-1\">\r\n            <span className=\"input-group-text\" >\r\n              follow\r\n            </span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.CombingMode === FollowType.Follow.json}\r\n                onChange={onChangeFollow}\r\n                disabled={followDisabled}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-text\" >\r\n              alignment\r\n            </span>\r\n              <select\r\n                value={AlignmentType.fromJson(digit.json?.Digit?.Alignment)}\r\n                className=\"form-select form-select-sm\"\r\n                onChange={onChangeAlignment}\r\n              >\r\n                <option value=\"0\">\r\n                  Left\r\n                </option>\r\n                <option value=\"1\">\r\n                  Center\r\n                </option>\r\n                <option value=\"2\">\r\n                  Right\r\n                </option>\r\n              </select>\r\n          </div>\r\n\r\n          <div className=\"input-group input-group-sm\">\r\n            <span className=\"input-group-text\">Unit</span>\r\n\r\n            <select\r\n              value={digit.json?.Digit?.SystemFont.ShowUnitCheck}\r\n              className=\"form-select form-select-sm\"\r\n              onChange={onChangeUnitCheck}\r\n            >\r\n              <option value=\"-1\">\r\n                None\r\n              </option>\r\n              <option value=\"1\">\r\n                small\r\n              </option>\r\n              <option value=\"2\">\r\n                big\r\n              </option>\r\n            </select>\r\n\r\n            <span className=\"input-group-text\">Separator</span>\r\n            <div className=\"input-group-text\">\r\n            <input\r\n                className=\"form-check-input mt-0\"\r\n                type=\"checkbox\"\r\n                checked={digit.json?.Separator != null}\r\n                onChange={onChangeSeparator}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SystemFontCircleComponent;\r\n","import React, { FC } from 'react';\r\nimport { WatchCommonDigit } from '../model/watchFace.model';\r\nimport ImageDigitComponent from './imageDigit.component';\r\nimport SystemFontComponent from './systemFont.component';\r\nimport SystemFontCircleComponent from './systemFontCircle.component';\r\n\r\ninterface IProps {\r\n    digit: WatchCommonDigit;\r\n    title: string;\r\n    onUpdate(digit: WatchCommonDigit): void;\r\n    showDecimalPointer: boolean;\r\n    showDelimiter: boolean;\r\n    showNoData: boolean;\r\n    paddingZeroFix: boolean;\r\n  }\r\n\r\nconst ActivityDigitComponent: FC<IProps> = ({\r\n    digit,\r\n    title,\r\n    onUpdate,\r\n    showDecimalPointer,\r\n    showDelimiter,\r\n    showNoData,\r\n    paddingZeroFix,\r\n  }) => {\r\n\r\n    return (\r\n        <div>\r\n            <ImageDigitComponent\r\n            title={`Numerical (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            showDecimalPointer={showDecimalPointer}\r\n            showDelimiter={showDelimiter}\r\n            showNoData={showNoData}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n\r\n          <SystemFontComponent\r\n            title={`Systemfont Rotated (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title={`Systemfont Circle (${title})`}\r\n            digit={digit}\r\n            onUpdate={onUpdate}\r\n            paddingZeroFix={paddingZeroFix}\r\n          />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityDigitComponent","import { FC, useMemo } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchClockHand } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { ClockHand, Coordinates, ImageCoord, MultilangImage, MultilangImageCoord } from \"../model/json.model\";\nimport { LangCodeType } from \"../model/types.model\";\n\ninterface IProps {\n  title: string,\n  clockHand: WatchClockHand;\n  onUpdate(clockHand: WatchClockHand): void;\n  showAngle: boolean;\n  onCopyFromNormal?(): void\n}\n\nconst ClockHandComponent: FC<IProps> = ({ title, clockHand, onUpdate, showAngle, onCopyFromNormal }) => {\n  \n  const scaleImageSetIndex = useMemo<number>(() => findImageIndex(clockHand.json?.Scale?.ImageSet), [clockHand])\n\n  function findImageIndex(ar: MultilangImage[]): number {\n    if (!ar) return null\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\n    return index ? index : 0\n  }\n\n  function toggleClockHand(e) {\n    const ch = { ...clockHand };\n    ch.enabled = !ch.enabled;\n    if (ch.enabled && !ch.json) {ch.json = new ClockHand(); ch.json.StartAngle = 0; ch.json.EndAngle = 360; }\n    onUpdate(ch);\n  }\n\n  function changeEndAngle(e){\n    const ch = clockHand;\n    ch.json.EndAngle = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeStartAngle(e) {\n    const ch = clockHand;\n    ch.json.StartAngle = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerImageIndex(i: number){\n    let ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    ch.json.Pointer.ImageIndex = i;\n    onUpdate(ch);\n  }\n\n  function changeX(e) {\n    const ch = clockHand;\n    ch.json.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeY(e) {\n    const ch = clockHand;\n    ch.json.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerX(e) {\n    const ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\n    ch.json.Pointer.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changePointerY(e) {\n    const ch = clockHand;\n    if (!ch.json.Pointer) ch.json.Pointer = new ImageCoord()\n    if (!ch.json.Pointer.Coordinates) ch.json.Pointer.Coordinates = new Coordinates()\n    ch.json.Pointer.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeCoverImageIndex(i: number) {\n    let ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    ch.json.Cover.ImageIndex = i;\n    onUpdate(ch);\n  }\n\n  function  changeCoverX(e) {\n    const ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\n    ch.json.Cover.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n  \n  function changeCoverY(e) {\n    const ch = clockHand;\n    if (!ch.json.Cover) ch.json.Cover = new ImageCoord()\n    if (!ch.json.Cover.Coordinates) ch.json.Cover.Coordinates = new Coordinates()\n    ch.json.Cover.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeScaleImageIndex(i: number) {\n    let ch = clockHand;\n    if (!ch.json.Scale) { \n      ch.json.Scale = new MultilangImageCoord()\n      ch.json.Scale.ImageSet[0].ImageSet.ImageIndex = i;\n    } else {\n      ch.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex = i;\n    }\n    onUpdate(ch);\n  }\n\n  function changeScaleX(e) {\n    const ch = clockHand;\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord() \n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\n    ch.json.Scale.Coordinates.X = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  function changeScaleY(e) {\n    const ch = clockHand;\n    if (!ch.json.Scale) ch.json.Scale = new MultilangImageCoord() \n    if (!ch.json.Scale.Coordinates) ch.json.Scale.Coordinates = new Coordinates()\n    ch.json.Scale.Coordinates.Y = parseInt(e.target.value);\n    onUpdate(ch);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={clockHand.enabled}\n              onChange={toggleClockHand}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {clockHand.enabled ? (\n        <Card.Body>\n          { !onCopyFromNormal ? '' : <div style={{clear:'both'}}><button className='btn btn-sm btn-secondary mb-1' style={{float:'right'}} onClick={onCopyFromNormal}>Copy from normal screen</button></div> }\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={changePointerImageIndex}\n              imageIndex={clockHand.json?.Pointer?.ImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\">Center of rotation</span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json.Y}\n              onChange={changeY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\">Pointer offset</span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Pointer?.Coordinates?.X}\n              onChange={changePointerX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Pointer?.Coordinates?.Y}\n              onChange={changePointerY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Cover'\n              setSelectedFileIndex={changeCoverImageIndex}\n              imageIndex={clockHand.json?.Cover?.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Cover?.Coordinates?.X}\n              onChange={changeCoverX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Cover?.Coordinates?.Y}\n              onChange={changeCoverY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Scale'\n              setSelectedFileIndex={changeScaleImageIndex}\n              imageIndex={clockHand.json?.Scale?.ImageSet[scaleImageSetIndex]?.ImageSet?.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Scale?.Coordinates?.X}\n              onChange={changeScaleX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={clockHand.json?.Scale?.Coordinates?.Y}\n              onChange={changeScaleY}\n            />\n          </div>\n          {showAngle ? (\n            <div className=\"input-group input-group-sm mb-1\">\n              <span className=\"input-group-text\" id=\"addon-wrapping\">\n                Start angle\n              </span>\n              <input\n                type=\"number\"\n                className=\"form-control form-control-sm\"\n                value={clockHand.json?.StartAngle}\n                onChange={changeStartAngle}\n              />\n              <span className=\"input-group-text\" id=\"addon-wrapping\">\n                End angle\n              </span>\n              <input\n                type=\"number\"\n                className=\"form-control form-control-sm\"\n                value={clockHand.json?.EndAngle}\n                onChange={changeEndAngle}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n\n\n};\n\nexport default ClockHandComponent;\n","import { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchImageCoords } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\ninterface IProps {\n  title: string;\n  imageCoords: WatchImageCoords;\n  onUpdate(imageCoords: WatchImageCoords): void;\n}\n\nconst ImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageCoords.enabled}\n              onChange={() => {\n                const ic: WatchImageCoords = { ...imageCoords };\n                ic.enabled = !ic.enabled;\n                onUpdate(ic);\n              }}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageCoords.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={(ix) => {\n                const ip = { ...imageCoords };\n                ip.json.ImageIndex = ix;\n                onUpdate(ip);\n              }}\n              imageIndex={imageCoords.json.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates.X}\n              onChange={(e) => {\n                const ip = { ...imageCoords };\n                let x = parseInt(e.target.value);\n                ip.json.Coordinates.X = !isNaN(x) ? x : 0;\n                onUpdate(ip);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates.Y}\n              onChange={(e) => {\n                const ip = { ...imageCoords };\n                let y = parseInt(e.target.value);\n                ip.json.Coordinates.Y = !isNaN(y) ? y : 0;\n                onUpdate(ip);\n              }}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ImageCoordsComponent;\n","import { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { WatchImageProgress } from \"../model/watchFace.model\";\n\ninterface IProps {\n  imageProgress: WatchImageProgress;\n  onUpdate(imageProgress: WatchImageProgress): void;\n}\n\nconst ImageProgressComponent: FC<IProps> = ({ imageProgress, onUpdate }) => {\n\n  function toggle() {\n    const ip = { ...imageProgress };\n    ip.enabled = !ip.enabled;\n    onUpdate(ip);\n  }\n\n  function changeImageIndex(i: number) {\n    let ip = { ...imageProgress };\n    ip.json.ImageSet.ImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeCount(e) {\n    const d = { ...imageProgress };\n    d.json.ImageSet.ImagesCount = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  function changeX(e, index: number) {\n    const d = {...imageProgress};\n    d.json.Coordinates[index].X = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  function changeY(e, index: number) {\n    const d = {...imageProgress};\n    d.json.Coordinates[index].Y = parseInt(e.target.value);\n    onUpdate(d);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Image Progress</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageProgress.enabled}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageProgress.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={changeImageIndex}\n              imageIndex={imageProgress.json.ImageSet.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Count\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageProgress.json.ImageSet.ImagesCount}\n              onChange={changeCount}\n            />\n          </div>\n            { imageProgress.json.Coordinates.map((coords, index) => (\n              <div key={index} className=\"input-group input-group-sm\">\n                <span className=\"input-group-text\">\n                  {index}\n                </span>\n                <span className=\"input-group-text\">\n                  X\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control form-control-sm\"\n                  value={coords.X}\n                  onChange={(e) => changeX(e, index)}\n                />\n                <span className=\"input-group-text\">\n                  Y\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control form-control-sm\"\n                  value={coords.Y}\n                  onChange={(e) => changeY(e, index)}\n                />\n              </div>\n            ))\n            }\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ImageProgressComponent;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Color from \"../shared/color\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { AngleSettings, ProgressBar } from \"../model/json.model\";\nimport { WatchProgressBar } from \"../model/watchFace.model\";\n\ninterface IProps {\n  progressBar: WatchProgressBar;\n  onUpdate(progressBar: WatchProgressBar): void;\n}\n\nconst ProgressbarCircleCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\n  function changeLineEnding(e: React.ChangeEvent<HTMLSelectElement>) {\n    const pBar = { ...progressBar };\n    const value = parseInt(e.target.value);\n    if (!isNaN(value)) pBar.jsonObj.Flatness = value;\n    else pBar.jsonObj.Flatness = 0;\n    onUpdate(pBar);\n  }\n\n  function toggle() {\n    const pb = { ...progressBar };\n    pb.enabledCircle = !pb.enabledCircle;\n    if (!pb.jsonObj)\n      pb.jsonObj = new ProgressBar();\n    if (!pb.jsonObj.AngleSettings)\n      pb.jsonObj.AngleSettings = new AngleSettings();\n    onUpdate(pb);\n  }\n\n  function changeX(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.X = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeY(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.Y = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeRadius(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.Radius = Math.abs(v);\n      onUpdate(d);\n    }\n  }\n\n  function changeWidth(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.Width = Math.max(0, Math.min(v, 100));\n      onUpdate(d);\n    }\n  }\n\n  function changeStartAngle(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.StartAngle = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeEndAngle(e) {\n    const d = { ...progressBar };\n    const v = parseInt(e.target.value);\n    if (!isNaN(v)) {\n      d.jsonObj.AngleSettings.EndAngle = v;\n      onUpdate(d);\n    }\n  }\n\n  function changeForegroundImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.ForegroundImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeColor(e) {\n    const d = { ...progressBar };\n    d.jsonObj.Color = Color.colorWrite(e.target.value);\n    onUpdate(d);\n  }\n\n  function changePointerImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.PointerImageIndex = i;\n    onUpdate(ip);\n  }\n\n  function changeBackgroundImageIndex(i: number) {\n    const ip = { ...progressBar };\n    ip.jsonObj.BackgroundImageIndex = i;\n    onUpdate(ip);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Progress circle</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={progressBar.enabledCircle}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {progressBar.enabledCircle ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm flex-nowrap mb-1 mt-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Center\n            </span>\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.Y}\n              onChange={changeY}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Radius\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.Radius}\n              onChange={changeRadius}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              min=\"0\"\n              max=\"100\"\n              value={progressBar.jsonObj.Width}\n              onChange={changeWidth}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Start angle\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.StartAngle}\n              onChange={changeStartAngle}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              End angle\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.AngleSettings.EndAngle}\n              onChange={changeEndAngle}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Foreground image'\n              setSelectedFileIndex={changeForegroundImageIndex}\n              imageIndex={progressBar.jsonObj.ForegroundImageIndex}\n            />\n            <span className=\"input-group-text\">Color</span>\n            <input\n              type=\"color\"\n              className=\"form-control form-control-sm\"\n              style={{ width: 40 }}\n              value={Color.colorRead(progressBar.jsonObj.Color)}\n              onChange={changeColor}\n              defaultValue=\"#000000\"\n              title=\"Choose progress bar color\"\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Line ending\n            </span>\n\n            <select\n              className=\"form-select form-select-sm\"\n              onChange={changeLineEnding}\n            >\n              <option value=\"0\" selected={progressBar.jsonObj.Flatness === 0}>\n                Circle\n              </option>\n              <option\n                value=\"90\"\n                selected={progressBar.jsonObj.Flatness === 90}\n              >\n                Triangle\n              </option>\n              <option\n                value=\"180\"\n                selected={progressBar.jsonObj.Flatness === 180}\n              >\n                Flat\n              </option>\n            </select>\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={changePointerImageIndex}\n              imageIndex={progressBar.jsonObj.PointerImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Background image'\n              setSelectedFileIndex={changeBackgroundImageIndex}\n              imageIndex={progressBar.jsonObj.BackgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ProgressbarCircleCodmponent;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Color from \"../shared/color\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { LinearSettings, ProgressBar } from \"../model/json.model\";\nimport { WatchProgressBar } from \"../model/watchFace.model\";\n\ninterface IProps {\n  progressBar: WatchProgressBar;\n  onUpdate(progressBar: WatchProgressBar): void;\n}\n\nconst ProgressbarLinearCodmponent: FC<IProps> = ({ progressBar, onUpdate }) => {\n  function changeLineEnding(e: React.ChangeEvent<HTMLSelectElement>) {\n    const pBar = { ...progressBar };\n    const value = parseInt(e.target.value);\n    if (!isNaN(value)) pBar.jsonObj.Flatness = value;\n    else pBar.jsonObj.Flatness = 0;\n    onUpdate(pBar);\n  }\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">Progress linear</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={progressBar.enabledLinear}\n              onChange={() => {\n                const pb = { ...progressBar };\n                pb.enabledLinear = !pb.enabledLinear;\n                if (!pb.jsonObj) pb.jsonObj = new ProgressBar();\n                if (!pb.jsonObj.LinearSettings)\n                  pb.jsonObj.LinearSettings = new LinearSettings();\n                onUpdate(pb);\n              }}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {progressBar.enabledLinear ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm flex-nowrap mb-1 mt-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.LinearSettings.StartX}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.StartX = v;\n                  onUpdate(d);\n                }\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.LinearSettings.StartY}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.StartY = v;\n                  d.jsonObj.LinearSettings.EndY = v;\n                  onUpdate(d);\n                }\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Length\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={\n                progressBar.jsonObj.LinearSettings.EndX -\n                progressBar.jsonObj.LinearSettings.StartX\n              }\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.LinearSettings.EndX =\n                    d.jsonObj.LinearSettings.StartX + v;\n                  onUpdate(d);\n                }\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={progressBar.jsonObj.Width}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                const v = parseInt(e.target.value);\n                if (!isNaN(v)) {\n                  d.jsonObj.Width = Math.max(0, v);\n                  onUpdate(d);\n                }\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Foreground'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.ForegroundImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.ForegroundImageIndex}\n            />\n            <span className=\"input-group-text\">Color</span>\n            <input\n              type=\"color\"\n              className=\"form-control form-control-sm\"\n              style={{ width: 40 }}\n              value={Color.colorRead(progressBar.jsonObj.Color)}\n              onChange={(e) => {\n                const d = { ...progressBar };\n                d.jsonObj.Color = Color.colorWrite(e.target.value);\n                onUpdate(d);\n              }}\n              defaultValue=\"#000000\"\n              title=\"Choose progress bar color\"\n            />\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Line ending\n            </span>\n            <select\n              className=\"form-select form-select-sm\"\n              onChange={changeLineEnding}\n            >\n              <option value=\"0\" selected={progressBar.jsonObj.Flatness === 0}>\n                Circle\n              </option>\n              <option\n                value=\"180\"\n                selected={progressBar.jsonObj.Flatness === 180}\n              >\n                Flat\n              </option>\n            </select>\n          </div>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Pointer'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.PointerImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.PointerImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm\">\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={(i) => {\n                const ip = { ...progressBar };\n                ip.jsonObj.BackgroundImageIndex = i;\n                onUpdate(ip);\n              }}\n              imageIndex={progressBar.jsonObj.BackgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ProgressbarLinearCodmponent;\n","import { FC, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { WatchActivity, WatchCommonDigit } from \"../model/watchFace.model\";\nimport ActivityDigitComponent from \"./activityDigit.component\";\nimport ClockHandComponent from \"./clockHand.component\";\nimport ImageCoordsComponent from \"./imageCoords.component\";\nimport ImageProgressComponent from \"./imageProgress.component\";\nimport ProgressbarCircleCodmponent from \"./progressbarCircle.component\";\nimport ProgressbarLinearComponent from \"./progressbarLinear.component\";\n\ninterface IProps {\n  activity: WatchActivity;\n  title: string;\n  onUpdateActivity(activity: WatchActivity): void;\n  onDelete(e): void;\n  showDecimalPointer?: boolean;\n  showDelimiter?: boolean;\n  showNoData?: boolean;\n  paddingZeroFix?: boolean;\n  showProgress?: boolean;\n  onCopy?(): void;\n  titleDefault?: string;\n  titleMin?: string;\n  titleMax?: string;\n}\n\nconst ActivityComponent: FC<IProps> = ({\n  activity,\n  title,\n  onUpdateActivity,\n  showDecimalPointer,\n  showDelimiter,\n  showNoData,\n  paddingZeroFix,\n  showProgress,\n  onCopy,\n  onDelete,\n  titleDefault,\n  titleMin,\n  titleMax,\n}) => {\n\n  function onUpdateDigit(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digit = {...d}\n    onUpdateActivity(a)\n  }\n  \n  function onUpdateDigitMin(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digitMin = {...d}\n    onUpdateActivity(a)\n  }\n\n  function onUpdateDigitMax(d: WatchCommonDigit) {\n    let a = {...activity}\n    a.digitMax = {...d}\n    onUpdateActivity(a)\n  }\n\n  return (\n    <Card className=\"activity w-100\">\n      <Card.Header\n      className=\"d-flex justify-content-between align-items-center\"\n      onClick={() => {\n        let a = {...activity};\n        a.collapsed = !a.collapsed;\n        onUpdateActivity(a);\n      }}>\n          <span className=\"input-group-text\">{title}</span>\n          <button className=\"btn btn-outline-danger\" type=\"button\" onClick={(e) => {e.stopPropagation(); onDelete(e);}}>Delete</button>\n      </Card.Header>\n      {!activity.collapsed ? (\n        <Card.Body>\n          { !onCopy ? '' :<button className='btn btn-outline-secondary btn-sm mr-0' onClick={onCopy}>Copy from normal screen</button> }\n\n          <ActivityDigitComponent\n            digit={activity.digit}\n            title={titleDefault ? titleDefault : title}\n            onUpdate={onUpdateDigit}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          />\n\n        { titleMin ?\n          <ActivityDigitComponent\n            digit={activity.digitMin}\n            title={titleMin}\n            onUpdate={onUpdateDigitMin}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          /> : '' }\n\n        { titleMax ? \n          <ActivityDigitComponent\n            digit={activity.digitMax}\n            title={titleMax}\n            onUpdate={onUpdateDigitMax}\n            showDecimalPointer={showDecimalPointer}\n            showDelimiter={showDelimiter}\n            showNoData={showNoData}\n            paddingZeroFix={paddingZeroFix}\n          /> : '' }\n\n          {showProgress === undefined || showProgress === true ? \n            <>\n              <ImageProgressComponent\n                imageProgress={activity.imageProgress}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.imageProgress = d;\n                  onUpdateActivity(a);\n                }}\n              />\n              <ProgressbarCircleCodmponent\n                progressBar={activity.progressBar}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.progressBar = d;\n                  onUpdateActivity(a);\n                }}\n              />\n              <ProgressbarLinearComponent\n                progressBar={activity.progressBar}\n                onUpdate={(d) => {\n                  const a = { ...activity };\n                  a.progressBar = d;\n                  onUpdateActivity(a);\n                }}\n              />\n            <ClockHandComponent\n              title=\"Pointer Progress\"\n              clockHand={activity.pointerProgress}\n              onUpdate={(ch) => {\n                const a = { ...activity };\n                a.pointerProgress = ch;\n                onUpdateActivity(a);\n              }}\n              showAngle={true}\n            />\n            </> : \"\"}\n          {activity.icon ? (\n            <ImageCoordsComponent\n              title=\"Icon\"\n              imageCoords={activity.icon}\n              onUpdate={(ip) => {\n                const a = { ...activity };\n                a.icon = ip;\n                onUpdateActivity(a);\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </Card.Body>\n      ) : (\n        \"\"\n        )}\n    </Card>\n  );\n};\n\nexport default ActivityComponent;\n","import { FC, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { ActivityType, JsonType } from \"../model/types.model\";\nimport { getActivityFromJson, WatchActivity } from \"../model/watchFace.model\";\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\nimport ActivityComponent from \"./activity.component\";\n\n\ninterface IProps {\n  activitys: WatchActivity[];\n  onUpdate(activitys: WatchActivity[]): void;\n  collapsed: boolean;\n  setCollapsed(collapsed: boolean): void\n}\n\nconst ActivityListComponent: FC<IProps> = ({activitys, onUpdate, collapsed, setCollapsed}) => {\n\n  const [activityToAdd, setActivityToAdd] = useState<number>(ActivityType.Battery.index);\n\n  function updateOrder(list: IDNDItem<WatchActivity>[]) {\n    let al = list.map((value) => value.item)\n    onUpdate(al)\n  }\n\n  function updateActivity(index: number, a: WatchActivity) {\n    let al = [...activitys]\n    al[index] = {...a}\n    onUpdate(al)\n  }\n\n  function addActivity(e) {\n    e.stopPropagation()\n    if (activityToAdd) {\n      let _a = getActivityFromJson(null, ActivityType.findByIndex(activityToAdd) )\n      if (_a) {\n        let al = [...activitys]\n        al.push(_a)\n        onUpdate(al)\n      }\n    }\n  }\n\n  function deleteActivity(e, index: number) {\n    e.stopPropagation()\n    if ( window.confirm(`would you delete this \"${activitys[index].digit.con.title}\" activity?`)) {\n      let al = [...activitys]\n      al.splice(index, 1)\n      onUpdate(al)\n    }\n  }\n\n  return (\n    <Card>\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\n        title='Click to open / close'\n        onClick={() => {\n          setCollapsed(!collapsed)\n        }}\n      >\n        Activity [{activitys?.length}]\n        <span className=\"d-flex flex-nowrap\">\n          <select className=\"form-select\" \n            onChange={(e) => setActivityToAdd(parseInt(e.target.value))}\n            onClick={(e) => e.stopPropagation()}\n            value={activityToAdd}\n            >\n              {\n                Object.keys(ActivityType).map((key) => \n                  ActivityType[key] instanceof JsonType ?\n                    <option key={ActivityType[key].index} value={ActivityType[key].index}>{ActivityType[key].json}</option>\n                    : ''\n                )\n              }\n          </select>\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addActivity}>Add</button>\n        </span>\n      </Card.Header>\n      { !collapsed  ? (\n        <Card.Body>\n          {activitys?.length > 0 ? \n              <DnDListComponent\n              _list={activitys.map((item, index) => ( { item: item, reactItem:\n                <ActivityComponent\n                  key={item.key}\n                  activity={item}\n                  onUpdateActivity={(a) => updateActivity(index, a)}\n                  onDelete={(e) => deleteActivity(e, index)}\n                  showNoData={true}\n                  showDecimalPointer={item.type === ActivityType.Distance}\n                  showProgress={item.type !== ActivityType.Distance}\n                  showDelimiter={item.type === ActivityType.Weather}\n                  title={item.digit ? item.digit.con.title : null}\n                  titleDefault={item.digit ? item.digit.con.titleDefault : null}\n                  titleMin={item.digitMin ? item.digitMin.con.titleMin : null}\n                  titleMax={item.digitMax ? item.digitMax.con.titleMax : null}\n                />})\n              )}\n              updateOrder={updateOrder}\n              />\n          : 'no activitys addes'}\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default ActivityListComponent;\n","import React, { FC, useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\nconst BackgroundComponent: FC = () => {\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\n\n  function onChangeBackgroundPreviewImage(index: number) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, previewIndex: index },\n    });\n  }\n\n  function onChangeBackgroundImageIndex(index: number) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, imageIndex: index },\n    });\n  }\n\n  function onChangeBackgroundColor(e: React.ChangeEvent<any>) {\n    setWatchface({\n      ...watchface,\n      background: { ...watchface.background, color: e.target.value },\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        className=\"clickable\"\n        onClick={() => {\n          let w = {...watchface};\n          w.background.collapsed = !w.background.collapsed;\n          setWatchface(w);\n        }}\n      >\n        Background\n      </Card.Header>\n      {!watchface.background.collapsed ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1 flex-nowrap\">\n            <SelectFileListComponent\n              title='Preview'\n              setSelectedFileIndex={onChangeBackgroundPreviewImage}\n              imageIndex={watchface.background.previewIndex}\n            />\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={onChangeBackgroundImageIndex}\n              imageIndex={watchface.background.imageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm flex-nowrap\">\n            <span className=\"input-group-text\">Color</span>\n              <input\n                type=\"color\"\n                className=\"form-control form-control-sm\"\n                style={{ width: 40 }}\n                onChange={onChangeBackgroundColor}\n                id=\"colorBackground\"\n                value={watchface.background.color}\n                title=\"Choose background color\"\n                />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default BackgroundComponent;\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDate } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\ninterface IProps {\r\n  collapsed: boolean,\r\n  setCollapsed(collapsed: boolean): void,\r\n}\r\n\r\nconst DateComponent: FC<IProps> = ({collapsed, setCollapsed}) => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function updateDay(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.day = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonth(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.month = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonthAsWord(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.monthAsWord = d;\r\n    updateDate(date);\r\n  }\r\n  function updateYear(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.year = d;\r\n    updateDate(date);\r\n  }\r\n  function updateWeekday(d: WatchCommonDigit) {\r\n    const date = {...watchface.date};\r\n    date.weekDay = d;\r\n    updateDate(date);\r\n  }\r\n\r\n  function updateDate(wdf: WatchDate) {\r\n    setWatchface({ ...watchface, date: wdf });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header\r\n          onClick={() => {\r\n            setCollapsed(!collapsed);\r\n          }}\r\n        >\r\n          Date\r\n        </Card.Header>\r\n        <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n          <ImageDigitComponent\r\n            title=\"Day Digit\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Day Systemfont Rotated\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Day Systemfont Circle\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n          />\r\n\r\n          <ImageDigitComponent\r\n            title=\"Month\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Month Systemfont Rotated\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month as word\"\r\n            digit={watchface.date.monthAsWord}\r\n            onUpdate={updateMonthAsWord}\r\n            paddingZeroFix={true}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Year\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Year Systemfont Rotated\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Year Systemfont Circle\"\r\n            digit={watchface.date.year}\r\n            onUpdate={updateYear}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Weekday\"\r\n            digit={watchface.date.weekDay}\r\n            onUpdate={updateWeekday}\r\n            paddingZeroFix={true}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateComponent;\r\n","import { FC, useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport { WatchStatus } from \"../model/watchFace.model\";\nimport ImageCoordsComponent from \"./imageCoords.component\";\n\nconst StatusComponent: FC = () => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  const [collapsed, setCollapsed] = useState<boolean>(true);\n\n  function updateStatus(status: WatchStatus) {\n    setWatchface({ ...watchface, status: status });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Status\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ImageCoordsComponent\n          title=\"Bluetooth\"\n          imageCoords={watchface.status.bluetooth}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, bluetooth: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Do Not Disturb\"\n          imageCoords={watchface.status.dnd}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, dnd: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Alarm\"\n          imageCoords={watchface.status.alarm}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, alarm: ic}\n            updateStatus(status)\n          }}\n        />\n        <ImageCoordsComponent\n          title=\"Lock\"\n          imageCoords={watchface.status.lock}\n          onUpdate={(ic) => {\n            const status: WatchStatus = {...watchface.status, lock: ic}\n            updateStatus(status)\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\nexport default StatusComponent;\n","import { FC, useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport ClockHandComponent from \"./clockHand.component\";\n\ninterface IProps {\n  collapsed: boolean,\n  setCollapsed(collapsed: boolean): void,\n}\n\nconst TimeAnalogComponent: FC<IProps> = ({collapsed = true, setCollapsed}) => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Time Analog\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ClockHandComponent\n          title=\"Hours\"\n          clockHand={watchface.dialFace.hoursClockhand}\n          showAngle={false}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.dialFace.hoursClockhand = ch;\n            setWatchface(w);\n          }}\n        />\n\n        <ClockHandComponent\n          title=\"Minutes\"\n          clockHand={watchface.dialFace.minutesClockhand}\n          onUpdate={(ch) => {\n            const d = { ...watchface };\n            d.dialFace.minutesClockhand = ch;\n            setWatchface(d);\n          }}\n          showAngle={false}\n        />\n\n        <ClockHandComponent\n          title=\"Seconds\"\n          clockHand={watchface.dialFace.secondsClockhand}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.dialFace.secondsClockhand = ch;\n            setWatchface(w);\n          }}\n          showAngle={false}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TimeAnalogComponent;\n","import { FC, useMemo } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { WatchMultilangImageCoords } from \"../model/watchFace.model\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport { Coordinates, MultilangImage } from \"../model/json.model\";\nimport { LangCodeType } from \"../model/types.model\";\n\ninterface IProps {\n  title: string;\n  imageCoords: WatchMultilangImageCoords;\n  onUpdate(imageCoords: WatchMultilangImageCoords): void;\n}\n\nconst MultilangImageCoordsComponent: FC<IProps> = ({ title, imageCoords, onUpdate }) => {\n\n  const imageSetIndex = useMemo<number>(() => findImageIndex(imageCoords.json.ImageSet), [imageCoords])\n\n  function findImageIndex(ar: MultilangImage[]): number {\n    if (!ar) return null\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\n    return index >= 0 ? index : 0\n  }\n\n  function toggle() {\n    const d = { ...imageCoords };\n    d.enabled = !d.enabled;\n    if ( !d.json.ImageSet) {\n      d.json.ImageSet = []\n      let digitimage = new MultilangImage()\n      digitimage.ImageSet.ImagesCount = d.count\n      d.json.ImageSet[0] = digitimage\n    }\n    onUpdate(d)\n  }\n\n  function changeImageIndex(ix: number) {\n    const ip = { ...imageCoords };\n    ip.json.ImageSet[imageSetIndex].ImageSet.ImageIndex = ix;\n    onUpdate(ip);\n  }\n\n  function changeX(e) {\n    const ip = { ...imageCoords };\n    let x = parseInt(e.target.value);\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\n    ip.json.Coordinates.X = !isNaN(x) ? x : 0;\n    onUpdate(ip);\n  }\n\n  function changeY(e) {\n    const ip = { ...imageCoords };\n    let y = parseInt(e.target.value);\n    if (!ip.json.Coordinates) ip.json.Coordinates = new Coordinates()\n    ip.json.Coordinates.Y = !isNaN(y) ? y : 0;\n    onUpdate(ip);\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\">{title}</span>\n          <div className=\"input-group-text\">\n            <input\n              className=\"form-check-input mt-0\"\n              type=\"checkbox\"\n              checked={imageCoords.enabled}\n              onChange={toggle}\n            />\n          </div>\n        </div>\n      </Card.Header>\n      {imageCoords.enabled ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <SelectFileListComponent\n              title='ImageIndex'\n              setSelectedFileIndex={changeImageIndex}\n              imageIndex={imageCoords.json?.ImageSet[imageSetIndex]?.ImageSet.ImageIndex}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates?.X}\n              onChange={changeX}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={imageCoords.json.Coordinates?.Y}\n              onChange={changeY}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default MultilangImageCoordsComponent;\n","import { FC, useContext, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\ninterface IProps {\r\n  collapsed: boolean,\r\n  setCollapsed(collapsed: boolean): void,\r\n}\r\n\r\nconst TimeDigitalComponent: FC<IProps> = ({collapsed = true, setCollapsed}) => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateSecondsDigit(s: WatchCommonDigit) {\r\n    const t = {...watchface.dialFace};\r\n    t.secondsDigital = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, dialFace: wdf });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours Digits\"\r\n          digit={watchface.dialFace.hoursDigital}\r\n          onUpdate={updateHoursDigit}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={watchface.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={watchface.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={watchface.dialFace.minutesDigital}\r\n          onUpdate={updateMinutesDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={watchface.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={watchface.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Seconds\"\r\n          digit={watchface.dialFace.secondsDigital}\r\n          onUpdate={updateSecondsDigit}\r\n          paddingZeroFix={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Seconds Systemfont Rotated\"\r\n            digit={watchface.dialFace.secondsDigital}\r\n            onUpdate={updateSecondsDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Seconds Systemfont Circle\"\r\n            digit={watchface.dialFace.secondsDigital}\r\n            onUpdate={updateSecondsDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={watchface.dialFace.am}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={watchface.dialFace.pm}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"../Blocks/activitylist.component\";\r\nimport BackgroundComponent from \"../Blocks/background.component\";\r\nimport DateComponent from \"../Blocks/date.component\";\r\nimport StatusComponent from \"../Blocks/status.component\";\r\nimport TimeAnalogComponent from \"../Blocks/timeAnalog.component\";\r\nimport TimeDigitalComponent from \"../Blocks/timeDigital.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchActivity } from \"../model/watchFace.model\";\r\n\r\nconst ScreenNormalcomponent: FC = () => {\r\n\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = {...watchface}\r\n    w.activity = al\r\n    w.activitylistCollapsed = false;\r\n    setWatchface(w)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackgroundComponent />\r\n      <TimeDigitalComponent\r\n        collapsed={watchface.dialFace.collapsedDigital}\r\n        setCollapsed={(c) => {\r\n          let wf = {...watchface};\r\n          wf.dialFace.collapsedDigital = c;\r\n          setWatchface(wf)\r\n        }}\r\n      />\r\n      <TimeAnalogComponent \r\n              collapsed={watchface.dialFace.collapsedAnalog}\r\n              setCollapsed={(c) => {\r\n                let wf = {...watchface};\r\n                wf.dialFace.collapsedAnalog = c;\r\n                setWatchface(wf)\r\n              }}\r\n      />\r\n      <DateComponent\r\n              collapsed={watchface.date.collapsed}\r\n              setCollapsed={(c) => {\r\n                let wf = {...watchface};\r\n                wf.date.collapsed = c;\r\n                setWatchface(wf)\r\n              }}\r\n      \r\n      />\r\n      <ActivityListComponent \r\n        activitys={watchface.activity}\r\n        onUpdate={updateActivitys}\r\n        collapsed={watchface.activitylistCollapsed}\r\n        setCollapsed={(collapsed) => {\r\n          let w = {...watchface};\r\n          w.activitylistCollapsed = collapsed;\r\n          setWatchface(w);\r\n        }}\r\n      />\r\n      <StatusComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreenNormalcomponent;\r\n","export class WeatherStates {\r\n public static ar: string[] = [\r\n    'Cloudy',\r\n    'Chance of rain',\r\n    'Chance of snow',\r\n    'Sunny',\r\n    'Overcast',\r\n    'Light rain',\r\n    'Light snow',\r\n    'Moderate rain',\r\n    'Moderate snow',\r\n    'Heavy snowfall',\r\n    'Heavy rain',\r\n    'Sandstorm',\r\n    'Sleet',\r\n    'Fog',\r\n    'Haze',\r\n    'Thunderstorm',\r\n    'Snowstorm',\r\n    'Dusty',\r\n    'Extreme rain',\r\n    'Rain with hail',\r\n    'Heavy rain with hail',\r\n    'Rainstorm',\r\n    'Dust storm',\r\n    'Severe sandstorm',\r\n    'Torrential rain',\r\n    'Unknown weather',\r\n    'Cloudy night',\r\n    'Rainy night',\r\n    'Clear night'\r\n ]\r\n}","import React, { FC, useContext, useEffect, useMemo } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WeatherStates } from \"../model/weather.states\";\r\n\r\nconst PreviewStatesComponent: FC = () => {\r\n  const { watchface, watchState, setWatchState } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  useEffect(() => {\r\n    const ws = { ...watchState };\r\n    if ( watchface.widgets?.widgets ) {\r\n      if ( watchState.widgets.length > watchface.widgets.widgets.length) {\r\n        ws.widgets.splice(watchface.widgets.widgets.length-1)\r\n        setWatchState(ws)\r\n      } else if ( watchState.widgets.length < watchface.widgets.widgets.length) {\r\n        for(let i = watchState.widgets.length; i < watchface.widgets.widgets.length; i++) {\r\n          ws.widgets.push(0)\r\n        }\r\n        setWatchState(ws)\r\n      }\r\n    } else {\r\n      ws.widgets = []\r\n      setWatchState(ws)\r\n    }\r\n  }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const date = useMemo(\r\n    () =>\r\n      `${watchState.year.toString().padStart(4, \"0\")}-${watchState.month\r\n        .toString()\r\n        .padStart(2, \"0\")}-${watchState.day.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  const time = useMemo(\r\n    () =>\r\n      `${watchState.hours.toString().padStart(2, \"0\")}:${watchState.minutes\r\n        .toString()\r\n        .padStart(2, \"0\")}:${watchState.seconds.toString().padStart(2, \"0\")}`,\r\n    [watchState]\r\n  );\r\n\r\n  function updateDate(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let date = new Date(e.target.value);\r\n    const ws = { ...watchState };\r\n    ws.year = date.getFullYear();\r\n    ws.month = date.getMonth() + 1;\r\n    ws.monthasword = date.getMonth();\r\n    ws.day = date.getDate();\r\n    ws.weekday = date.getDay() > 0 ? date.getDay() - 1 : 6;\r\n    setWatchState(ws);\r\n  }\r\n\r\n  function updateTime(e: React.ChangeEvent<HTMLInputElement>) {\r\n    let [h, m, s] = e.target.value.split(\":\");\r\n    const ws = { ...watchState };\r\n    if (!isNaN(parseInt(h))) ws.hours = parseInt(h);\r\n    if (!isNaN(parseInt(m))) ws.minutes = parseInt(m);\r\n    if (!isNaN(parseInt(s))) ws.seconds = parseInt(s);\r\n    setWatchState(ws);\r\n  }\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Date</span>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control form-control-sm\"\r\n            value={date}\r\n            onChange={updateDate}\r\n          />\r\n          <span className=\"input-group-text\">Time</span>\r\n          <input\r\n            type=\"time\"\r\n            className=\"form-control form-control-sm\"\r\n            step=\"1\"\r\n            value={time}\r\n            onChange={updateTime}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Battery</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.battery}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.battery = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Calories</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.calories}\r\n            onChange={(e) => {\r\n              let ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.calories = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Steps</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.steps}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.steps = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Steps Goal</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99999\"\r\n            value={watchState.stepsGoal}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stepsGoal = !isNaN(v) ? Math.min(v, 99999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Hearthrate</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.hearthrateGoal}\r\n            value={watchState.hearthrate}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.hearthrate = !isNaN(v) ? Math.min(v, watchState.hearthrateGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Distance</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"9999\"\r\n            value={watchState.distance}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.distance = !isNaN(v) ? Math.min(v, 9999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">PAI</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.paiGoal}\r\n            value={watchState.pai}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.pai = !isNaN(v) ? Math.min(v, watchState.paiGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">StandUp</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.standupGoal}\r\n            value={watchState.standup}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.standup = !isNaN(v) ? Math.min(v, watchState.standupGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Stress</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"999\"\r\n            value={watchState.stress}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.stress = !isNaN(v) ? Math.min(v, 999) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Fat Burning</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"99\"\r\n            value={watchState.fatBurning}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.fatBurning = !isNaN(v) ? Math.min(v, 99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Weather Icon</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"28\"\r\n            value={watchState.weatherIcon}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.weatherIcon = !isNaN(v) ? Math.min(v, 28) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">{WeatherStates.ar[watchState.weatherIcon]}</span>\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Current</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperature}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperature = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Min</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMin}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMin = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Max</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"-99\"\r\n            max=\"99\"\r\n            value={watchState.temperatureMax}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.temperatureMax = !isNaN(v) ? Math.max(Math.min(v, 99), -99) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">UV Index</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"11\"\r\n            value={watchState.uvIndex}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.uvIndex = !isNaN(v) ? Math.min(v, 11) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Quality</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"500\"\r\n            value={watchState.airQuality}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airQuality = !isNaN(v) ? Math.min(v, 500) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group input-group-sm mb-1\">\r\n          <span className=\"input-group-text\">Humidity</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={watchState.humidity}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.humidity = !isNaN(v) ? Math.min(v, 100) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Windforce</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max=\"12\"\r\n            value={watchState.windForce}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.windForce = !isNaN(v) ? Math.min(v, 12) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n          <span className=\"input-group-text\">Air Pressure</span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control form-control-sm\"\r\n            min=\"0\"\r\n            max={watchState.airPressureGoal}\r\n            value={watchState.airPressure}\r\n            onChange={(e) => {\r\n              const ws = { ...watchState };\r\n              const v = parseInt(e.target.value);\r\n              ws.airPressure = !isNaN(v) ? Math.min(v, watchState.airPressureGoal) : 0;\r\n              setWatchState(ws);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group input-group-sm\">\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Blutooth\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.bluetooth}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.bluetooth = !ws.bluetooth;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            DnD\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.dnd}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.dnd = !ws.dnd;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Alarm\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.alarm}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.alarm = !ws.alarm;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Lock\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={watchState.lock}\r\n              onChange={() => {\r\n                let ws = { ...watchState };\r\n                ws.lock = !ws.lock;\r\n                setWatchState(ws);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <Card className='mt-3'>\r\n          <Card.Header>\r\n            <h3>Preview of widgets element</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            { watchState.widgets?.length > 0 ? watchState.widgets.map((w, index) =>\r\n            <div key={index} className=\"input-group input-group-sm mb-1\">\r\n              <span className=\"input-group-text\">Widget {index+1}. Element for preview </span>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-control-sm\"\r\n                value={w+1}\r\n                min={1}\r\n                max={watchface.widgets?.widgets[index]?.widgetElements?.length}\r\n                onChange={(e) => {\r\n                  const ws = { ...watchState };\r\n                  const v = parseInt(e.target.value);\r\n                  ws.widgets[index] = !isNaN(v) ? Math.max(0, v-1) : 0;\r\n                  setWatchState(ws);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : 'no widgets in watchface' }\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewStatesComponent;\r\n","import React, { FC, useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\n\nconst BackgroundAODComponent: FC = () => {\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\n\n  function onChangeBackgroundImageIndex(index: number) {\n    setWatchface({\n      ...watchface,\n      aod: { ...watchface.aod, backgroundImageIndex: index },\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        className=\"clickable\"\n        onClick={() => {\n          let w = {...watchface};\n          w.aod.backgroundCollapsed = !w.aod.backgroundCollapsed;\n          setWatchface(w);\n        }}\n      >\n        Background\n      </Card.Header>\n      {!watchface.aod.backgroundCollapsed ? (\n        <Card.Body>\n          <div className=\"input-group input-group-sm mb-1\">\n            <SelectFileListComponent\n              title='Background'\n              setSelectedFileIndex={onChangeBackgroundImageIndex}\n              imageIndex={watchface.aod.backgroundImageIndex}\n            />\n          </div>\n        </Card.Body>\n      ) : (\n        \"\"\n      )}\n    </Card>\n  );\n};\n\nexport default BackgroundAODComponent;\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDate } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\ninterface IProps {\r\n  collapsed: boolean,\r\n  setCollapsed(collapsed: boolean): void,\r\n}\r\n\r\nconst DateAODComponent: FC<IProps> = ({collapsed, setCollapsed}) => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function updateDay(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.day = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonth(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.month = d;\r\n    updateDate(date);\r\n  }\r\n  function updateMonthAsWord(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.monthAsWord = d;\r\n    updateDate(date);\r\n  }\r\n  function updateYear(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.year = d;\r\n    updateDate(date);\r\n  }\r\n  function updateWeekday(d: WatchCommonDigit) {\r\n    const date = {...watchface.aod.date};\r\n    date.weekDay = d;\r\n    updateDate(date);\r\n  }\r\n\r\n  function copyDayFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.day = {...watchface.date.day}\r\n    updateDate(date)\r\n  }\r\n  function copyMonthFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.month = {...watchface.date.month}\r\n    updateDate(date)\r\n  }\r\n  function copyMonthAsWordFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.monthAsWord = {...watchface.date.monthAsWord}\r\n    updateDate(date)\r\n  }\r\n  function copyYearFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.year = {...watchface.date.year}\r\n    updateDate(date)\r\n  }\r\n  function copyWeekdayFromNormal() {\r\n    const date = {...watchface.aod.date}\r\n    date.weekDay = {...watchface.date.weekDay}\r\n    updateDate(date)\r\n  }\r\n\r\n  function updateDate(wdf: WatchDate) {\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, date: wdf} });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header\r\n          onClick={() => {\r\n            setCollapsed(!collapsed);\r\n          }}\r\n        >\r\n          Date\r\n        </Card.Header>\r\n        <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n          <ImageDigitComponent\r\n            title=\"Day Digits\"\r\n            digit={watchface.aod.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Day Systemfont Rotated\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Day Systemfont Circle\"\r\n            digit={watchface.date.day}\r\n            onUpdate={updateDay}\r\n            onCopyFromNormal={copyDayFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month Digits\"\r\n            digit={watchface.aod.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Month Systemfont Rotated\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.date.month}\r\n            onUpdate={updateMonth}\r\n            onCopyFromNormal={copyMonthFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Month as word\"\r\n            digit={watchface.aod.date.monthAsWord}\r\n            onUpdate={updateMonthAsWord}\r\n            paddingZeroFix={true}\r\n            onCopyFromNormal={copyMonthAsWordFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Year\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <SystemFontComponent\r\n            title=\"Year Systemfont Rotated\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <SystemFontCircleComponent\r\n            title=\"Month Systemfont Circle\"\r\n            digit={watchface.aod.date.year}\r\n            onUpdate={updateYear}\r\n            onCopyFromNormal={copyYearFromNormal}\r\n          />\r\n          <ImageDigitComponent\r\n            title=\"Weekday\"\r\n            digit={watchface.aod.date.weekDay}\r\n            onUpdate={updateWeekday}\r\n            paddingZeroFix={true}\r\n            onCopyFromNormal={copyWeekdayFromNormal}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateAODComponent;\r\n","import { FC, useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { IWatchContext, WatchfaceContext } from \"../context\";\nimport ClockHandComponent from \"./clockHand.component\";\n\ninterface IProps {\n  collapsed: boolean,\n  setCollapsed(collapsed: boolean): void,\n}\n\nconst TimeAnalogAODComponent: FC<IProps> = ({collapsed = true, setCollapsed}) => {\n  const { watchface, setWatchface } =\n    useContext<IWatchContext>(WatchfaceContext);\n\n  function copyHoursFromNormal() {\n    const t = {...watchface.aod.dialFace}\n    t.hoursClockhand = {...watchface.dialFace.hoursClockhand}\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\n  }\n  function copyMinutesFromNormal() {\n    const t = {...watchface.aod.dialFace}\n    t.minutesClockhand = {...watchface.dialFace.minutesClockhand}\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: t} });\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => {\n          setCollapsed(!collapsed);\n        }}\n      >\n        Time Analog\n      </Card.Header>\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\n        <ClockHandComponent\n          title=\"Hours\"\n          clockHand={watchface.aod.dialFace.hoursClockhand}\n          showAngle={false}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.aod.dialFace.hoursClockhand = ch;\n            setWatchface(w);\n          }}\n          onCopyFromNormal={copyHoursFromNormal}\n        />\n\n        <ClockHandComponent\n          title=\"Minutes\"\n          clockHand={watchface.aod.dialFace.minutesClockhand}\n          onUpdate={(ch) => {\n            const w = { ...watchface };\n            w.aod.dialFace.minutesClockhand = ch;\n            setWatchface(w);\n          }}\n          showAngle={false}\n          onCopyFromNormal={copyMinutesFromNormal}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TimeAnalogAODComponent;\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchCommonDigit, WatchDialFace, WatchMultilangImageCoords } from \"../model/watchFace.model\";\r\nimport ImageDigitComponent from \"./imageDigit.component\";\r\nimport MultilangImageCoordsComponent from \"./multiLangImageCoords.component\";\r\nimport SystemFontComponent from \"./systemFont.component\";\r\nimport SystemFontCircleComponent from \"./systemFontCircle.component\";\r\n\r\ninterface IProps {\r\n  collapsed: boolean,\r\n  setCollapsed(collapsed: boolean): void,\r\n}\r\n\r\nconst TimeDigitalAODComponent: FC<IProps> = ({collapsed = true, setCollapsed}) => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function updateHoursDigit(h: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.hoursDigital = h;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateMinutesDigit(m: WatchCommonDigit) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.minutesDigital = m;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n\r\n  function copyHoursFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.hoursDigital = {...watchface.dialFace.hoursDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n  function copyMinutesFromNormal() {\r\n    const t = {...watchface.aod.dialFace}\r\n    t.minutesDigital = {...watchface.dialFace.minutesDigital}\r\n    updateTimeDigital(t)\r\n  }\r\n\r\n  function updateAm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.am = s;\r\n    updateTimeDigital(t);\r\n  }\r\n  function updatePm(s: WatchMultilangImageCoords) {\r\n    const t = {...watchface.aod.dialFace};\r\n    t.pm = s;\r\n    updateTimeDigital(t);\r\n  }\r\n\r\n  function updateTimeDigital(wdf: WatchDialFace) {\r\n    setWatchface({ ...watchface, aod: {...watchface.aod, dialFace: wdf} });\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        onClick={() => {\r\n          setCollapsed(!collapsed);\r\n        }}\r\n      >\r\n        Time Digital\r\n      </Card.Header>\r\n      <Card.Body className={`${collapsed ? \"collapse\" : \"\"}`}>\r\n        <ImageDigitComponent\r\n          title=\"Hours\"\r\n          digit={watchface.aod.dialFace.hoursDigital}\r\n          onUpdate={updateHoursDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={false}\r\n          onCopyFromNormal={copyHoursFromNormal}\r\n          followDisabled={true}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Hours Systemfont Rotated\"\r\n            digit={watchface.aod.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Hours Systemfont Circle\"\r\n            digit={watchface.aod.dialFace.hoursDigital}\r\n            onUpdate={updateHoursDigit}\r\n            followDisabled={true}\r\n        />\r\n        <ImageDigitComponent\r\n          title=\"Minutes\"\r\n          digit={watchface.aod.dialFace.minutesDigital}\r\n          onUpdate={updateMinutesDigit}\r\n          showDecimalPointer={false}\r\n          showDelimiter={false}\r\n          showNoData={false}\r\n          paddingZeroFix={true}\r\n          onCopyFromNormal={copyMinutesFromNormal}\r\n        />\r\n        <SystemFontComponent\r\n            title=\"Minutes Systemfont Rotated\"\r\n            digit={watchface.aod.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n          />\r\n        <SystemFontCircleComponent\r\n            title=\"Minutes Systemfont Circle\"\r\n            digit={watchface.aod.dialFace.minutesDigital}\r\n            onUpdate={updateMinutesDigit}\r\n        />\r\n        <MultilangImageCoordsComponent\r\n          title=\"AM\"\r\n          imageCoords={watchface.aod.dialFace.am}\r\n          onUpdate={updateAm} />\r\n        <MultilangImageCoordsComponent\r\n          title=\"PM\"\r\n          imageCoords={watchface.aod.dialFace.pm}\r\n          onUpdate={updatePm} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeDigitalAODComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport ActivityListComponent from \"../Blocks/activitylist.component\";\r\nimport BackgroundAODComponent from \"../Blocks/backgroundaod.component\";\r\nimport DateAODComponent from \"../Blocks/dateaod.component\";\r\nimport TimeAnalogAODComponent from \"../Blocks/timeAnalogAOD.component\";\r\nimport TimeDigitalAODComponent from \"../Blocks/timeDigitalAOD.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchActivity } from \"../model/watchFace.model\";\r\n\r\nconst AodComponent: FC = () => {\r\n\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n  function updateActivitys(al: WatchActivity[]) {\r\n    let w = {...watchface}\r\n    w.aod.activitylist = al\r\n    w.aod.activitylistCollapsed = false;\r\n    setWatchface(w)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <BackgroundAODComponent />\r\n      <TimeDigitalAODComponent\r\n      collapsed={watchface.aod.dialFace.collapsedDigital}\r\n      setCollapsed={(c) => {\r\n        let s = {...watchface};\r\n        s.aod.dialFace.collapsedDigital = c;\r\n        setWatchface(s)\r\n      }}\r\n       />\r\n      <TimeAnalogAODComponent \r\n        collapsed={watchface.aod.dialFace.collapsedAnalog}\r\n        setCollapsed={(c) => {\r\n          let s = {...watchface};\r\n          s.aod.dialFace.collapsedAnalog = c;\r\n          setWatchface(s)\r\n        }}\r\n      />\r\n      <DateAODComponent \r\n        collapsed={watchface.aod.date.collapsed}\r\n        setCollapsed={(c) => {\r\n          let s = {...watchface};\r\n          s.aod.date.collapsed = c;\r\n          setWatchface(s)\r\n        }}\r\n      />\r\n      <ActivityListComponent\r\n        activitys={watchface.aod.activitylist}\r\n        onUpdate={updateActivitys}\r\n        collapsed={watchface.aod.activitylistCollapsed}\r\n        setCollapsed={(collapsed) => {\r\n          let s = {...watchface};\r\n          s.aod.activitylistCollapsed = collapsed;\r\n          setWatchface(s)\r\n        }}\r\n       />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AodComponent;\r\n","import React, { FC } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { WatchWidgetElement } from '../model/watchFace.model';\r\nimport SelectFileListComponent from '../shared/selectFileList.component';\r\nimport ActivityListComponent from './activitylist.component';\r\n\r\ninterface IProps {\r\n    index: number,\r\n    element: WatchWidgetElement,\r\n    onDelete(e): void,\r\n    onUpdate(element: WatchWidgetElement)\r\n    defaultCount: number,\r\n}\r\n\r\nconst WidgetElementComponent: FC<IProps> = ({index, element, onDelete, onUpdate, defaultCount}) => {\r\n\r\n  return (\r\n      <Card className=\"w-100\">\r\n          <Card.Header \r\n          className=\"d-flex justify-content-between align-items-center\"\r\n              onClick={() => {\r\n                let we = {...element};\r\n                we.collapsed = !we.collapsed;\r\n                onUpdate(we);\r\n              }}>\r\n              <span className=\"input-group-text\">Element {index+1}</span>\r\n              <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete}>Delete</button>\r\n          </Card.Header>\r\n          { !element.collapsed ? \r\n          <Card.Body>\r\n            <div className=\"input-group input-group-sm mb-1\">\r\n              <SelectFileListComponent\r\n                title='Preview'\r\n                setSelectedFileIndex={(ix) => {\r\n                  const ip = { ...element };\r\n                  ip.previewImageIndex = ix;\r\n                  onUpdate(ip);\r\n                }}\r\n                imageIndex={element.previewImageIndex}\r\n              />\r\n            </div>\r\n          <ActivityListComponent\r\n              activitys={element.activitys}\r\n              onUpdate={(al) => {\r\n                let we = {...element};\r\n                we.activitys = al;\r\n                we.activitylistCollapsed = false;\r\n                onUpdate(we);\r\n              }}\r\n              collapsed={element.activitylistCollapsed}\r\n              setCollapsed={(collapsed) => {\r\n                let we = {...element};\r\n                we.activitylistCollapsed = collapsed;\r\n                onUpdate(we);\r\n              }}\r\n          />\r\n          </Card.Body> \r\n          : '' }\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default WidgetElementComponent;","import { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { WatchWidget, WatchWidgetElement } from \"../model/watchFace.model\";\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\nimport ImageCoordsComponent from \"./imageCoords.component\";\nimport WidgetElementComponent from \"./widgetElement.component\";\n\n\ninterface IProps {\n  title: string;\n  widget: WatchWidget;\n  onUpdate(widget: WatchWidget): void;\n  onDelete(e): void;\n}\n\nconst WidgetComponent: FC<IProps> = ({ title, widget, onUpdate, onDelete }) => {\n\n  function addElement(e) {\n    e.stopPropagation()\n    let _wi = {...widget}\n    if (!_wi.widgetElements) _wi.widgetElements = []\n    let _we = new WatchWidgetElement()\n    _wi.widgetElements.push(_we)\n    _wi.widgetElementsCollapsed = false\n    onUpdate(_wi)\n  }\n\n  function deleteElement(e, index: number) {\n    e.stopPropagation();\n    if ( window.confirm(`would you delete this element of widget?`)) {\n      let _wi = {...widget};\n      _wi.widgetElements.splice(index, 1);\n      onUpdate(_wi);\n    }\n  }\n\n  function updateElement(index: number, element: WatchWidgetElement) {\n    let _wi = {...widget}\n    _wi.widgetElements[index] = {...element}\n    onUpdate(_wi)\n  }\n\n  function updateWidgetElementsOrder(list: IDNDItem<WatchWidgetElement>[]) {\n    let _wi = {...widget}\n    _wi.widgetElements = list.map((value) => value.item)\n    onUpdate(_wi)\n  }\n\n  return (\n    <Card>\n      <Card.Header \n      className=\"d-flex justify-content-between align-items-center\"\n      onClick={() => {\n        let wi = {...widget};\n        wi.collapsed = !wi.collapsed;\n        onUpdate(wi)\n      }}>\n          <span className=\"input-group-text\">{title}</span>\n          <button className=\"btn btn-outline-danger\" type=\"button\" onClick={onDelete}>Delete</button>\n      </Card.Header>\n      {!widget.collapsed ? \n      <Card.Body>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              X\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.x}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let x = parseInt(e.target.value);\n                _wi.x = !isNaN(x) ? x : 0;\n                onUpdate(_wi);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Y\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.y}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let y = parseInt(e.target.value);\n                _wi.y = !isNaN(y) ? y : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.width}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.width = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Height\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.height}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.height = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <div className=\"input-group input-group-sm pt-1\">\n            <SelectFileListComponent\n              title='Frame activ'\n              setSelectedFileIndex={(ix) => {\n                const ip = { ...widget };\n                ip.borderActivImageIndex = ix;\n                onUpdate(ip);\n              }}\n              imageIndex={widget.borderActivImageIndex}\n            />\n            <SelectFileListComponent\n              title='Frame inactiv'\n              setSelectedFileIndex={(ix) => {\n                const _wi = { ...widget };\n                _wi.borderInactivImageIndex = ix;\n                onUpdate(_wi);\n              }}\n              imageIndex={widget.borderInactivImageIndex}\n            />\n          </div>\n          <div className=\"input-group input-group-sm pt-1\">\n            <ImageCoordsComponent\n              title='Description background'\n              imageCoords={widget.descriptionImageBackground}\n              onUpdate={(ic) => {\n                let wi = {...widget};\n                wi.descriptionImageBackground = ic\n                onUpdate(wi)\n              }\n\n              }\n            />\n          </div>\n          <div className=\"input-group input-group-sm\">\n            <span className=\"input-group-text\" id=\"addon-wrapping\">\n              Description width\n            </span>\n            <input\n              type=\"number\"\n              className=\"form-control form-control-sm\"\n              value={widget.descriptionWidthCheck}\n              onChange={(e) => {\n                const _wi = { ...widget };\n                let val = parseInt(e.target.value);\n                _wi.descriptionWidthCheck = !isNaN(val) ? val : 0;\n                onUpdate(_wi);\n              }}\n            />\n          </div>\n          <Card className=\"pt-1\">\n            <Card.Header className=\"d-flex justify-content-between align-items-center\"\n              onClick={() => {\n                let wi = {...widget};\n                wi.widgetElementsCollapsed = !wi.widgetElementsCollapsed;\n                onUpdate(wi);\n              }}>\n              Elements [{widget.widgetElements?.length}]\n              <button className=\"btn btn-outline-success\" type=\"button\" onClick={addElement}>Add</button>\n            </Card.Header>\n            { !widget.widgetElementsCollapsed ? \n            <Card.Body>\n              { widget.widgetElements?.length > 0 ?\n              <DnDListComponent\n               _list={\n              widget.widgetElements?.map(\n                (element, index) => ({item: element, reactItem:\n                <WidgetElementComponent\n                  key={index}\n                  index={index}\n                  element={element}\n                  defaultCount={1}\n                  onDelete={(e) => deleteElement(e, index)}\n                  onUpdate={(element) => updateElement(index, element)}\n                />})) }\n                updateOrder={updateWidgetElementsOrder}\n              /> : 'no elements added' }\n            </Card.Body>\n            : ''}\n          </Card>\n        </Card.Body>\n         : '' }\n     </Card>\n    );\n};\n\nexport default WidgetComponent;\n","import { FC, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport WidgetComponent from \"../Blocks/widget.component\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { WatchWidget, WatchWidgets } from \"../model/watchFace.model\";\r\nimport SelectFileListComponent from \"../shared/selectFileList.component\";\r\n\r\nconst WidgetsComponent: FC = () => {\r\n  const { watchface, setWatchface }  = useContext<IWatchContext>(WatchfaceContext)\r\n\r\n \r\n  function updateWidgets(widgets: WatchWidgets) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets = {...widgets}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function updateWidget(index: number, wi: WatchWidget) {\r\n    let _wf = {...watchface}\r\n    _wf.widgets.widgets[index] = {...wi}\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function addWidget(e) {\r\n    e.stopPropagation()\r\n    let _wi = new WatchWidget()\r\n    let _wf = {...watchface}\r\n    if (!_wf.widgets) {\r\n      _wf.widgets = new WatchWidgets()\r\n    }\r\n    _wf.widgets.enabled = true;\r\n    _wf.widgets.widgets.push(_wi)\r\n    setWatchface(_wf)\r\n  }\r\n\r\n  function deleteWidget(e, index: number) {\r\n    e.stopPropagation()\r\n    if ( window.confirm(`would you delete this widget?`)) {\r\n      let _wf = {...watchface}\r\n      _wf.widgets.widgets.splice(index, 1)\r\n      setWatchface(_wf)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className=\"input-group input-group-sm\">\r\n                <SelectFileListComponent\r\n                  title='Top mask'\r\n                  setSelectedFileIndex={(ix) => {\r\n                    const ws = { ...watchface.widgets };\r\n                    ws.enabled = true;\r\n                    ws.topMaskImageIndex = ix;\r\n                    updateWidgets(ws);\r\n                  }}\r\n                  imageIndex={watchface.widgets?.topMaskImageIndex}\r\n                />\r\n                <SelectFileListComponent\r\n                  title='Bottom mask'\r\n                  setSelectedFileIndex={(ix) => {\r\n                    const ws = { ...watchface.widgets };\r\n                    ws.enabled = true;\r\n                    ws.underMaskImageIndex = ix;\r\n                    updateWidgets(ws);\r\n                  }}\r\n                  imageIndex={watchface.widgets?.underMaskImageIndex}\r\n                />\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n      <Card.Header className=\"d-flex justify-content-between align-items-center\"\r\n        onClick={() => {\r\n          let wf = {...watchface};\r\n          wf.widgets.collapsed = !wf.widgets.collapsed;\r\n          setWatchface(wf);\r\n        }}\r\n      >\r\n        Widgets [{watchface.widgets?.widgets?.length}]\r\n          <button className=\"btn btn-outline-success\" type=\"button\" onClick={addWidget}>Add</button>\r\n      </Card.Header>\r\n      <Card.Body>\r\n          {watchface.widgets?.widgets?.length > 0 ? \r\n          <>\r\n            { watchface.widgets.widgets.map((item, index) => {\r\n              return (\r\n                <WidgetComponent\r\n                  key={index}\r\n                  title={`Widget ${index+1}`}\r\n                  widget={item}\r\n                  onUpdate={(widget) => updateWidget(index, widget)}\r\n                  onDelete={(e) => deleteWidget(e, index)}\r\n                />\r\n              )\r\n            }) }\r\n          </> : 'no widgets added'}\r\n      </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WidgetsComponent;\r\n","import { FC, useContext, useState } from \"react\";\r\nimport { WatchfaceContext } from \"../context\";\r\nimport ScreenNormalcomponent from \"./screennormal.component\";\r\nimport PreviewStatesComponent from \"./previewstates.component\";\r\nimport AodComponent from \"./aod.component\";\r\nimport WidgetsComponent from \"./widgets.component\";\r\n\r\nconst tabs = [\r\n  { id: 0, name: \"Screen normal\" },\r\n  { id: 1, name: \"AOD\" },\r\n  { id: 2, name: \"Widgets\" },\r\n  { id: 3, name: \"Preview State\" },\r\n];\r\n\r\nconst LeftSideComponent: FC = () => {\r\n\r\n  const { setPreviewScreenNormal } = useContext(WatchfaceContext)\r\n\r\n  const [tabLeft, setTabLeft] = useState<number>(0);\r\n\r\n  function onclick(tabid: number) {\r\n    setTabLeft(tabid)\r\n    if (tabid === 1) setPreviewScreenNormal(false)\r\n    if (tabid === 0) setPreviewScreenNormal(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${tabLeft === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => onclick(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {tabLeft === 0 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <ScreenNormalcomponent />\r\n        </div>\r\n      ) : tabLeft === 1 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <AodComponent />\r\n        </div>\r\n      ) : tabLeft === 2 ? (\r\n        <div className=\"mt-3 blocks\">\r\n          <WidgetsComponent />\r\n        </div>\r\n      ) : tabLeft === 3 ? (\r\n        <div className=\"mt-3\">\r\n          <PreviewStatesComponent />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideComponent;\r\n","import { FC, useContext } from \"react\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { ElementOrderItem } from \"../model/watchFace.model\";\r\nimport DnDListComponent, { IDNDItem } from \"../shared/draganddroplist.component\";\r\n\r\nconst ElementOrderComponent: FC = () => {\r\n  const { watchface, setWatchface } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  function onUpdateDateOrder(list: IDNDItem<ElementOrderItem>[]) {\r\n    setWatchface({\r\n      ...watchface,\r\n      orderElements: { ...watchface.orderElements, orderElementsDate: list.map((value) => value.item) },\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <h2>order of date elements</h2>\r\n      <DnDListComponent\r\n        _list={watchface.orderElements.orderElementsDate.map((value) => ({ item: value, reactItem: value.title}) )}\r\n        updateOrder={onUpdateDateOrder}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElementOrderComponent;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { Activity, DigitalDigit, Shortcut, WatchJson, Widget, Widgets } from \"../model/json.model\";\r\nimport { WidgetElement } from \"../model/json_gts2mini.model\";\r\nimport { DateType, LangCodeType } from \"../model/types.model\";\r\nimport WatchFace, { WatchActivity, WatchAOD, WatchClockHand, WatchCommonDigit, WatchImageCoords, WatchImageProgress, WatchProgressBar, WatchWidget, WatchWidgetElement, WatchWidgets } from \"../model/watchFace.model\";\r\nimport Color from \"../shared/color\";\r\nimport { Constant } from \"../shared/constant\";\r\nimport cl from './JsonComponent.module.css';\r\n\r\nconst JsonComponent: FC = () => {\r\n\r\n    const {watchface, jsonName } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n    const [json, setJson] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        let json = generateJson(watchface)\r\n        setJson(json)\r\n        saveJson(json)\r\n    }, [watchface]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function generateJson(w: WatchFace): string {\r\n        let timeDigitalEnabled = w.dialFace.hoursDigital.enabled || w.dialFace.minutesDigital.enabled || w.dialFace.secondsDigital.enabled || w.dialFace.am.enabled || w.dialFace.pm.enabled\r\n        let timeDigitalAodEnabled = w.aod.dialFace.hoursDigital.enabled || w.aod.dialFace.minutesDigital.enabled || w.aod.dialFace.am.enabled || w.aod.dialFace.pm.enabled\r\n        let timeClockHandEnabled = w.dialFace.hoursClockhand.enabled || w.dialFace.minutesClockhand.enabled || w.dialFace.secondsClockhand.enabled\r\n        let timeClockHandAodEnabled = w.aod.dialFace.hoursClockhand.enabled || w.aod.dialFace.minutesClockhand.enabled\r\n\r\n        let dateEnabled = w.date.day.enabled || w.date.month.enabled || w.date.monthAsWord.enabled || w.date.weekDay.enabled || w.date.year.enabled\r\n        let dateAodEnabled = w.aod.date.day.enabled || w.aod.date.month.enabled || w.aod.date.monthAsWord.enabled || w.aod.date.weekDay.enabled || w.aod.date.year.enabled\r\n        let statusEnabled = w.status.alarm.enabled || w.status.bluetooth.enabled || w.status.lock.enabled || w.status.dnd.enabled\r\n\r\n        let dialFaceEnabled = timeDigitalEnabled || timeClockHandEnabled\r\n        let dialFaceAodEnabled = timeDigitalAodEnabled || timeClockHandAodEnabled\r\n\r\n        let timeDigits = getTimeDigital(watchface)\r\n        let timeDigitsAod = getTimeDigital(watchface.aod)\r\n\r\n        let dateDigits = getDate(watchface)\r\n        let dateDigitsAod = getDate(watchface.aod)\r\n        \r\n        let activitys = activitysToJson(watchface.activity)\r\n        let activitysAod = activitysToJson(watchface.aod.activitylist)\r\n\r\n        let j: WatchJson = {\r\n            Info: {\r\n                DeviceId: Constant.deviceId\r\n            },\r\n            Background: w.background.imageIndex || w.background.color || w.background.previewIndex  ? {\r\n                Preview: w.background.previewIndex ? [\r\n                    {\r\n                        LangCode: LangCodeType.All.json,\r\n                        ImageSet: {\r\n                            ImageIndex: w.background.previewIndex ,\r\n                            ImagesCount: 1\r\n                        }\r\n                    }\r\n                ] : null,\r\n                BackgroundImageIndex: w.background.imageIndex ,\r\n                Color: w.background.color ? Color.colorBackgroundWrite(w.background.color) : null\r\n            } : null\r\n            ,\r\n            DialFace: dialFaceEnabled ? {\r\n                DigitalDialFace:  timeDigitalEnabled ? {\r\n                    Digits: timeDigits.length > 0 ? timeDigits : null,\r\n                    AM: w.dialFace.am.enabled ? w.dialFace.am.json : null,\r\n                    PM: w.dialFace.pm.enabled ? w.dialFace.pm.json : null,\r\n                } : null,\r\n                AnalogDialFace: timeClockHandEnabled ? {\r\n                    Hours: w.dialFace.hoursClockhand.enabled ? w.dialFace.hoursClockhand.json : null,\r\n                    Minutes:  w.dialFace.minutesClockhand.enabled ? w.dialFace.minutesClockhand.json : null,\r\n                    Seconds:  w.dialFace.secondsClockhand.enabled ? w.dialFace.secondsClockhand.json : null\r\n                } : null,\r\n                ProgressDialFace: null\r\n            } : null,\r\n            System: dateEnabled || activitys.length > 0 || statusEnabled ? {\r\n                Status: statusEnabled ? {\r\n                    Bluetooth: w.status.bluetooth.enabled ? w.status.bluetooth.json: null,\r\n                    DoNotDisturb: w.status.dnd.enabled ? w.status.dnd.json : null,\r\n                    Lock: w.status.lock.enabled ? w.status.lock.json: null,\r\n                    Alarm: w.status.alarm.enabled ? w.status.alarm.json : null\r\n                }: null,\r\n                Date: dateEnabled ? {\r\n                    DateDigits: dateDigits.length > 0 ? dateDigits : null,\r\n                    WeeksDigits: w.date.weekDay.enabled ? w.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitys.length > 0 ? activitys : null\r\n            } : null,\r\n            Widgets: w.widgets ? getWidgets(w.widgets) : null,\r\n            ScreenIdle: w.aod.backgroundImageIndex || dialFaceAodEnabled || dateAodEnabled || activitysAod.length > 0 ? {\r\n                BackgroundImageIndex: w.aod.backgroundImageIndex ? w.aod.backgroundImageIndex : null,\r\n                DialFace: dialFaceAodEnabled ? {\r\n                    DigitalDialFace:  timeDigitalAodEnabled ? {\r\n                        Digits: timeDigitsAod.length > 0 ? timeDigitsAod : null,\r\n                        AM: w.aod.dialFace.am.enabled ? w.aod.dialFace.am.json : null,\r\n                        PM: w.aod.dialFace.pm.enabled ? w.aod.dialFace.pm.json : null,\r\n                    } : null,\r\n                    AnalogDialFace: timeClockHandAodEnabled ? {\r\n                        Hours: w.aod.dialFace.hoursClockhand.enabled ? w.aod.dialFace.hoursClockhand.json : null,\r\n                        Minutes:  w.aod.dialFace.minutesClockhand.enabled ? w.aod.dialFace.minutesClockhand.json : null,\r\n                        Seconds: null\r\n                    } : null,\r\n                    ProgressDialFace: null \r\n                } : null,\r\n                Date: dateAodEnabled ? {\r\n                    DateDigits: dateDigitsAod.length > 0 ? dateDigitsAod : null,\r\n                    WeeksDigits: w.aod.date.weekDay.enabled ? w.aod.date.weekDay.json : null,\r\n                    DateProgressBar: null,\r\n                    DateClockHand: null\r\n                } : null,\r\n                Activity: activitysAod.length > 0 ? activitysAod : null,\r\n            } : null\r\n        }\r\n        return JSON.stringify(j, (key, value) => {\r\n            if (value !== null && value !== undefined) return value\r\n          }, \"  \")\r\n    }\r\n    \r\n    function saveJson(json: string) {\r\n        if (json.length > 0) {\r\n            var a = document.getElementById(\"saveJson\") as HTMLAnchorElement;\r\n            if (a) {\r\n                var file = new Blob([json], {type: 'text/plain'});\r\n                let filename = jsonName ? jsonName : 'watchface.json'\r\n                a.href = URL.createObjectURL(file);\r\n                a.download = filename;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card className={cl.json}>\r\n            <pre>\r\n                {json}\r\n            </pre>\r\n        </Card>\r\n        <br/>\r\n        <a href=\"a\" id=\"saveJson\">download json file</a>\r\n        </>\r\n    )\r\n    \r\n};\r\n\r\nexport default JsonComponent;\r\n\r\nexport function activitysToJson(alist: WatchActivity[]): Activity[] {\r\n    let activitys: Activity[] = []\r\n    if (!alist) return activitys\r\n    alist.forEach(item => {\r\n        let digits: WatchCommonDigit[] = []\r\n        let enabled = false\r\n        let imageProgress: WatchImageProgress = null\r\n        let pointerProgress: WatchClockHand = null\r\n        let icon: WatchImageCoords = null\r\n        let progressBar: WatchProgressBar = null\r\n        let shortcut: Shortcut = null\r\n\r\n        if (item) {\r\n            if (item.digit.enabled) {enabled = true; digits.push(item.digit)}\r\n            if (item.digitMin.enabled) {enabled = true; digits.push(item.digitMin)}\r\n            if (item.digitMax.enabled) {enabled = true; digits.push(item.digitMax)}\r\n            if (item.imageProgress.enabled) {\r\n                enabled = true\r\n                imageProgress = item.imageProgress\r\n            }\r\n            if (item.pointerProgress.enabled) {\r\n                enabled = true\r\n                pointerProgress = item.pointerProgress\r\n            }\r\n            if (item.progressBar.enabledLinear || item.progressBar.enabledCircle) {\r\n                enabled = true\r\n                progressBar = item.progressBar\r\n            }\r\n            if (item.icon.enabled) {\r\n                enabled = true\r\n                icon = item.icon\r\n            }\r\n            if (item.shortcut) {\r\n                enabled = true\r\n                shortcut = item.shortcut\r\n            }\r\n        }\r\n\r\n        if (enabled) {\r\n            activitys.push({\r\n                Type: item.type.json,\r\n                PointerProgress: pointerProgress ? pointerProgress.json : null,\r\n                ProgressBar: progressBar ? progressBar.jsonObj : null,\r\n                ImageProgress: imageProgress?.enabled ? imageProgress.json : null,\r\n                Digits: digits.length > 0 ? digits.map(d => d.json) : null,\r\n                Shortcut: shortcut ? shortcut : null,\r\n                Icon: icon?.enabled ? icon.json : null\r\n            })\r\n        }\r\n    })\r\n    return activitys\r\n}\r\n\r\nfunction getTimeDigital(w: WatchFace | WatchAOD): DigitalDigit[] {\r\n    let timeDigits: DigitalDigit[] = []\r\n\r\n    if (w.dialFace.hoursDigital?.enabled) timeDigits.push(w.dialFace.hoursDigital.json)\r\n    if (w.dialFace.minutesDigital?.enabled) timeDigits.push(w.dialFace.minutesDigital.json)\r\n    if (w.dialFace.secondsDigital?.enabled) timeDigits.push(w.dialFace.secondsDigital.json)\r\n    \r\n    return timeDigits\r\n}\r\n\r\nfunction getDate(w: WatchFace| WatchAOD): DigitalDigit[] {\r\n    let dateDigits: DigitalDigit[] = []\r\n    w.orderElements.orderElementsDate.forEach(item => {\r\n        let digit: WatchCommonDigit = null\r\n        let enabled = false\r\n        if ( item.type === DateType.Year.index) {\r\n            if (w.date.year.enabled) enabled = true\r\n                digit = w.date.year\r\n        } else if ( item.type === DateType.Month.index) {\r\n            if (w.date.month.enabled ) { enabled = true;  digit = w.date.month}\r\n            else if (w.date.monthAsWord.enabled ) { enabled = true;  digit = w.date.monthAsWord}\r\n        } else  if ( item.type === DateType.Day.index) {\r\n            if (w.date.day.enabled) enabled = true\r\n            digit = w.date.day\r\n        }\r\n        if (enabled) dateDigits.push(digit.json)\r\n    })\r\n    return dateDigits\r\n}\r\n\r\nfunction getWidgets(widgets: WatchWidgets): Widgets | null {\r\n    let result: Widgets = null\r\n    if (widgets) {\r\n        result = {\r\n            TopMaskImageIndex: widgets.topMaskImageIndex,\r\n            UnderMaskImageIndex: widgets.underMaskImageIndex,\r\n            Unknown4: widgets.showTimeOnEditScreen,\r\n            Widget: widgets.widgets?.length > 0 ? widgets.widgets.map((item) => getWidget(item)) : null\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getWidget(widget: WatchWidget): Widget | null {\r\n    return ({\r\n        X: widget.x,\r\n        Y: widget.y,\r\n        Width: widget.width,\r\n        Height: widget.height,\r\n        BorderActivImageIndex: widget.borderActivImageIndex,\r\n        BorderInactivImageIndex: widget.borderInactivImageIndex,\r\n        DescriptionImageBackground: widget.descriptionImageBackground.json,\r\n        DescriptionWidthCheck: widget.descriptionWidthCheck,\r\n        WidgetElement: widget.widgetElements?.length ? widget.widgetElements.map( (we) => getWidgetElement(we)) : null\r\n    })\r\n}\r\n\r\nfunction getWidgetElement(we: WatchWidgetElement): WidgetElement {\r\n    let activitys = activitysToJson(we.activitys)\r\n    return {\r\n        Preview: [\r\n            {\r\n                LangCode: LangCodeType.All.json,\r\n                ImageSet: {\r\n                    ImageIndex: we.previewImageIndex,\r\n                    ImagesCount: 1\r\n                }\r\n            }\r\n        ],\r\n        Date: null,\r\n        Activity: activitys?.length > 0 ? activitys : null\r\n    }\r\n}\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n  const { draw, className, ...rest } = props;\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const render = () => {\r\n      draw(canvas, context);\r\n    };\r\n    render();\r\n  }, [draw]);\r\n\r\n  return <canvas className={className} ref={canvasRef} {...rest} />;\r\n};\r\n\r\nexport default Canvas;\r\n","import { IImage } from \"../model/image.model\"\r\n\r\n\r\nexport function findImageById(id: number, images: IImage[]): HTMLImageElement | null {\r\n    const i = images.find((item) => item.id === id)\r\n    if (i) {\r\n        return i.image\r\n    } else {\r\n        alert('Image with Index  ' + id + ' not found')\r\n        return null\r\n    }\r\n}","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { ImageCoord } from \"../../model/json.model\";\r\n\r\nexport default function drawImageCoords(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[], \r\n    imageCoord: ImageCoord) {\r\n        if (imageCoord.ImageIndex) {\r\n            let x = imageCoord.Coordinates?.X ? imageCoord.Coordinates.X : 0\r\n            let y = imageCoord.Coordinates?.Y ? imageCoord.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}","import { findImageById } from \"../../shared/helper\"\r\nimport { IImage } from \"../../model/image.model\"\r\nimport { AlignmentType, LangCodeType } from \"../../model/types.model\"\r\nimport { MultilangImage } from \"../../model/json.model\"\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\"\r\nimport drawSeparator from './imageCoords.element'\r\n\r\nexport default function drawDigitImage(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean): [number, number] | null  {\r\n    const x = followXY ? followXY[0] : ( digit.json?.Digit?.Image?.X ? digit.json?.Digit?.Image?.X : 0 )\r\n    const y = followXY ? followXY[1] : ( digit.json?.Digit?.Image?.Y ? digit.json?.Digit?.Image?.Y : 0 )\r\n    const imageSetIndex = findImageIndex(digit.json.Digit?.Image?.MultilangImage);\r\n    const unitImageSetIndex =findImageIndex(digit.json.Digit?.Image?.MultilangImageUnit);\r\n\r\n    //console.log(number, x, y, imageSetIndex, digit.json.Digit.Image.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex);\r\n    \r\n\r\n    if (digit.json.Digit?.Image?.MultilangImage &&\r\n        digit.json.Digit.Image.MultilangImage[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n            let strNumber = number.toString()\r\n            if (number < 0) strNumber = (-number).toString()\r\n            if ( !digit.json.Digit.DisplayFormAnalog && (digit.json.Digit.PaddingZero || paddingZeroFix)) {\r\n                strNumber = strNumber.padStart(digit.con.numberLenght, '0' )\r\n            }\r\n            let ar: HTMLImageElement[] = []\r\n            if (digit.json.Digit.Image.DelimiterImageIndex) {\r\n                if (number < 0){\r\n                    const img = findImageById(digit.json.Digit.Image.DelimiterImageIndex, images)\r\n                    if (img) ar.push(img)\r\n                }\r\n            }\r\n\r\n            if (digit.json.Digit.DisplayFormAnalog) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex + number, images)\r\n                if (img) ar.push(img)\r\n            } else {\r\n                ar = ar.concat(getImages(images, strNumber, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImageIndex, \r\n                    digit.json.Digit.Image.MultilangImage[imageSetIndex].ImageSet.ImagesCount,\r\n                    digit.json.Digit.Image.DecimalPointImageIndex ))\r\n            }\r\n            if (digit.json.Digit.Image.MultilangImageUnit && digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex]) {\r\n                const img = findImageById(digit.json.Digit.Image.MultilangImageUnit[unitImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ar.push(img)\r\n            }\r\n\r\n            const followXY = drawImages(ctx, ar, x, y, digit.json.Digit.Spacing, \r\n                digit.json.Digit.Alignment, digit.con.numberLenght - strNumber.length, drawBorder)\r\n\r\n            if ( digit.json.Separator) {\r\n                drawSeparator(ctx, images, digit.json.Separator)\r\n            }\r\n            return followXY\r\n        }\r\n        return followXY;\r\n    }\r\n\r\nfunction getImages(\r\n    images: IImage[], \r\n    strNumber: string, \r\n    startImageIndex: number, \r\n    count: number, decimalPointer: number): HTMLImageElement[] {\r\n    const ar: HTMLImageElement[] = []\r\n    for (let i = 0; i < strNumber.length; i++) {\r\n        if (decimalPointer && i === strNumber.length - 2) {\r\n            const img = findImageById(decimalPointer, images)\r\n            if (img) { ar.push(img) }\r\n        }\r\n        var chr = strNumber.charAt(i);\r\n        var n = parseInt(chr)\r\n        if (!isNaN(n) && n < count) {\r\n            const img = findImageById(startImageIndex + n, images)\r\n            if (img) { ar.push(img) }\r\n        } else {\r\n            alert('cant parse number string: ' + strNumber + ' at index ' + i)\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction drawImages(ctx: CanvasRenderingContext2D, ar: HTMLImageElement[], \r\n    startx: number, \r\n    starty: number, \r\n    spacing: number, \r\n    alignment: string, \r\n    paddingLenght: number, \r\n    drawborder: boolean): [number, number] | null  {\r\n    if ( ar.length === 0) return\r\n    let imageWidth: number = 0\r\n    \r\n    if (!spacing) spacing = 0\r\n\r\n    ar.forEach(img => {\r\n        if (imageWidth && spacing) imageWidth += spacing\r\n        imageWidth += img.width\r\n    })\r\n\r\n    let maxWidth: number = imageWidth\r\n\r\n    if (paddingLenght) {\r\n        maxWidth = imageWidth + ( spacing + ar[0].width ) * paddingLenght\r\n    }\r\n    let x = startx\r\n    let y = starty\r\n    if (alignment === AlignmentType.Right.json) { // right\r\n        x = x + maxWidth - imageWidth\r\n    } else if (alignment === AlignmentType.Center.json) { // center\r\n        x = x + (maxWidth - imageWidth) / 2\r\n    }\r\n\r\n    //console.log(x, y, maxWidth, imageWidth);\r\n    \r\n\r\n    let height = 0\r\n\r\n    ar.forEach(img => {\r\n        ctx.drawImage(img, x, y);\r\n        height = Math.max(img.height, height)\r\n        x += img.width\r\n        if ( spacing ) x += spacing\r\n    })\r\n    if ( drawborder) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = 'gray'\r\n        ctx.rect(startx, starty, maxWidth, height);\r\n        ctx.stroke();\r\n    }\r\n\r\n    return [x, y]\r\n}\r\n\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let resultIndex = 0\r\n    ar.forEach((item, index) => {\r\n        if ( item.LangCode === LangCodeType.All.json) {\r\n            resultIndex = index\r\n        }\r\n    })\r\n   \r\n    return resultIndex\r\n  }","\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\";\r\nimport Color from \"../../shared/color\";\r\n\r\nexport function drawSystemFont(\r\n    ctx: CanvasRenderingContext2D,\r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize: number = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let spacing: number = digit.json.Digit.Spacing\r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    ctx.save();\r\n    var tx = systemFont.Coordinates?.X ? systemFont.Coordinates.X : 0;\r\n    var ty = systemFont.Coordinates?.Y ? systemFont.Coordinates.Y : 0;\r\n    let radians = Math.PI / 180 * (systemFont.Angle)\r\n    ctx.translate(tx, ty);\r\n    ctx.rotate(radians);\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    let x = 0;\r\n    for (var i = 0; i < text.length; i++) {\r\n        ctx.fillText(text[i], x, 0);\r\n        x = x + ctx.measureText(text[i]).width + spacing\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function drawSystemFontFontRotated(\r\n    ctx: CanvasRenderingContext2D, \r\n    digit: WatchCommonDigit, \r\n    text: string): [number, number] | null {\r\n    \r\n        if (! digit.json?.Digit?.SystemFont) return null\r\n\r\n    let systemFont = digit.json.Digit.SystemFont\r\n    let fontSize = systemFont.Size ? systemFont.Size*0.8 : 0;\r\n    let radius = systemFont.FontRotate.Radius\r\n    let spacing: number = digit.json.Digit.Spacing\r\n   \r\n    ctx.font = `${fontSize}px Verdana`;\r\n\r\n    var tx = systemFont.FontRotate?.X ? systemFont.FontRotate.X : 0;\r\n    var ty = systemFont.FontRotate?.Y ? systemFont.FontRotate.Y : 0;\r\n    ctx.fillStyle = Color.colorRead(systemFont.Color)\r\n    \r\n    ctx.save();\r\n    ctx.translate(tx, ty);\r\n    if ( systemFont.FontRotate.RotateDirection !== 1) {\r\n        ctx.rotate(Math.PI / 180 * systemFont.Angle);\r\n        for (var i = 0; i < text.length; i++) {\r\n            let width = ctx.measureText(text[i]).width\r\n            ctx.fillText(text[i], 0, - systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * spacingAngle );\r\n        }\r\n    } else {\r\n        ctx.rotate(Math.PI / 180 * (180 - systemFont.Angle) );\r\n        for (var j = 0; j < text.length; j++) {\r\n            let width = ctx.measureText(text[j]).width\r\n            ctx.fillText(text[j], 0, + systemFont.FontRotate.Radius);\r\n            let sp = width + spacing\r\n            let spacingAngle = sp * 180 / (radius * Math.PI)\r\n            ctx.rotate( Math.PI / 180 * -spacingAngle );\r\n        }\r\n    }\r\n    ctx.restore();\r\n    return null\r\n}\r\n\r\nexport function addUnitsAndSeparator(text: string, digit: WatchCommonDigit): string {\r\n    let systemFont = digit.json.Digit?.SystemFont\r\n    let result = text\r\n    if ( !systemFont) return result\r\n    if (systemFont.ShowUnitCheck === -1) {\r\n        result = result + digit.con.unit[0]\r\n    } else if (systemFont.ShowUnitCheck === 1) {\r\n        result = result + digit.con.unit[1]\r\n    } else if ( systemFont.ShowUnitCheck === 2) {\r\n        result = result + digit.con.unit[2]\r\n    } \r\n    if (digit.json.Separator) {\r\n        result = result + digit.con.separator\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getSystemFontText(digit: WatchCommonDigit, value: number): string {\r\n    let systemFontText = value.toString()\r\n    \r\n    if (digit.json.Digit.PaddingZero) {\r\n        systemFontText = systemFontText.padStart(digit.con.numberLenght, '0')\r\n    }\r\n    if (digit.con.decimalDelimiter) {\r\n        if ( systemFontText.length > 3)\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-2) + '.' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n        else if ( systemFontText.length > 1 )\r\n            systemFontText = systemFontText.substring(0, systemFontText.length-1) + '.' + systemFontText.substring(systemFontText.length-1, systemFontText.length)\r\n    }\r\n    if (digit.con.timeDelimiter && systemFontText.length > 2 )\r\n        systemFontText = systemFontText.substring(0, systemFontText.length-2) + ':' + systemFontText.substring(systemFontText.length-2, systemFontText.length)\r\n    systemFontText = addUnitsAndSeparator(systemFontText, digit)\r\n    console.log('return', systemFontText);\r\n    return systemFontText\r\n}\r\n\r\n\r\n","import { IImage } from \"../../model/image.model\"\r\nimport { WatchCommonDigit } from \"../../model/watchFace.model\"\r\nimport drawDigitImage from \"./digitImage.element\"\r\nimport {drawSystemFont, drawSystemFontFontRotated} from \"./systemfont.element\"\r\n\r\nexport default function drawDigit(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    digit: WatchCommonDigit, \r\n    number: number, \r\n    followXY?: [number, number], \r\n    drawBorder?: boolean,\r\n    paddingZeroFix?: boolean,\r\n    systemFontText?: string,\r\n    ): [number, number] | null  {\r\n        if (!digit) return\r\n        if (digit.enabledImage) return drawDigitImage(ctx, images, digit, number, followXY, drawBorder, paddingZeroFix)\r\n        if (digit.enabledSystemFont || digit.enabledSystemFontCircle) {\r\n            if (!systemFontText) return followXY\r\n            if (digit.enabledSystemFontCircle)\r\n                return drawSystemFontFontRotated(ctx, digit, systemFontText)\r\n            else\r\n                return drawSystemFont(ctx, digit, systemFontText)\r\n        }\r\n        return followXY\r\n}\r\n\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { MultilangImage } from \"../../model/json.model\";\r\nimport { WatchClockHand } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawPointer(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    clockHand: WatchClockHand, \r\n    value: number, \r\n    total: number,\r\n    withOffset?: boolean) {\r\n        if (total === null) return\r\n        if (clockHand.json.Scale) {\r\n            const scaleImageSetIndex = findImageIndex(clockHand.json.Scale?.ImageSet);\r\n            if (clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex >= 0) {\r\n                let x = clockHand.json.Scale.Coordinates?.X ? clockHand.json.Scale.Coordinates?.X : 0\r\n                let y = clockHand.json.Scale.Coordinates?.Y ? clockHand.json.Scale.Coordinates?.Y : 0\r\n                let img = findImageById(clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n            }\r\n        }\r\n        if (clockHand.json.Pointer?.ImageIndex >= 0) {\r\n            let x = clockHand.json.X ? clockHand.json.X : 0\r\n            let y = clockHand.json.Y ? clockHand.json.Y : 0\r\n            if ( !clockHand.json.X && !clockHand.json.Y) {\r\n                x = clockHand.json.X ? clockHand.json.X : Constant.width / 2\r\n                y = clockHand.json.Y ? clockHand.json.Y : Constant.height / 2\r\n            }\r\n            let img = findImageById(clockHand.json.Pointer?.ImageIndex, images)\r\n            if (img) {\r\n                let offsetX = clockHand.json.Pointer.Coordinates?.X ? clockHand.json.Pointer.Coordinates?.X : img.width / 2\r\n                let offsetY = clockHand.json.Pointer.Coordinates?.Y ? clockHand.json.Pointer.Coordinates?.Y : img.height / 2\r\n                \r\n                let _startAngle = clockHand.json.StartAngle ? clockHand.json.StartAngle: 0\r\n                let _endAngle = clockHand.json.EndAngle ? clockHand.json.EndAngle: 360\r\n                let offsetAngle = withOffset ? (offsetX) * 180 / (offsetY * Math.PI) : 0\r\n                let angle = _startAngle + Math.round(value * (_endAngle - _startAngle ) / total) + offsetAngle\r\n                \r\n                angle = Math.min(angle, _endAngle + offsetAngle)\r\n                angle = Math.max(angle, _startAngle)\r\n                let radians = (Math.PI/180) * angle\r\n                \r\n                ctx.save(); // save current state\r\n                ctx.translate(x, y); // change origin to center of rotation\r\n                ctx.rotate(radians); // rotate\r\n                ctx.drawImage(img, -offsetX, -offsetY, img.width, img.height);\r\n                ctx.restore(); // restore original states (no rotation etc)\r\n            }\r\n        }\r\n        if (clockHand.json.Cover?.ImageIndex >= 0) {\r\n            let x = clockHand.json.Cover?.Coordinates?.X ? clockHand.json.Cover.Coordinates.X : 0\r\n            let y = clockHand.json.Cover?.Coordinates?.Y ? clockHand.json.Cover.Coordinates?.Y : 0\r\n            let img = findImageById(clockHand.json.Cover.ImageIndex, images)\r\n            if ( img ) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  WatchProgressBar } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarCircle(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if ( progressBar.jsonObj?.AngleSettings) {\r\n\r\n            let width = progressBar.jsonObj.Width ? progressBar.jsonObj.Width : 0\r\n\r\n            let angleSettings = progressBar.jsonObj.AngleSettings\r\n            let ax = angleSettings.X ? angleSettings.X : 0\r\n            let ay = angleSettings.Y ? angleSettings.Y : 0\r\n            if (value > total) value = total\r\n            let startAngle = angleSettings.StartAngle ? angleSettings.StartAngle : 0\r\n            let endAngle = angleSettings.EndAngle ? angleSettings.EndAngle : 360\r\n            let sector_angle = startAngle + Math.round(value * (endAngle - startAngle ) / total)\r\n            let radius = angleSettings.Radius  \r\n            \r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n\r\n                    let dX = (ax - radius - (width / 2))\r\n                    let dY = (ay - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    drawArcPath(ctx, progressBar.jsonObj.Flatness, \r\n                        ax, ay, startAngle, sector_angle, radius, width)\r\n                    \r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n\r\n                    /// draw the image\r\n                    ctx.drawImage(img, ax - img.width/2, ay - img.height/2);\r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n\r\n                    let dX = (ax - radius - (width / 2))\r\n                    let dY = (ay - radius - (width / 2))\r\n\r\n                    if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                        const backimg = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                        if (backimg) {\r\n                            ctx.drawImage(backimg, dX, dY, backimg.width, backimg.height);\r\n                        }\r\n                    }\r\n\r\n                    // begin by calling ctx.beginPath\r\n                    ctx.beginPath();\r\n\r\n                    let radianStart = (Math.PI/180) * (startAngle-90)\r\n                    let radianEnd = (Math.PI/180) * (sector_angle-90)\r\n                    let clockwise = radianStart < radianEnd;\r\n                    \r\n                    // calling canvas src with all arguments\r\n                    ctx.arc(ax, ay,\r\n                        radius, radianStart, radianEnd, !clockwise);\r\n                    // set stroke and fill style\r\n                    ctx.strokeStyle = color;\r\n                    ctx.lineWidth = width;\r\n                    // fill, and stroke\r\n                    ctx.stroke();\r\n                    drawColorEndings(ctx, color, progressBar.jsonObj.Flatness, \r\n                        ax, ay, startAngle, sector_angle, radius, width)\r\n                    ctx.lineWidth = 1;\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                if (img) {\r\n                    let _x = ax + (radius) * Math.cos(Math.PI * (sector_angle - 90) / 180)\r\n                    let _y = ay + (radius) * Math.sin(Math.PI * (sector_angle - 90) / 180)\r\n                    ctx.drawImage(img, _x, _y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\nfunction drawArcPath(ctx: CanvasRenderingContext2D, flatness: number, x: number, y: number, \r\n    startAngle: number, endAngle: number, radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        let xc1 = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let yc1 = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let xc2 = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let yc2 = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc1, yc1, width/2, radianStart - Math.PI, radianStart, !clockwise)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.arc(xc2, yc2, width/2, radianEnd , radianEnd + Math.PI, !clockwise)\r\n\r\n    } else if (flatness === 90) {\r\n        // spike\r\n\r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        let x2 = x + (radius) * Math.cos(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        let y2 = y + (radius) * Math.sin(Math.PI * (startAngle - ( clockwise ? 1 : -1) * (width/2 * 360 / (2 * Math.PI * (radius - width / 2))) - 90) / 180)\r\n        \r\n        let x3 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y3 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x4 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y4 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        let x5 = x + (radius) * Math.cos(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y5 = y + (radius) * Math.sin(Math.PI * (endAngle + ( clockwise ? 1 : -1) * width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        \r\n        let x6 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y6 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        \r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        \r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x5, y5);\r\n        ctx.lineTo(x6, y6);\r\n\r\n    } else {\r\n        // flat\r\n        let x1 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        //let x3 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        //let y3 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let x4 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        let y4 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        \r\n        let radianStart = (Math.PI/180) * (startAngle-90)\r\n        let radianEnd = (Math.PI/180) * (endAngle-90)\r\n        let clockwise = radianStart < radianEnd;\r\n\r\n        ctx.arc(x, y, radius-width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.moveTo(x1, y1)\r\n        ctx.lineTo(x2, y2)\r\n        ctx.arc(x, y, radius+width/2, radianStart, radianEnd, !clockwise);\r\n        ctx.lineTo(x4, y4)\r\n    }\r\n}\r\n\r\nfunction drawColorEndings(ctx: CanvasRenderingContext2D, color: string, \r\n    flatness: number, x: number, y: number, startAngle: number, endAngle: number, \r\n    radius: number, width: number) {\r\n    if (width < 3) return\r\n\r\n\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        let _x = x + (radius) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let _y = y + (radius) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n        \r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n\r\n        _x = x + (radius) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        _y = y + (radius) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(_x, _y, width/2-1, 0, 2* Math.PI)\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n    } else if (flatness === 90) {\r\n        // spike\r\n        let x1 = x + (radius+width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y1 = y + (radius+width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x2 = x + (radius-width/2) * Math.cos(Math.PI * (startAngle - 90) / 180)\r\n        let y2 = y + (radius-width/2) * Math.sin(Math.PI * (startAngle - 90) / 180)\r\n\r\n        let x3 = x + (radius) * Math.cos(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        let y3 = y + (radius) * Math.sin(Math.PI * (startAngle - width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        x1 = x + (radius+width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y1 = y + (radius+width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x2 = x + (radius-width/2) * Math.cos(Math.PI * (endAngle - 90) / 180)\r\n        y2 = y + (radius-width/2) * Math.sin(Math.PI * (endAngle - 90) / 180)\r\n\r\n        x3 = x + (radius) * Math.cos(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n        y3 = y + (radius) * Math.sin(Math.PI * (endAngle + width/2 * 360 / (2 * Math.PI * (radius - width / 2)) - 90) / 180)\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.lineTo(x3, y3);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  WatchProgressBar } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawProgressBarLinear(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    progressBar: WatchProgressBar,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if (value > total) value = total\r\n        if ( progressBar.jsonObj?.LinearSettings) {\r\n            let lineB = progressBar.jsonObj.LinearSettings\r\n            if (progressBar.jsonObj?.BackgroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.BackgroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let endy = lineB.EndY ? lineB.EndY : y + img.height\r\n                    let width = Math.min(endx - x, img.width)\r\n                    let height = Math.min(endy - y, img.height)\r\n                    ctx.drawImage(img, x, y, width, height);\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.ForegroundImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.ForegroundImageIndex, images)\r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x + img.width\r\n                    let width = value * (endx - x) / total\r\n                    width = Math.min(width, img.width)\r\n                    let height = progressBar.jsonObj.Width\r\n                    height = Math.min(height, img.height)\r\n                    \r\n                    /// use save when using clip Path\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    drawArcPath(ctx, progressBar.jsonObj.Flatness, x, y, width, height)\r\n                    /// define this Path as clipping mask\r\n                    ctx.clip();\r\n                    \r\n                    /// draw the image\r\n                    ctx.drawImage(img, x, y);\r\n                    \r\n                    //ctx.stroke() // test\r\n                    /// reset clip to default\r\n                    ctx.restore();\r\n                }\r\n            } else if (progressBar.jsonObj?.Color) {\r\n                let color = Color.colorRead(progressBar.jsonObj.Color)\r\n                if ( Color.GFG_Fun(color)) {\r\n                    ctx.fillStyle = color\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let height = progressBar.jsonObj.Width\r\n                    let width = value * (endx - x) / total\r\n                    ctx.fillRect(x, y, width, height)\r\n                    drawColorEndings(ctx, color, progressBar.jsonObj.Flatness, x, y, width, height)\r\n                }\r\n            }\r\n            if (progressBar.jsonObj?.PointerImageIndex) {\r\n                const img = findImageById(progressBar.jsonObj.PointerImageIndex, images)\r\n                \r\n                if (img) {\r\n                    let x = lineB.StartX ? lineB.StartX : 0\r\n                    let y = lineB.StartY ? lineB.StartY : 0\r\n                    let endx = lineB.EndX ? lineB.EndX : x\r\n                    let width = value * (endx - x) / total - img.width\r\n                    if ( width >= 0)\r\n                        ctx.drawImage(img, x + width, y);\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\n\r\nfunction drawArcPath(ctx: CanvasRenderingContext2D,  \r\n    flatness: number, x: number, y: number, width: number, height: number) {\r\n\r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        let xc1 = x \r\n        let y1 = y \r\n        \r\n        let xc2 = x + width - height / 2\r\n        let y2 = y + height\r\n\r\n        ctx.arc(xc1, y + height/2, height/2, 0.5*Math.PI, 1.5*Math.PI );\r\n        ctx.lineTo(xc2, y1)\r\n        ctx.arc(xc2, y + height/2, height/2, 1.5*Math.PI, 0.5*Math.PI );\r\n        ctx.lineTo(xc1, y2)\r\n    } else {\r\n        ctx.rect(x, y, width, height)\r\n    }\r\n}\r\n\r\nfunction drawColorEndings(ctx: CanvasRenderingContext2D, color: string, \r\n    flatness: number, x: number, y: number, width: number, height: number) {\r\n    if (width < 3) return\r\n    \r\n    if (flatness === 0 || !flatness) {\r\n        // round edges\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(x, y, height/2-1, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n\r\n        let x2 = x + width\r\n\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 1;\r\n        ctx.arc(x2, y, height/2-1, 0, 2* Math.PI)\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill()\r\n    } \r\n}","import { IImage } from \"../../model/image.model\";\r\nimport { ActivityType, FollowType } from \"../../model/types.model\";\r\nimport { WatchActivity } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\nimport drawImageProgress from \"./imageProgress.element\";\r\nimport drawPointer from \"./pointer.element\";\r\nimport drawProgressBarCircle from \"./progressBarCircle.element\";\r\nimport drawProgressBarLinear from \"./progressBarLinear.element\";\r\nimport { getSystemFontText } from \"./systemfont.element\";\r\n\r\ninterface IDigitDraw {\r\n    cur: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    min: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    max: {\r\n        value: number,\r\n        total: number\r\n    },\r\n    imageProgress: {\r\n        value: number,\r\n        total: number\r\n    }\r\n}\r\n\r\nexport default function drawActivityList(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    activitys: WatchActivity[],\r\n    watchState: WatchState,\r\n    digitBorder: boolean\r\n    ) {\r\n        let val = 0\r\n        let total = 0\r\n        if (!activitys) return\r\n        activitys.forEach((activity) => {\r\n            switch (activity.type) {\r\n                case ActivityType.Battery:\r\n                    val = watchState.battery\r\n                    total = watchState.batteryGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Steps:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Calories:\r\n                    val = watchState.calories\r\n                    total = watchState.caloriesGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.HeartRate:\r\n                    val = watchState.hearthrate\r\n                    total = watchState.hearthrateGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Pai:\r\n                    val = watchState.pai\r\n                    total = watchState.paiGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Distance:\r\n                    val = watchState.distance\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null,\r\n                        max: null, \r\n                        imageProgress: null}, digitBorder)\r\n                    break;\r\n                case ActivityType.StandUp:\r\n                    val = watchState.standup\r\n                    total = watchState.standupGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total },\r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, digitBorder)\r\n                    break;\r\n                case ActivityType.Weather:\r\n                    drawActivity(ctx, images, activity, {\r\n                        cur: { value: watchState.temperature, total: null },\r\n                        min: { value: watchState.temperatureMin, total: null }, \r\n                        max: { value: watchState.temperatureMax, total: null }, \r\n                        imageProgress: { value: watchState.weatherIcon, total: 29}},\r\n                        digitBorder)\r\n                        break;\r\n                case ActivityType.UVindex:\r\n                    val = watchState.uvIndex\r\n                    total = watchState.uvIndexGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null },\r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirQuality:\r\n                    val = watchState.airQuality\r\n                    total = watchState.airQualityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Humidity:\r\n                    val = watchState.humidity\r\n                    total = watchState.humidityGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null,\r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Sunrise:\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: watchState.sunrise, total: null }, \r\n                        min: { value: watchState.sunrise, total: null }, \r\n                        max: { value: watchState.sunset, total: null }, \r\n                        imageProgress: { value: 1, total: 2}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.WindForce:\r\n                    val = watchState.windForce\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: null }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: null}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.AirPressure:\r\n                    val = watchState.airPressure\r\n                    total = watchState.airPressureGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.Stress:\r\n                    val = watchState.stress\r\n                    total = watchState.stressGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: null, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.ActivityGoal:\r\n                    val = watchState.steps\r\n                    total = watchState.stepsGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                case ActivityType.FatBurning:\r\n                    val = watchState.fatBurning\r\n                    total = watchState.fatBurningGoal\r\n                    drawActivity(ctx, images, activity, { \r\n                        cur: { value: val, total: total }, \r\n                        min: { value: total, total: null }, \r\n                        max: null, \r\n                        imageProgress: { value: val, total: total}}, \r\n                        digitBorder)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n}\r\n\r\nfunction drawActivity(ctx: CanvasRenderingContext2D, images: IImage[], a: WatchActivity, values: IDigitDraw, digitBorder: boolean) {\r\n    let followXY = null\r\n\r\n    if (a.imageProgress.enabled) {\r\n        drawImageProgress(ctx, images, a.imageProgress, values.imageProgress.value, values.imageProgress.total)\r\n    }\r\n    if (a.progressBar.enabledLinear) {\r\n        drawProgressBarLinear(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.progressBar.enabledCircle) {\r\n        drawProgressBarCircle(ctx, images, a.progressBar, values.cur.value, values.cur.total)\r\n    }\r\n    if (a.pointerProgress.enabled) {\r\n        drawPointer(ctx, images, a.pointerProgress, values.cur.value, values.cur.total, a.progressBar.enabledLinear || a.progressBar.enabledCircle)\r\n    }\r\n    if (a.icon.enabled) {\r\n        drawImageCoords(ctx, images, a.icon.json)\r\n    }\r\n    if (a.digit?.enabled) {\r\n        followXY = drawDigit(ctx, images, a.digit, values.cur.value, followXY, digitBorder, false, getSystemFontText(a.digit, values.cur.value))\r\n    }\r\n    if (a.digitMin?.enabled && values.min) {\r\n        followXY = drawDigit(ctx, images, a.digitMin, values.min.value, a.digitMin.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, getSystemFontText(a.digitMin, values.min.value))\r\n    }\r\n    if (a.digitMax?.enabled && values.max) {\r\n        drawDigit(ctx, images, a.digitMax, values.max.value, a.digitMax.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, getSystemFontText(a.digitMax, values.max.value))\r\n    }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { WatchImageProgress } from \"../../model/watchFace.model\";\r\n\r\nexport default function drawImageProgress(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    imageProgress: WatchImageProgress,\r\n    value: number, total: number) {\r\n        if (total === null) return\r\n        if (imageProgress.enabled && imageProgress.json.ImageSet?.ImageIndex) {\r\n            if ( imageProgress.json.Coordinates) {\r\n\r\n                let count = imageProgress.json.ImageSet.ImagesCount-1\r\n                let coors = imageProgress.json.Coordinates\r\n\r\n                let s = Math.ceil(value / (total / count))\r\n                if (s > count) s = count\r\n\r\n                if (value > total) value = total\r\n\r\n                let initial = 0\r\n                if (!imageProgress.json.DisplayType)\r\n                    initial = s\r\n\r\n                for (let i = initial; i <= s; i++) {\r\n                    let x = i < coors.length ? (coors[i].X ? coors[i].X : 0) : (coors[coors.length-1].X ? coors[coors.length-1].X : 0)\r\n                    let y = i < coors.length ? (coors[i].Y ? coors[i].Y : 0) : (coors[coors.length-1].Y ? coors[coors.length-1].Y : 0)\r\n                    let imageIndex = imageProgress.json.ImageSet.ImageIndex + i\r\n                    const img = findImageById(imageIndex, images)\r\n                    if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n                }\r\n            }\r\n        }\r\n}","import { IImage } from \"../../model/image.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { ElementOrderItem, WatchDate } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function draw(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    date: WatchDate,\r\n    orderElementsDate: ElementOrderItem[],\r\n    watchState: WatchState,\r\n    drawborder: boolean\r\n    ) {\r\n        let followXY = null\r\n\r\n        let s: string[] = []\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            s[i] = ''\r\n        }\r\n       \r\n        for (let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            let _temp = null\r\n            let _follow = false\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        _follow = date.year.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.year.toString().padStart(date.year.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.year)\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        _follow = date.month.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.month.toString().padStart(date.month.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.month)\r\n                    } \r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        _follow = date.day.json.CombingMode === FollowType.Follow.json\r\n                        _temp = watchState.day.toString().padStart(date.day.con.numberLenght, '0')\r\n                        _temp = addUnitsAndSeparator(_temp, date.day)\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (_temp) {\r\n                for(let j = i+1; j < orderElementsDate.length ; j++) {\r\n                    s[j] = s[j] + _temp\r\n                }\r\n                if (!_follow) {\r\n                    s[i] = s[i] + _temp\r\n                } else {\r\n                    if ( s[i-1] !== '')\r\n                        s[i-1] = s[i-1] + _temp\r\n                    else \r\n                        s[i-2] = s[i-2] + _temp\r\n                    s[i] = ''\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < orderElementsDate.length; i++) {\r\n            let item = orderElementsDate[i]\r\n            switch (item.type) {\r\n                case 0:\r\n                    if (date.year.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.year, watchState.year, date.year.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (date.month.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.month, watchState.month, date.month.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    } else if (date.monthAsWord.enabled) {\r\n                        drawDigit(ctx, images, date.monthAsWord, watchState.monthasword)\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (date.day.enabled) {\r\n                        followXY = drawDigit(ctx, images, date.day, watchState.day, date.day.json.CombingMode === FollowType.Single.json ? null : followXY, drawborder, false, s[i])\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (date.weekDay.enabled) {\r\n            drawDigit(ctx, images, date.weekDay, watchState.weekday)\r\n        }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { Constant } from \"../../shared/constant\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { MultilangImage } from \"../../model/json.model\";\r\nimport { WatchClockHand } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawclockhand(ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    clockHand: WatchClockHand, value: number, total: number) {\r\n        if (total === null) return\r\n        if (clockHand.json.Scale) {\r\n            const scaleImageSetIndex = findImageIndex(clockHand.json.Scale?.ImageSet);\r\n            if (clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex >= 0) {\r\n                let x = clockHand.json.Scale.Coordinates?.X ? clockHand.json.Scale.Coordinates?.X : 0\r\n                let y = clockHand.json.Scale.Coordinates?.Y ? clockHand.json.Scale.Coordinates?.Y : 0\r\n                let img = findImageById(clockHand.json.Scale.ImageSet[scaleImageSetIndex].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n            }\r\n        }\r\n        if (clockHand.json.Pointer?.ImageIndex >= 0) {\r\n            let x = clockHand.json.X ? clockHand.json.X : 0\r\n            let y = clockHand.json.Y ? clockHand.json.Y : 0\r\n            if ( !clockHand.json.X && !clockHand.json.Y) {\r\n                x = clockHand.json.X ? clockHand.json.X : Constant.width / 2\r\n                y = clockHand.json.Y ? clockHand.json.Y : Constant.height / 2\r\n            }\r\n            let img = findImageById(clockHand.json.Pointer?.ImageIndex, images)\r\n            if (img) {\r\n                let offsetX = clockHand.json.Pointer.Coordinates?.X ? clockHand.json.Pointer.Coordinates?.X : img.width / 2\r\n                let offsetY = clockHand.json.Pointer.Coordinates?.Y ? clockHand.json.Pointer.Coordinates?.Y : img.height / 2\r\n                \r\n                let _startAngle = clockHand.json.StartAngle ? clockHand.json.StartAngle: 0\r\n                let _endAngle = clockHand.json.EndAngle ? clockHand.json.EndAngle: 360\r\n                let angle = _startAngle + Math.round(value * (_endAngle - _startAngle ) / total)\r\n                angle = Math.min(angle, _endAngle)\r\n                angle = Math.max(angle, _startAngle)\r\n                let radians = (Math.PI/180) * angle\r\n                \r\n                ctx.save(); // save current state\r\n                ctx.translate(x, y); // change origin to center of rotation\r\n                ctx.rotate(radians); // rotate\r\n                ctx.drawImage(img, -offsetX, -offsetY, img.width, img.height);\r\n                ctx.restore(); // restore original states (no rotation etc)\r\n            }\r\n        }\r\n        if (clockHand.json.Cover?.ImageIndex >= 0) {\r\n            let x = clockHand.json.Cover?.Coordinates?.X ? clockHand.json.Cover.Coordinates.X : 0\r\n            let y = clockHand.json.Cover?.Coordinates?.Y ? clockHand.json.Cover.Coordinates?.Y : 0\r\n            let img = findImageById(clockHand.json.Cover.ImageIndex, images)\r\n            if ( img ) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index ? index : 0\r\n  }","import { IImage } from \"../../model/image.model\";\r\nimport { WatchDialFace } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawClockHand from \"./clockHand.element\";\r\n\r\n    export default function drawTimeAnalog(ctx: CanvasRenderingContext2D, \r\n        images: IImage[],\r\n        dialFace: WatchDialFace,\r\n        watchState: WatchState\r\n        ) {\r\n        if ( dialFace.hoursClockhand?.enabled) {\r\n            if ( watchState.hours < 12)\r\n                drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours, 12 )\r\n            else \r\n            drawClockHand(ctx, images, dialFace.hoursClockhand, watchState.hours-12, 12 )\r\n        }\r\n        if ( dialFace.minutesClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.minutesClockhand, watchState.minutes, 60 )\r\n        }\r\n        if ( dialFace.secondsClockhand?.enabled) {\r\n            drawClockHand(ctx, images, dialFace.secondsClockhand, watchState.seconds, 60 )\r\n        }\r\n    }\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport {  MultilangImage } from \"../../model/json.model\";\r\nimport { WatchMultilangImageCoords } from \"../../model/watchFace.model\";\r\nimport { LangCodeType } from \"../../model/types.model\";\r\n\r\nexport default function drawMultilangImageCoords(ctx: CanvasRenderingContext2D, images: IImage[], \r\n    imageCoord: WatchMultilangImageCoords) {\r\n\r\n        const imageSetIndex = findImageIndex(imageCoord.json?.ImageSet);\r\n    \r\n        if (imageCoord.json.ImageSet &&\r\n            imageCoord.json.ImageSet[imageSetIndex]?.ImageSet?.ImageIndex) {\r\n\r\n            let x = imageCoord.json.Coordinates?.X ? imageCoord.json.Coordinates.X : 0\r\n            let y = imageCoord.json.Coordinates?.Y ? imageCoord.json.Coordinates.Y : 0\r\n            const img = findImageById(imageCoord.json.ImageSet[imageSetIndex].ImageSet.ImageIndex, images)\r\n            if (img) ctx.drawImage(img, x, y, img.width, img.height);\r\n        }\r\n}\r\n\r\nfunction findImageIndex(ar: MultilangImage[]): number {\r\n    if (!ar) return null\r\n    let index = ar.findIndex((item) => item.LangCode === LangCodeType.All.json)\r\n    return index >= 0 ? index : 0\r\n  }","import { IImage } from \"../../model/image.model\";\r\nimport { FollowType } from \"../../model/types.model\";\r\nimport { WatchDialFace } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawDigit from \"./digit.element\";\r\nimport drawMultilangImageCoords from \"./multiLangImageCoords.element\";\r\nimport { addUnitsAndSeparator } from \"./systemfont.element\";\r\n\r\nexport default function drawTimeDigital(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    timeDigital: WatchDialFace,\r\n    watchState: WatchState,\r\n    digitBorder: boolean\r\n    ) {\r\n    let followXY = null\r\n\r\n    let s_hours = ''\r\n    let s_minutes = ''\r\n    let s_seconds = ''\r\n   \r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        s_seconds = watchState.seconds.toString().padStart(timeDigital.secondsDigital.con.numberLenght, '0')\r\n        s_seconds = addUnitsAndSeparator(s_seconds, timeDigital.secondsDigital)\r\n    }\r\n    \r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        s_minutes = watchState.minutes.toString().padStart(timeDigital.minutesDigital.con.numberLenght, '0')\r\n        s_minutes = addUnitsAndSeparator(s_minutes, timeDigital.minutesDigital)\r\n        if (timeDigital.secondsDigital?.enabled ) {\r\n            if (timeDigital.secondsDigital.json.CombingMode === FollowType.Follow.json) {\r\n                s_minutes = s_minutes + s_seconds\r\n                s_seconds = ''\r\n            } else {\r\n                s_seconds = s_minutes + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        s_hours = watchState.hours.toString()\r\n        if (timeDigital.hoursDigital.json.Digit.PaddingZero) s_hours = s_hours.padStart(timeDigital.hoursDigital.con.numberLenght, '0')\r\n        s_hours = addUnitsAndSeparator(s_hours, timeDigital.hoursDigital)\r\n        if (timeDigital.minutesDigital.json.CombingMode === FollowType.Follow.json) {\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Follow.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n            s_hours = s_hours + s_minutes\r\n            s_minutes = ''\r\n        } else {\r\n            s_minutes = s_hours + s_minutes\r\n            if (timeDigital.secondsDigital?.enabled ) {\r\n                if (timeDigital.secondsDigital.json.CombingMode !== FollowType.Follow.json) \r\n                    s_seconds = s_hours + s_seconds\r\n            }\r\n        }\r\n    }\r\n\r\n    if (timeDigital.hoursDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.hoursDigital, watchState.hours,\r\n            timeDigital.hoursDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, false, s_hours)\r\n    }\r\n\r\n    if (timeDigital.minutesDigital?.enabled) {\r\n        followXY = drawDigit(ctx, images, timeDigital.minutesDigital, watchState.minutes, \r\n            timeDigital.minutesDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_minutes)\r\n    }\r\n\r\n    if (timeDigital.secondsDigital?.enabled) {\r\n        drawDigit(ctx, images, timeDigital.secondsDigital, watchState.seconds, \r\n            timeDigital.secondsDigital.json.CombingMode === FollowType.Single.json ? null : followXY, digitBorder, true, s_seconds)\r\n    }\r\n\r\n    if (timeDigital.am && watchState.hours < 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.am)\r\n    }\r\n    if (timeDigital.pm && watchState.hours >= 12) {\r\n        drawMultilangImageCoords(ctx, images, timeDigital.pm)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IImage } from \"../../model/image.model\";\r\nimport { WatchWidget, WatchWidgets } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport drawActivityList from \"./activity.element\";\r\n\r\nexport default function drawWidgets(\r\n    ctx: CanvasRenderingContext2D,\r\n    images: IImage[],\r\n    widgets: WatchWidgets,\r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    ) {\r\n    if (widgets) {\r\n        widgets.widgets.forEach((widget, index) => {\r\n            drawWidget(ctx, images, index, widget, watchState, digitBorder, borderWidget, showWidgetPreview, widgets.topMaskImageIndex, widgets.underMaskImageIndex)\r\n        });\r\n    }\r\n}\r\n\r\nfunction drawWidget(\r\n    ctx: CanvasRenderingContext2D, \r\n    images: IImage[], \r\n    index: number,\r\n    widget: WatchWidget, \r\n    watchState: WatchState,\r\n    digitBorder: boolean,\r\n    borderWidget: boolean,\r\n    showWidgetPreview: boolean,\r\n    topMask: number,\r\n    bottomMask: number,\r\n    ) {\r\n    if (widget) {\r\n        if (widget.widgetElements && widget.widgetElements.length > 0) {\r\n            let previewIndex = watchState.widgets && index < watchState.widgets.length ? watchState.widgets[index] : 0\r\n            if (showWidgetPreview && widget.widgetElements[previewIndex].previewImageIndex) {\r\n                // show only previews of widgets\r\n                const imgBack = findImageById(bottomMask, images)\r\n                if (imgBack) ctx.drawImage(imgBack, 0, 0)\r\n                \r\n                let preview = widget.widgetElements[previewIndex].previewImageIndex;\r\n                const img = findImageById(preview[preview].ImageSet.ImageIndex, images)\r\n                if (img) ctx.drawImage(img, widget.x, widget.y)\r\n\r\n                const imgTop = findImageById(topMask, images)\r\n                if (imgTop) ctx.drawImage(imgTop, 0, 0)\r\n            } else {\r\n                // show all activities\r\n                let ar = widget.widgetElements[previewIndex].activitys;\r\n                drawActivityList(ctx, images, ar, watchState, digitBorder)\r\n            }\r\n        }\r\n        if (borderWidget) {\r\n            ctx.strokeStyle = 'white'\r\n            ctx.strokeRect(widget.x, widget.y, widget.width, widget.height)\r\n        } \r\n    }\r\n}\r\n\r\n\r\n","import { FC, useContext, useState } from \"react\";\r\n\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\nimport { IImage } from \"../model/image.model\";\r\nimport Canvas from \"./canvas.function\";\r\nimport drawActivity from \"./preview/activity.element\";\r\nimport drawBackground from \"./preview/background.element\";\r\nimport drawAodBackground from \"./preview/backgroundaod.element\";\r\nimport drawDate from \"./preview/date.element\";\r\nimport drawStatus from \"./preview/status.element\";\r\nimport drawTimeAnalog from \"./preview/timeAnalog.element\";\r\nimport drawTimeDigital from \"./preview/timeDigital.element\";\r\nimport drawWidgets from \"./preview/widgets.element\";\r\nimport cl from \"./previewComponent.module.css\";\r\n\r\ninterface IProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst storage_items = {\r\n  preview_white_grid: \"preview_white_grid\",\r\n  preview_black_grid: \"preview_black_grid\",\r\n  preview_digit_border: \"preview_digit_border\",\r\n};\r\n\r\nconst PreviewComponent: FC<IProps> = ({ width, height }) => {\r\n  const { images, watchface, watchState, previewScreenNormal } =\r\n    useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  const [borderWidget, setBorderWidget] = useState<boolean>(false)\r\n  const [showWidgetPreview, setShowWidgetPreview] = useState<boolean>(false)\r\n\r\n  const [x, setX] = useState<number>(0);\r\n  const [y, setY] = useState<number>(0);\r\n  const [whiteGrid, setWhiteGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_white_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_white_grid))\r\n      : false\r\n  );\r\n  const [blackGrid, setBlackGrid] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_black_grid)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_black_grid))\r\n      : false\r\n  );\r\n  const [digitBorder, setDigitBorder] = useState<boolean>(\r\n    localStorage.getItem(storage_items.preview_digit_border)\r\n      ? JSON.parse(localStorage.getItem(storage_items.preview_digit_border))\r\n      : false\r\n  );\r\n\r\n  function draw(canvas, ctx: CanvasRenderingContext2D) {\r\n    if (images && watchface) {\r\n      if (canvas) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (previewScreenNormal) drawNormal(canvas, ctx, images)\r\n        else drawAod(canvas, ctx, images)\r\n        drawGrid(ctx);\r\n      } else {\r\n        console.error(\"don't find canvas with id canvasPreview\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawNormal(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.background) drawBackground(canvas, ctx, images, watchface.background);\r\n    if (watchface.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.date,\r\n        watchface.orderElements.orderElementsDate,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.activity) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.activity,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.status) {\r\n      drawStatus(ctx, images, watchface.status, watchState);\r\n    }\r\n    if (watchface.widgets.enabled) {\r\n      drawWidgets(ctx, images, watchface.widgets, watchState, digitBorder, borderWidget, showWidgetPreview)\r\n    }\r\n    if (watchface.dialFace) {\r\n      if (!showWidgetPreview || watchface.widgets?.showTimeOnEditScreen === 1) {\r\n        drawTimeDigital(\r\n          ctx,\r\n          images,\r\n          watchface.dialFace,\r\n          watchState,\r\n          digitBorder\r\n        );\r\n        drawTimeAnalog(ctx, images, watchface.dialFace, watchState);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function drawAod(canvas, ctx: CanvasRenderingContext2D, images: IImage[]) {\r\n    if (watchface.aod) {\r\n      drawAodBackground(canvas, ctx, images, watchface.aod.backgroundImageIndex);\r\n    }\r\n    if (watchface.aod.date) {\r\n      drawDate(\r\n        ctx,\r\n        images,\r\n        watchface.aod.date,\r\n        watchface.orderElements.orderElementsDate,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.activitylist) {\r\n      drawActivity(\r\n        ctx,\r\n        images,\r\n        watchface.aod.activitylist,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n    }\r\n    if (watchface.aod.dialFace) {\r\n      drawTimeDigital(\r\n        ctx,\r\n        images,\r\n        watchface.aod.dialFace,\r\n        watchState,\r\n        digitBorder\r\n      );\r\n      drawTimeAnalog(ctx, images, watchface.aod.dialFace, watchState);\r\n    }\r\n  }\r\n\r\n  function getCursorPosition(event) {\r\n    const canvas = document.getElementById(\r\n      \"canvasPreview\"\r\n    ) as HTMLCanvasElement;\r\n    const rect = canvas.getBoundingClientRect();\r\n    let x = event.clientX - rect.left;\r\n    let y = event.clientY - rect.top;\r\n    x = Math.min(width, Math.max(0, Math.round(x)));\r\n    y = Math.min(height, Math.max(0, Math.round(y)));\r\n    setX(x);\r\n    setY(y);\r\n  }\r\n\r\n  function onToggleWhiteGrid() {\r\n    const wg = !whiteGrid;\r\n    setWhiteGrid(wg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(wg));\r\n  }\r\n\r\n  function onToggleBlackGrid() {\r\n    const bg = !blackGrid;\r\n    setBlackGrid(bg);\r\n    localStorage.setItem(storage_items.preview_white_grid, JSON.stringify(bg));\r\n  }\r\n\r\n  function onToggleDigitBorder() {\r\n    const db = !digitBorder;\r\n    setDigitBorder(db);\r\n    localStorage.setItem(\r\n      storage_items.preview_digit_border,\r\n      JSON.stringify(db)\r\n    );\r\n  }\r\n\r\n  function drawGrid(ctx: CanvasRenderingContext2D) {\r\n    if (!whiteGrid && !blackGrid) return;\r\n    const stroke = whiteGrid ? \"white\" : \"black\";\r\n    const step = 20;\r\n    for (let i = width / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = width / 2; i < width; i += step) {\r\n      drawLine(ctx, [i, 0], [i, height], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i > 0; i -= step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    for (let i = height / 2; i < height; i += step) {\r\n      drawLine(ctx, [0, i], [width, i], stroke, 1);\r\n    }\r\n    drawLine(ctx, [width / 2 - 1, 0], [width / 2 - 1, height], stroke, 2);\r\n    drawLine(ctx, [0, height / 2 - 1], [width, height / 2 - 1], stroke, 2);\r\n  }\r\n\r\n  function drawLine(\r\n    ctx: CanvasRenderingContext2D,\r\n    begin: [number, number],\r\n    end: [number, number],\r\n    stroke = \"black\",\r\n    width = 1\r\n  ) {\r\n    if (stroke) {\r\n      ctx.strokeStyle = stroke;\r\n    }\r\n\r\n    if (width) {\r\n      ctx.lineWidth = width;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(begin[0], begin[1]);\r\n    ctx.lineTo(end[0], end[1]);\r\n    ctx.stroke();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={cl.canvasCcontainer}>\r\n        {previewScreenNormal? 'Screen Normal' : 'AOD'}\r\n        <div>\r\n          x: {x}, y: {y}\r\n        </div>\r\n        <Canvas\r\n          id='canvasPreview'\r\n          draw={draw}\r\n          className={cl.canvasPreview}\r\n          width={width}\r\n          height={height}\r\n          onClick={getCursorPosition}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <div>\r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            White grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={whiteGrid}\r\n              onChange={onToggleWhiteGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            Black grid\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={blackGrid}\r\n              onChange={onToggleBlackGrid}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on digit\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={digitBorder}\r\n              onChange={onToggleDigitBorder}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group input-group-sm\" style={{ width: \"max-content\" }}>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            border on widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={borderWidget}\r\n              onChange={() => setBorderWidget(!borderWidget)}\r\n            />\r\n          </div>\r\n          <span className=\"input-group-text\" id=\"addon-wrapping\">\r\n            show preview of widgets\r\n          </span>\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              className=\"form-check-input mt-0\"\r\n              type=\"checkbox\"\r\n              checked={showWidgetPreview}\r\n              onChange={() => setShowWidgetPreview(!showWidgetPreview)}\r\n            />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewComponent;\r\n","import Color from \"../../shared/color\";\r\nimport { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\nimport { Background } from \"../../model/watchFace.model\";\r\n  \r\nexport default function draw(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], background: Background) {\r\n    if (background?.imageIndex !== undefined && background?.imageIndex !== null) {\r\n        const i = findImageById(background.imageIndex, images)\r\n        //images[Constant.getImageIndex(background.imageIndex, images.length)]\r\n        if (i) {\r\n            const img = i\r\n            ctx.drawImage(img, 0, 0, img.width, img.height);\r\n        }\r\n    } else if (background.color && Color.GFG_Fun(background.color)) {\r\n        ctx.fillStyle = background.color\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { IImage } from \"../../model/image.model\";\r\nimport { WatchStatus } from \"../../model/watchFace.model\";\r\nimport { WatchState } from \"../../model/watchState\";\r\nimport drawImageCoords from \"./imageCoords.element\";\r\n\r\nexport default function draw(ctx: CanvasRenderingContext2D, \r\n    images: IImage[],\r\n    status: WatchStatus,\r\n    watchState: WatchState\r\n    ) {\r\n        if (status.bluetooth.enabled && !watchState.bluetooth) {\r\n            drawImageCoords(ctx, images, status.bluetooth.json)\r\n        }\r\n        if (status.dnd.enabled && watchState.dnd) {\r\n            drawImageCoords(ctx, images, status.dnd.json)\r\n        }\r\n        if (status.alarm.enabled && watchState.alarm) {\r\n            drawImageCoords(ctx, images, status.alarm.json)\r\n        }\r\n        if (status.lock.enabled && watchState.lock) {\r\n            drawImageCoords(ctx, images, status.lock.json)\r\n        }\r\n}\r\n","import { findImageById } from \"../../shared/helper\";\r\nimport { IImage } from \"../../model/image.model\";\r\n\r\nexport default function drawAodBackground(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, \r\n                images: IImage[], imageIndex: number) {\r\n    if (imageIndex !== undefined && imageIndex !== null) {\r\n            const img = findImageById(imageIndex, images)\r\n            if (img) {\r\n                ctx.drawImage(img, 0, 0, img.width, img.height);\r\n            }\r\n    } else {\r\n        ctx.fillStyle = 'black'\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { IWatchContext, WatchfaceContext } from \"../context\";\r\n\r\n\r\nconst UploadedImagesomponent: FC = () => {\r\n  const { images } = useContext<IWatchContext>(WatchfaceContext);\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center\">\r\n      { images.length > 0 ? \r\n      <div>\r\n        <h2>number of images: {images.length} </h2>\r\n        <ul className=\"list-group blocks\" style={{width: \"100%\"}}>\r\n          {images.map( (img) => \r\n              <li\r\n              key={img.id}\r\n              value={img.id}\r\n              className=\"list-group-item fileitem\"\r\n            >\r\n              {<img src={img.image.src} alt={img.name} width={30} />}\r\n              {img.name}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        </div>\r\n    : <div>\r\n      no uploaded images\r\n    </div>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadedImagesomponent;\r\n","import { FC, useState } from \"react\";\r\nimport { Constant } from \"../shared/constant\";\r\nimport ElementOrderComponent from \"./elementOrder.component\";\r\nimport JsonComponent from \"./json.component\";\r\nimport PreviewComponent from \"./preview.component\";\r\nimport UploadedImagesomponent from \"./uploadedImages.component\";\r\n\r\nconst tabs = [\r\n  { id: 0, name: \"Preview\" },\r\n  { id: 1, name: \"Element Order\" },\r\n  { id: 2, name: \"Uploaded Images\" },\r\n  { id: 3, name: \"Json\" },\r\n];\r\n\r\nconst RightSideComponent: FC = () => {\r\n  const [tabRight, setTabRight] = useState<number>(0);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <li key={tab.id} className=\"nav-item\">\r\n              <button\r\n                className={`nav-link ${tabRight === tab.id ? \"active\" : \"\"} `}\r\n                onClick={() => setTabRight(tab.id)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {tabRight === 0 ? (\r\n        <PreviewComponent width={Constant.width} height={Constant.height} />\r\n      ) : tabRight === 1 ? (\r\n        <ElementOrderComponent />\r\n      ) : tabRight === 2 ? (\r\n        <UploadedImagesomponent />\r\n      ) : (\r\n        <JsonComponent />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideComponent;\r\n","export class WatchState {\r\n  _date = new Date();\r\n  year = this._date.getFullYear();\r\n  month = this._date.getMonth() + 1;\r\n  monthasword = this._date.getMonth();\r\n  day = this._date.getDate();\r\n  hours = this._date.getHours();\r\n  minutes = this._date.getMinutes();\r\n  seconds = this._date.getSeconds();\r\n  weekday = this._date.getDay() > 0 ? this._date.getDay() - 1 : 6;\r\n  batteryGoal = 100;\r\n  battery = Math.round(Math.random() * this.batteryGoal);\r\n  stepsGoal = (Math.round(Math.random() * 5) + 5) * 1000;\r\n  steps = Math.round(Math.random() * this.stepsGoal);\r\n  caloriesGoal = 200;\r\n  calories = Math.round(Math.random() * this.caloriesGoal);\r\n  hearthrateGoal = 220\r\n  hearthrate = Math.round(Math.random() * 200);\r\n  distance = Math.round(Math.random() * 1000) + 1000;\r\n  paiGoal = 100;\r\n  pai = Math.round(Math.random() * this.paiGoal);\r\n  standupGoal = 12;\r\n  standup = Math.round(Math.random() * this.standupGoal);\r\n  bluetooth = true;\r\n  dnd = true;\r\n  lock = false;\r\n  alarm = true;\r\n  \r\n  temperature = Math.round(Math.random() * 10);\r\n  temperatureMin = this.temperature - Math.round(Math.random() * 10)\r\n  temperatureMax = this.temperature + Math.round(Math.random() * 10)\r\n  weatherIcon = Math.round(Math.random() * 29);\r\n  \r\n  uvIndexGoal = 11\r\n  uvIndex = Math.round(Math.random() * this.uvIndexGoal)\r\n  airQualityGoal = 500\r\n  airQuality = Math.round(Math.random() * this.airQualityGoal)\r\n  humidityGoal = 100\r\n  humidity = Math.round(Math.random() * this.humidityGoal)\r\n  \r\n  sunrise = 536\r\n  sunset = 1742\r\n\r\n  windForce = Math.round(Math.random() * 12)\r\n\r\n  airPressureGoal = 100\r\n  airPressure = Math.round(Math.random() * this.airPressureGoal)\r\n\r\n  stressGoal = 100\r\n  stress = Math.round(Math.random() * this.stressGoal)\r\n\r\n  fatBurningGoal = 30\r\n  fatBurning = Math.round(Math.random() * this.fatBurningGoal)\r\n\r\n  widgets: number[] = []\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FC, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport \"./App.css\";\nimport FileLoaderComponent from \"./app/main/fileLoader.component\";\nimport LeftSideComponent from \"./app/main/leftside.component\";\nimport RightSideComponent from \"./app/main/rightside.component\";\nimport { IImage } from \"./app/model/image.model\";\nimport WatchFace from \"./app/model/watchFace.model\";\nimport { WatchState } from \"./app/model/watchState\";\nimport { WatchfaceContext } from \"./app/context\";\n\nconst App: FC = () => {\n  const [images, setImages] = useState<IImage[]>([]);\n  const [watchface, setWatchface] = useState<WatchFace>(new WatchFace());\n  const [watchState, setWatchState] = useState<WatchState>(new WatchState());\n\n  const [jsonName, setJsonName] = useState<string>(null);\n  const [previewScreenNormal, setPreviewScreenNormal] = useState<boolean>(true);\n\n  return (\n    <WatchfaceContext.Provider\n      value={{\n        images,\n        setImages,\n        watchface,\n        setWatchface,\n        watchState,\n        setWatchState,\n        jsonName,\n        setJsonName,\n        previewScreenNormal,\n        setPreviewScreenNormal,\n      }}\n    >\n      <Container className=\"App d-flex flex-column min-vh-100 vh-100\">\n        <Row className=\"header\">\n          <FileLoaderComponent />\n        </Row>\n        <Row className=\"main\">\n          <Col xs={6} className=\"leftcol\">\n            <LeftSideComponent />\n          </Col>\n          <Col xs={6} className=\"rightcol\">\n            <RightSideComponent />\n          </Col>\n        </Row>\n      </Container>\n    </WatchfaceContext.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}